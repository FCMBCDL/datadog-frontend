{
  "version": 3,
  "sources": ["../../@datadog/browser-core/src/tools/display.ts", "../../@datadog/browser-core/src/tools/utils/numberUtils.ts", "../../@datadog/browser-core/src/tools/utils/timeUtils.ts", "../../@datadog/browser-core/src/tools/getGlobalObject.ts", "../../@datadog/browser-core/src/tools/monitor.ts", "../../@datadog/browser-core/src/tools/getZoneJsOriginalValue.ts", "../../@datadog/browser-core/src/tools/timer.ts", "../../@datadog/browser-core/src/tools/utils/byteUtils.ts", "../../@datadog/browser-core/src/tools/utils/responseUtils.ts", "../../@datadog/browser-core/src/domain/error/error.types.ts", "../../@datadog/browser-core/src/transport/sendWithRetryStrategy.ts", "../../@datadog/browser-core/src/transport/httpRequest.ts", "../../@datadog/browser-core/src/transport/eventBridge.ts", "../../@datadog/browser-core/src/browser/addEventListener.ts", "../../@datadog/browser-core/src/tools/utils/polyfills.ts", "../../@datadog/browser-core/src/tools/observable.ts", "../../@datadog/browser-core/src/browser/pageMayExitObservable.ts", "../../@datadog/browser-core/src/tools/utils/functionUtils.ts", "../../@datadog/browser-core/src/tools/serialisation/jsonStringify.ts", "../../@datadog/browser-core/src/transport/batch.ts", "../../@datadog/browser-core/src/transport/flushController.ts", "../../@datadog/browser-core/src/transport/startBatchWithReplica.ts", "../../@datadog/browser-core/src/tools/serialisation/sanitize.ts", "../../@datadog/browser-core/src/tools/stackTrace/computeStackTrace.ts", "../../@datadog/browser-core/src/tools/stackTrace/handlingStack.ts", "../../@datadog/browser-core/src/domain/error/error.ts", "../../@datadog/browser-core/src/tools/utils/objectUtils.ts", "../../@datadog/browser-core/src/tools/experimentalFeatures.ts", "../../@datadog/browser-core/src/domain/intakeSites.ts", "../../@datadog/browser-core/src/tools/sendToExtension.ts", "../../@datadog/browser-core/src/tools/utils/typeUtils.ts", "../../@datadog/browser-core/src/tools/mergeInto.ts", "../../@datadog/browser-core/src/domain/connectivity/connectivity.ts", "../../@datadog/browser-core/src/tools/utils/arrayUtils.ts", "../../@datadog/browser-core/src/tools/boundedBuffer.ts", "../../@datadog/browser-core/src/domain/telemetry/rawTelemetryEvent.types.ts", "../../@datadog/browser-core/src/domain/telemetry/telemetry.ts", "../../@datadog/browser-core/src/tools/catchUserErrors.ts", "../../@datadog/browser-core/src/tools/utils/stringUtils.ts", "../../@datadog/browser-core/src/tools/utils/browserDetection.ts", "../../@datadog/browser-core/src/browser/cookie.ts", "../../@datadog/browser-core/src/domain/session/storeStrategies/sessionStoreStrategy.ts", "../../@datadog/browser-core/src/domain/session/sessionConstants.ts", "../../@datadog/browser-core/src/domain/session/sessionStateValidation.ts", "../../@datadog/browser-core/src/domain/session/sessionState.ts", "../../@datadog/browser-core/src/domain/session/oldCookiesMigration.ts", "../../@datadog/browser-core/src/domain/session/storeStrategies/sessionInCookie.ts", "../../@datadog/browser-core/src/domain/session/storeStrategies/sessionInLocalStorage.ts", "../../@datadog/browser-core/src/domain/session/sessionStoreOperations.ts", "../../@datadog/browser-core/src/domain/session/sessionStore.ts", "../../@datadog/browser-core/src/domain/trackingConsent.ts", "../../@datadog/browser-core/src/tools/matchOption.ts", "../../@datadog/browser-core/src/domain/extension/extensionUtils.ts", "../../@datadog/browser-core/src/domain/allowedTrackingOrigins.ts", "../../@datadog/browser-core/src/tools/utils/urlPolyfill.ts", "../../@datadog/browser-core/src/domain/configuration/endpointBuilder.ts", "../../@datadog/browser-core/src/domain/configuration/tags.ts", "../../@datadog/browser-core/src/domain/configuration/transportConfiguration.ts", "../../@datadog/browser-core/src/domain/configuration/configuration.ts", "../../@datadog/browser-core/src/boot/init.ts", "../../@datadog/browser-core/src/tools/instrumentMethod.ts", "../../@datadog/browser-core/src/domain/error/trackRuntimeError.ts", "../../@datadog/browser-core/src/boot/displayAlreadyInitializedError.ts", "../../@datadog/browser-core/src/domain/report/reportObservable.ts", "../../@datadog/browser-core/src/tools/valueHistory.ts", "../../@datadog/browser-core/src/domain/synthetics/syntheticsWorkerValues.ts", "../../@datadog/browser-core/src/domain/session/sessionManager.ts", "../../@datadog/browser-core/src/tools/encoder.ts", "../../@datadog/browser-core/src/tools/abstractLifeCycle.ts", "../../@datadog/browser-core/src/domain/eventRateLimiter/createEventRateLimiter.ts", "../../@datadog/browser-core/src/browser/runOnReadyState.ts", "../../@datadog/browser-core/src/browser/xhrObservable.ts", "../../@datadog/browser-core/src/browser/fetchObservable.ts", "../../@datadog/browser-core/src/tools/requestIdleCallback.ts", "../../@datadog/browser-core/src/tools/taskQueue.ts", "../../@datadog/browser-core/src/domain/console/consoleObservable.ts", "../../@datadog/browser-core/src/domain/context/contextUtils.ts", "../../@datadog/browser-core/src/domain/context/contextManager.ts", "../../@datadog/browser-core/src/domain/context/defineContextMethod.ts", "../../@datadog/browser-core/src/domain/context/storeContextManager.ts", "../../@datadog/browser-core/src/tools/abstractHooks.ts", "../../@datadog/browser-core/src/domain/contexts/accountContext.ts", "../../@datadog/browser-core/src/domain/contexts/globalContext.ts", "../../@datadog/browser-core/src/domain/contexts/userContext.ts", "../../@datadog/browser-core/src/domain/context/contextConstants.ts", "../../@datadog/browser-core/src/tools/readBytesFromStream.ts"],
  "sourcesContent": ["/* eslint-disable local-rules/disallow-side-effects */\n/**\n * Keep references on console methods to avoid triggering patched behaviors\n *\n * NB: in some setup, console could already be patched by another SDK.\n * In this case, some display messages can be sent by the other SDK\n * but we should be safe from infinite loop nonetheless.\n */\n\nexport const ConsoleApiName = {\n  log: 'log',\n  debug: 'debug',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nexport type ConsoleApiName = (typeof ConsoleApiName)[keyof typeof ConsoleApiName]\n\ninterface Display {\n  debug: typeof console.debug\n  log: typeof console.log\n  info: typeof console.info\n  warn: typeof console.warn\n  error: typeof console.error\n}\n\n/**\n * When building JS bundles, some users might use a plugin[1] or configuration[2] to remove\n * \"console.*\" references. This causes some issue as we expect `console.*` to be defined.\n * As a workaround, let's use a variable alias, so those expressions won't be taken into account by\n * simple static analysis.\n *\n * [1]: https://babeljs.io/docs/babel-plugin-transform-remove-console/\n * [2]: https://github.com/terser/terser#compress-options (look for drop_console)\n */\nexport const globalConsole = console\n\nexport const originalConsoleMethods = {} as Display\nObject.keys(ConsoleApiName).forEach((name) => {\n  originalConsoleMethods[name as ConsoleApiName] = globalConsole[name as ConsoleApiName]\n})\n\nconst PREFIX = 'Datadog Browser SDK:'\n\nexport const display: Display = {\n  debug: originalConsoleMethods.debug.bind(globalConsole, PREFIX),\n  log: originalConsoleMethods.log.bind(globalConsole, PREFIX),\n  info: originalConsoleMethods.info.bind(globalConsole, PREFIX),\n  warn: originalConsoleMethods.warn.bind(globalConsole, PREFIX),\n  error: originalConsoleMethods.error.bind(globalConsole, PREFIX),\n}\n\nexport const DOCS_ORIGIN = 'https://docs.datadoghq.com'\nexport const DOCS_TROUBLESHOOTING = `${DOCS_ORIGIN}/real_user_monitoring/browser/troubleshooting`\nexport const MORE_DETAILS = 'More details:'\n", "/**\n * Return true if the draw is successful\n * @param threshold between 0 and 100\n */\nexport function performDraw(threshold: number): boolean {\n  return threshold !== 0 && Math.random() * 100 <= threshold\n}\n\nexport function round(num: number, decimals: 0 | 1 | 2 | 3 | 4) {\n  return +num.toFixed(decimals)\n}\n\nexport function isPercentage(value: unknown) {\n  return isNumber(value) && value >= 0 && value <= 100\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number'\n}\n", "import { isNumber, round } from './numberUtils'\n\nexport const ONE_SECOND = 1000\nexport const ONE_MINUTE = 60 * ONE_SECOND\nexport const ONE_HOUR = 60 * ONE_MINUTE\nexport const ONE_DAY = 24 * ONE_HOUR\nexport const ONE_YEAR = 365 * ONE_DAY\n\nexport type Duration = number & { d: 'Duration in ms' }\nexport type ServerDuration = number & { s: 'Duration in ns' }\nexport type TimeStamp = number & { t: 'Epoch time' }\nexport type RelativeTime = number & { r: 'Time relative to navigation start' } & { d: 'Duration in ms' }\nexport type ClocksState = { relative: RelativeTime; timeStamp: TimeStamp }\n\nexport function relativeToClocks(relative: RelativeTime) {\n  return { relative, timeStamp: getCorrectedTimeStamp(relative) }\n}\n\nexport function timeStampToClocks(timeStamp: TimeStamp) {\n  return { relative: getRelativeTime(timeStamp), timeStamp }\n}\n\nfunction getCorrectedTimeStamp(relativeTime: RelativeTime) {\n  const correctedOrigin = (dateNow() - performance.now()) as TimeStamp\n  // apply correction only for positive drift\n  if (correctedOrigin > getNavigationStart()) {\n    return Math.round(addDuration(correctedOrigin, relativeTime)) as TimeStamp\n  }\n  return getTimeStamp(relativeTime)\n}\n\nexport function currentDrift() {\n  return Math.round(dateNow() - addDuration(getNavigationStart(), performance.now() as Duration))\n}\n\nexport function toServerDuration(duration: Duration): ServerDuration\nexport function toServerDuration(duration: Duration | undefined): ServerDuration | undefined\nexport function toServerDuration(duration: Duration | undefined) {\n  if (!isNumber(duration)) {\n    return duration\n  }\n  return round(duration * 1e6, 0) as ServerDuration\n}\n\nexport function dateNow() {\n  // Do not use `Date.now` because sometimes websites are wrongly \"polyfilling\" it. For example, we\n  // had some users using a very old version of `datejs`, which patched `Date.now` to return a Date\n  // instance instead of a timestamp[1]. Those users are unlikely to fix this, so let's handle this\n  // case ourselves.\n  // [1]: https://github.com/datejs/Datejs/blob/97f5c7c58c5bc5accdab8aa7602b6ac56462d778/src/core-debug.js#L14-L16\n  return new Date().getTime()\n}\n\nexport function timeStampNow() {\n  return dateNow() as TimeStamp\n}\n\nexport function relativeNow() {\n  return performance.now() as RelativeTime\n}\n\nexport function clocksNow() {\n  return { relative: relativeNow(), timeStamp: timeStampNow() }\n}\n\nexport function clocksOrigin() {\n  return { relative: 0 as RelativeTime, timeStamp: getNavigationStart() }\n}\n\nexport function elapsed(start: TimeStamp, end: TimeStamp): Duration\nexport function elapsed(start: RelativeTime, end: RelativeTime): Duration\nexport function elapsed(start: number, end: number) {\n  return (end - start) as Duration\n}\n\nexport function addDuration(a: TimeStamp, b: Duration): TimeStamp\nexport function addDuration(a: RelativeTime, b: Duration): RelativeTime\nexport function addDuration(a: Duration, b: Duration): Duration\nexport function addDuration(a: number, b: number) {\n  return a + b\n}\n\n// Get the time since the navigation was started.\nexport function getRelativeTime(timestamp: TimeStamp) {\n  return (timestamp - getNavigationStart()) as RelativeTime\n}\n\nexport function getTimeStamp(relativeTime: RelativeTime) {\n  return Math.round(addDuration(getNavigationStart(), relativeTime)) as TimeStamp\n}\n\nexport function looksLikeRelativeTime(time: RelativeTime | TimeStamp): time is RelativeTime {\n  return time < ONE_YEAR\n}\n\n/**\n * Navigation start slightly change on some rare cases\n */\nlet navigationStart: TimeStamp | undefined\n\n/**\n * Notes: this does not use `performance.timeOrigin` because:\n * - It doesn't seem to reflect the actual time on which the navigation has started: it may be much farther in the past,\n * at least in Firefox 71. (see: https://bugzilla.mozilla.org/show_bug.cgi?id=1429926)\n * - It is not supported in Safari <15\n */\nfunction getNavigationStart() {\n  if (navigationStart === undefined) {\n    navigationStart = performance.timing.navigationStart as TimeStamp\n  }\n  return navigationStart\n}\n", "/**\n * inspired by https://mathiasbynens.be/notes/globalthis\n */\n\nexport function getGlobalObject<T = typeof globalThis>(): T {\n  if (typeof globalThis === 'object') {\n    return globalThis as unknown as T\n  }\n  Object.defineProperty(Object.prototype, '_dd_temp_', {\n    get() {\n      return this as object\n    },\n    configurable: true,\n  })\n  // @ts-ignore _dd_temp is defined using defineProperty\n  let globalObject: unknown = _dd_temp_\n  // @ts-ignore _dd_temp is defined using defineProperty\n  delete Object.prototype._dd_temp_\n  if (typeof globalObject !== 'object') {\n    // on safari _dd_temp_ is available on window but not globally\n    // fallback on other browser globals check\n    if (typeof self === 'object') {\n      globalObject = self\n    } else if (typeof window === 'object') {\n      globalObject = window\n    } else {\n      globalObject = {}\n    }\n  }\n  return globalObject as T\n}\n", "import { display } from './display'\n\nlet onMonitorErrorCollected: undefined | ((error: unknown) => void)\nlet debugMode = false\n\nexport function startMonitorErrorCollection(newOnMonitorErrorCollected: (error: unknown) => void) {\n  onMonitorErrorCollected = newOnMonitorErrorCollected\n}\n\nexport function setDebugMode(newDebugMode: boolean) {\n  debugMode = newDebugMode\n}\n\nexport function resetMonitor() {\n  onMonitorErrorCollected = undefined\n  debugMode = false\n}\n\nexport function monitored<T extends (...params: any[]) => unknown>(\n  _: any,\n  __: string,\n  descriptor: TypedPropertyDescriptor<T>\n) {\n  const originalMethod = descriptor.value!\n  descriptor.value = function (this: any, ...args: Parameters<T>) {\n    const decorated = onMonitorErrorCollected ? monitor(originalMethod) : originalMethod\n    return decorated.apply(this, args) as ReturnType<T>\n  } as T\n}\n\nexport function monitor<T extends (...args: any[]) => any>(fn: T): T {\n  return function (this: any) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return callMonitored(fn, this, arguments as unknown as Parameters<T>)\n  } as unknown as T // consider output type has input type\n}\n\nexport function callMonitored<T extends (...args: any[]) => any>(\n  fn: T,\n  context: ThisParameterType<T>,\n  args: Parameters<T>\n): ReturnType<T> | undefined\nexport function callMonitored<T extends (this: void) => any>(fn: T): ReturnType<T> | undefined\nexport function callMonitored<T extends (...args: any[]) => any>(\n  fn: T,\n  context?: any,\n  args?: any\n): ReturnType<T> | undefined {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return fn.apply(context, args)\n  } catch (e) {\n    monitorError(e)\n  }\n}\n\nexport function monitorError(e: unknown) {\n  displayIfDebugEnabled(e)\n  if (onMonitorErrorCollected) {\n    try {\n      onMonitorErrorCollected(e)\n    } catch (e) {\n      displayIfDebugEnabled(e)\n    }\n  }\n}\n\nexport function displayIfDebugEnabled(...args: any[]) {\n  if (debugMode) {\n    display.error('[MONITOR]', ...args)\n  }\n}\n", "import { getGlobalObject } from './getGlobalObject'\n\nexport interface BrowserWindowWithZoneJs extends Window {\n  Zone?: {\n    // All Zone.js versions expose the __symbol__ method, but we observed that some website have a\n    // 'Zone' global variable unrelated to Zone.js, so let's consider this method optional\n    // nonetheless.\n    __symbol__?: (name: string) => string\n  }\n}\n\n/**\n * Gets the original value for a DOM API that was potentially patched by Zone.js.\n *\n * Zone.js[1] is a library that patches a bunch of JS and DOM APIs. It usually stores the original\n * value of the patched functions/constructors/methods in a hidden property prefixed by\n * __zone_symbol__.\n *\n * In multiple occasions, we observed that Zone.js is the culprit of important issues leading to\n * browser resource exhaustion (memory leak, high CPU usage). This method is used as a workaround to\n * use the original DOM API instead of the one patched by Zone.js.\n *\n * [1]: https://github.com/angular/angular/tree/main/packages/zone.js\n */\nexport function getZoneJsOriginalValue<Target, Name extends keyof Target & string>(\n  target: Target,\n  name: Name\n): Target[Name] {\n  const browserWindow = getGlobalObject<BrowserWindowWithZoneJs>()\n  let original: Target[Name] | undefined\n  if (browserWindow.Zone && typeof browserWindow.Zone.__symbol__ === 'function') {\n    original = (target as any)[browserWindow.Zone.__symbol__(name)]\n  }\n  if (!original) {\n    original = target[name]\n  }\n  return original\n}\n", "import { getZoneJsOriginalValue } from './getZoneJsOriginalValue'\nimport { monitor } from './monitor'\nimport { getGlobalObject } from './getGlobalObject'\n\nexport type TimeoutId = ReturnType<typeof globalThis.setTimeout>\n\nexport function setTimeout(callback: () => void, delay?: number): TimeoutId {\n  return getZoneJsOriginalValue(getGlobalObject(), 'setTimeout')(monitor(callback), delay)\n}\n\nexport function clearTimeout(timeoutId: TimeoutId | undefined) {\n  getZoneJsOriginalValue(getGlobalObject(), 'clearTimeout')(timeoutId)\n}\n\nexport function setInterval(callback: () => void, delay?: number): TimeoutId {\n  return getZoneJsOriginalValue(getGlobalObject(), 'setInterval')(monitor(callback), delay)\n}\n\nexport function clearInterval(timeoutId: TimeoutId | undefined) {\n  getZoneJsOriginalValue(getGlobalObject(), 'clearInterval')(timeoutId)\n}\n", "export const ONE_KIBI_BYTE = 1024\nexport const ONE_MEBI_BYTE = 1024 * ONE_KIBI_BYTE\n\n// eslint-disable-next-line no-control-regex\nconst HAS_MULTI_BYTES_CHARACTERS = /[^\\u0000-\\u007F]/\n\nexport function computeBytesCount(candidate: string): number {\n  // Accurate bytes count computations can degrade performances when there is a lot of events to process\n  if (!HAS_MULTI_BYTES_CHARACTERS.test(candidate)) {\n    return candidate.length\n  }\n\n  if (window.TextEncoder !== undefined) {\n    return new TextEncoder().encode(candidate).length\n  }\n\n  return new Blob([candidate]).size\n}\n\nexport function concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const length = buffers.reduce((total, buffer) => total + buffer.length, 0)\n  const result: Uint8Array = new Uint8Array(length)\n  let offset = 0\n  for (const buffer of buffers) {\n    result.set(buffer, offset)\n    offset += buffer.length\n  }\n  return result\n}\n", "export function isServerError(status: number) {\n  return status >= 500\n}\n\nexport function tryToClone(response: Response): Response | undefined {\n  try {\n    return response.clone()\n  } catch {\n    // clone can throw if the response has already been used by another instrumentation or is disturbed\n    return\n  }\n}\n", "import type { Context } from '../../tools/serialisation/context'\nimport type { ClocksState } from '../../tools/utils/timeUtils'\n\n// TS v4.6 introduced Error.cause[1] typed as `Error`. TS v4.8 changed Error.cause to be\n// `unknown`[2].\n//\n// Because we still support TS 3.8, we need to declare our own type. We can remove it once we drop\n// support for TS v4.7 and before. The 'cause' property defined by TS needs to be omitted because\n// we define it with a type `unknown` which is incompatible with TS 4.6 and 4.7.\n//\n// [1]: https://devblogs.microsoft.com/typescript/announcing-typescript-4-6/#target-es2022\n// [2]: https://devblogs.microsoft.com/typescript/announcing-typescript-4-8/#lib-d-ts-updates\nexport interface ErrorWithCause extends Omit<Error, 'cause'> {\n  cause?: unknown\n}\n\nexport type RawErrorCause = {\n  message: string\n  source: string\n  type?: string\n  stack?: string\n}\n\nexport type Csp = {\n  disposition: 'enforce' | 'report'\n}\n\nexport interface RawError {\n  startClocks: ClocksState\n  message: string\n  type?: string\n  stack?: string\n  source: ErrorSource\n  originalError?: unknown\n  handling?: ErrorHandling\n  handlingStack?: string\n  componentStack?: string\n  causes?: RawErrorCause[]\n  fingerprint?: string\n  csp?: Csp\n  context?: Context\n}\n\nexport const ErrorSource = {\n  AGENT: 'agent',\n  CONSOLE: 'console',\n  CUSTOM: 'custom',\n  LOGGER: 'logger',\n  NETWORK: 'network',\n  SOURCE: 'source',\n  REPORT: 'report',\n} as const\n\nexport const enum NonErrorPrefix {\n  UNCAUGHT = 'Uncaught',\n  PROVIDED = 'Provided',\n}\n\nexport const enum ErrorHandling {\n  HANDLED = 'handled',\n  UNHANDLED = 'unhandled',\n}\n\nexport type ErrorSource = (typeof ErrorSource)[keyof typeof ErrorSource]\n", "import type { TrackType } from '../domain/configuration'\nimport { setTimeout } from '../tools/timer'\nimport { clocksNow, ONE_MINUTE, ONE_SECOND } from '../tools/utils/timeUtils'\nimport { ONE_MEBI_BYTE, ONE_KIBI_BYTE } from '../tools/utils/byteUtils'\nimport { isServerError } from '../tools/utils/responseUtils'\nimport type { RawError } from '../domain/error/error.types'\nimport { ErrorSource } from '../domain/error/error.types'\nimport type { Payload, HttpResponse } from './httpRequest'\n\nexport const MAX_ONGOING_BYTES_COUNT = 80 * ONE_KIBI_BYTE\nexport const MAX_ONGOING_REQUESTS = 32\nexport const MAX_QUEUE_BYTES_COUNT = 3 * ONE_MEBI_BYTE\nexport const MAX_BACKOFF_TIME = ONE_MINUTE\nexport const INITIAL_BACKOFF_TIME = ONE_SECOND\n\nconst enum TransportStatus {\n  UP,\n  FAILURE_DETECTED,\n  DOWN,\n}\n\nconst enum RetryReason {\n  AFTER_SUCCESS,\n  AFTER_RESUME,\n}\n\nexport interface RetryState {\n  transportStatus: TransportStatus\n  currentBackoffTime: number\n  bandwidthMonitor: ReturnType<typeof newBandwidthMonitor>\n  queuedPayloads: ReturnType<typeof newPayloadQueue>\n  queueFullReported: boolean\n}\n\ntype SendStrategy = (payload: Payload, onResponse: (r: HttpResponse) => void) => void\n\nexport function sendWithRetryStrategy(\n  payload: Payload,\n  state: RetryState,\n  sendStrategy: SendStrategy,\n  trackType: TrackType,\n  reportError: (error: RawError) => void\n) {\n  if (\n    state.transportStatus === TransportStatus.UP &&\n    state.queuedPayloads.size() === 0 &&\n    state.bandwidthMonitor.canHandle(payload)\n  ) {\n    send(payload, state, sendStrategy, {\n      onSuccess: () => retryQueuedPayloads(RetryReason.AFTER_SUCCESS, state, sendStrategy, trackType, reportError),\n      onFailure: () => {\n        state.queuedPayloads.enqueue(payload)\n        scheduleRetry(state, sendStrategy, trackType, reportError)\n      },\n    })\n  } else {\n    state.queuedPayloads.enqueue(payload)\n  }\n}\n\nfunction scheduleRetry(\n  state: RetryState,\n  sendStrategy: SendStrategy,\n  trackType: TrackType,\n  reportError: (error: RawError) => void\n) {\n  if (state.transportStatus !== TransportStatus.DOWN) {\n    return\n  }\n  setTimeout(() => {\n    const payload = state.queuedPayloads.first()\n    send(payload, state, sendStrategy, {\n      onSuccess: () => {\n        state.queuedPayloads.dequeue()\n        state.currentBackoffTime = INITIAL_BACKOFF_TIME\n        retryQueuedPayloads(RetryReason.AFTER_RESUME, state, sendStrategy, trackType, reportError)\n      },\n      onFailure: () => {\n        state.currentBackoffTime = Math.min(MAX_BACKOFF_TIME, state.currentBackoffTime * 2)\n        scheduleRetry(state, sendStrategy, trackType, reportError)\n      },\n    })\n  }, state.currentBackoffTime)\n}\n\nfunction send(\n  payload: Payload,\n  state: RetryState,\n  sendStrategy: SendStrategy,\n  { onSuccess, onFailure }: { onSuccess: () => void; onFailure: () => void }\n) {\n  state.bandwidthMonitor.add(payload)\n  sendStrategy(payload, (response) => {\n    state.bandwidthMonitor.remove(payload)\n    if (!shouldRetryRequest(response)) {\n      state.transportStatus = TransportStatus.UP\n      onSuccess()\n    } else {\n      // do not consider transport down if another ongoing request could succeed\n      state.transportStatus =\n        state.bandwidthMonitor.ongoingRequestCount > 0 ? TransportStatus.FAILURE_DETECTED : TransportStatus.DOWN\n      payload.retry = {\n        count: payload.retry ? payload.retry.count + 1 : 1,\n        lastFailureStatus: response.status,\n      }\n      onFailure()\n    }\n  })\n}\n\nfunction retryQueuedPayloads(\n  reason: RetryReason,\n  state: RetryState,\n  sendStrategy: SendStrategy,\n  trackType: TrackType,\n  reportError: (error: RawError) => void\n) {\n  if (reason === RetryReason.AFTER_SUCCESS && state.queuedPayloads.isFull() && !state.queueFullReported) {\n    reportError({\n      message: `Reached max ${trackType} events size queued for upload: ${MAX_QUEUE_BYTES_COUNT / ONE_MEBI_BYTE}MiB`,\n      source: ErrorSource.AGENT,\n      startClocks: clocksNow(),\n    })\n    state.queueFullReported = true\n  }\n  const previousQueue = state.queuedPayloads\n  state.queuedPayloads = newPayloadQueue()\n  while (previousQueue.size() > 0) {\n    sendWithRetryStrategy(previousQueue.dequeue()!, state, sendStrategy, trackType, reportError)\n  }\n}\n\nfunction shouldRetryRequest(response: HttpResponse) {\n  return (\n    response.type !== 'opaque' &&\n    ((response.status === 0 && !navigator.onLine) ||\n      response.status === 408 ||\n      response.status === 429 ||\n      isServerError(response.status))\n  )\n}\n\nexport function newRetryState(): RetryState {\n  return {\n    transportStatus: TransportStatus.UP,\n    currentBackoffTime: INITIAL_BACKOFF_TIME,\n    bandwidthMonitor: newBandwidthMonitor(),\n    queuedPayloads: newPayloadQueue(),\n    queueFullReported: false,\n  }\n}\n\nfunction newPayloadQueue() {\n  const queue: Payload[] = []\n  return {\n    bytesCount: 0,\n    enqueue(payload: Payload) {\n      if (this.isFull()) {\n        return\n      }\n      queue.push(payload)\n      this.bytesCount += payload.bytesCount\n    },\n    first() {\n      return queue[0]\n    },\n    dequeue() {\n      const payload = queue.shift()\n      if (payload) {\n        this.bytesCount -= payload.bytesCount\n      }\n      return payload\n    },\n    size() {\n      return queue.length\n    },\n    isFull() {\n      return this.bytesCount >= MAX_QUEUE_BYTES_COUNT\n    },\n  }\n}\n\nfunction newBandwidthMonitor() {\n  return {\n    ongoingRequestCount: 0,\n    ongoingByteCount: 0,\n    canHandle(payload: Payload) {\n      return (\n        this.ongoingRequestCount === 0 ||\n        (this.ongoingByteCount + payload.bytesCount <= MAX_ONGOING_BYTES_COUNT &&\n          this.ongoingRequestCount < MAX_ONGOING_REQUESTS)\n      )\n    },\n    add(payload: Payload) {\n      this.ongoingRequestCount += 1\n      this.ongoingByteCount += payload.bytesCount\n    },\n    remove(payload: Payload) {\n      this.ongoingRequestCount -= 1\n      this.ongoingByteCount -= payload.bytesCount\n    },\n  }\n}\n", "import type { EndpointBuilder } from '../domain/configuration'\nimport type { Context } from '../tools/serialisation/context'\nimport { monitor, monitorError } from '../tools/monitor'\nimport type { RawError } from '../domain/error/error.types'\nimport { newRetryState, sendWithRetryStrategy } from './sendWithRetryStrategy'\n\n/**\n * Use POST request without content type to:\n * - avoid CORS preflight requests\n * - allow usage of sendBeacon\n *\n * multiple elements are sent separated by \\n in order\n * to be parsed correctly without content type header\n */\n\nexport type HttpRequest = ReturnType<typeof createHttpRequest>\n\nexport interface HttpResponse extends Context {\n  status: number\n  type?: ResponseType\n}\n\nexport interface Payload {\n  data: string | FormData | Blob\n  bytesCount: number\n  retry?: RetryInfo\n  encoding?: 'deflate'\n}\n\nexport interface RetryInfo {\n  count: number\n  lastFailureStatus: number\n}\n\nexport function createHttpRequest(\n  endpointBuilder: EndpointBuilder,\n  bytesLimit: number,\n  reportError: (error: RawError) => void\n) {\n  const retryState = newRetryState()\n  const sendStrategyForRetry = (payload: Payload, onResponse: (r: HttpResponse) => void) =>\n    fetchKeepAliveStrategy(endpointBuilder, bytesLimit, payload, onResponse)\n\n  return {\n    send: (payload: Payload) => {\n      sendWithRetryStrategy(payload, retryState, sendStrategyForRetry, endpointBuilder.trackType, reportError)\n    },\n    /**\n     * Since fetch keepalive behaves like regular fetch on Firefox,\n     * keep using sendBeaconStrategy on exit\n     */\n    sendOnExit: (payload: Payload) => {\n      sendBeaconStrategy(endpointBuilder, bytesLimit, payload)\n    },\n  }\n}\n\nfunction sendBeaconStrategy(endpointBuilder: EndpointBuilder, bytesLimit: number, payload: Payload) {\n  const canUseBeacon = !!navigator.sendBeacon && payload.bytesCount < bytesLimit\n  if (canUseBeacon) {\n    try {\n      const beaconUrl = endpointBuilder.build('beacon', payload)\n      const isQueued = navigator.sendBeacon(beaconUrl, payload.data)\n\n      if (isQueued) {\n        return\n      }\n    } catch (e) {\n      reportBeaconError(e)\n    }\n  }\n\n  fetchStrategy(endpointBuilder, payload)\n}\n\nlet hasReportedBeaconError = false\n\nfunction reportBeaconError(e: unknown) {\n  if (!hasReportedBeaconError) {\n    hasReportedBeaconError = true\n    monitorError(e)\n  }\n}\n\nexport function fetchKeepAliveStrategy(\n  endpointBuilder: EndpointBuilder,\n  bytesLimit: number,\n  payload: Payload,\n  onResponse?: (r: HttpResponse) => void\n) {\n  const canUseKeepAlive = isKeepAliveSupported() && payload.bytesCount < bytesLimit\n\n  if (canUseKeepAlive) {\n    const fetchUrl = endpointBuilder.build('fetch-keepalive', payload)\n\n    fetch(fetchUrl, { method: 'POST', body: payload.data, keepalive: true, mode: 'cors' })\n      .then(monitor((response: Response) => onResponse?.({ status: response.status, type: response.type })))\n      .catch(monitor(() => fetchStrategy(endpointBuilder, payload, onResponse)))\n  } else {\n    fetchStrategy(endpointBuilder, payload, onResponse)\n  }\n}\n\nexport function fetchStrategy(\n  endpointBuilder: EndpointBuilder,\n  payload: Payload,\n  onResponse?: (r: HttpResponse) => void\n) {\n  const fetchUrl = endpointBuilder.build('fetch', payload)\n\n  fetch(fetchUrl, { method: 'POST', body: payload.data, mode: 'cors' })\n    .then(monitor((response: Response) => onResponse?.({ status: response.status, type: response.type })))\n    .catch(monitor(() => onResponse?.({ status: 0 })))\n}\n\nfunction isKeepAliveSupported() {\n  // Request can throw, cf https://developer.mozilla.org/en-US/docs/Web/API/Request/Request#errors\n  try {\n    return window.Request && 'keepalive' in new Request('http://a')\n  } catch {\n    return false\n  }\n}\n", "import { getGlobalObject } from '../tools/getGlobalObject'\nimport type { DefaultPrivacyLevel } from '../domain/configuration'\n\nexport interface BrowserWindowWithEventBridge extends Window {\n  DatadogEventBridge?: DatadogEventBridge\n}\n\nexport interface DatadogEventBridge {\n  getCapabilities?(): string\n  getPrivacyLevel?(): DefaultPrivacyLevel\n  getAllowedWebViewHosts(): string\n  send(msg: string): void\n}\n\nexport const enum BridgeCapability {\n  RECORDS = 'records',\n}\n\nexport function getEventBridge<T, E>() {\n  const eventBridgeGlobal = getEventBridgeGlobal()\n\n  if (!eventBridgeGlobal) {\n    return\n  }\n\n  return {\n    getCapabilities() {\n      return JSON.parse(eventBridgeGlobal.getCapabilities?.() || '[]') as BridgeCapability[]\n    },\n    getPrivacyLevel() {\n      return eventBridgeGlobal.getPrivacyLevel?.()\n    },\n    getAllowedWebViewHosts() {\n      return JSON.parse(eventBridgeGlobal.getAllowedWebViewHosts()) as string[]\n    },\n    send(eventType: T, event: E, viewId?: string) {\n      const view = viewId ? { id: viewId } : undefined\n      eventBridgeGlobal.send(JSON.stringify({ eventType, event, view }))\n    },\n  }\n}\n\nexport function bridgeSupports(capability: BridgeCapability): boolean {\n  const bridge = getEventBridge()\n  return !!bridge && bridge.getCapabilities().includes(capability)\n}\n\nexport function canUseEventBridge(currentHost = getGlobalObject<Window>().location?.hostname): boolean {\n  const bridge = getEventBridge()\n  return (\n    !!bridge &&\n    bridge\n      .getAllowedWebViewHosts()\n      .some((allowedHost) => currentHost === allowedHost || currentHost.endsWith(`.${allowedHost}`))\n  )\n}\n\nfunction getEventBridgeGlobal() {\n  return getGlobalObject<BrowserWindowWithEventBridge>().DatadogEventBridge\n}\n", "import { monitor } from '../tools/monitor'\nimport { getZoneJsOriginalValue } from '../tools/getZoneJsOriginalValue'\nimport type { CookieStore, CookieStoreEventMap, VisualViewport, VisualViewportEventMap } from './browser.types'\n\nexport type TrustableEvent<E extends Event = Event> = E & { __ddIsTrusted?: boolean }\n\nexport const enum DOM_EVENT {\n  BEFORE_UNLOAD = 'beforeunload',\n  CLICK = 'click',\n  DBL_CLICK = 'dblclick',\n  KEY_DOWN = 'keydown',\n  LOAD = 'load',\n  POP_STATE = 'popstate',\n  SCROLL = 'scroll',\n  TOUCH_START = 'touchstart',\n  TOUCH_END = 'touchend',\n  TOUCH_MOVE = 'touchmove',\n  VISIBILITY_CHANGE = 'visibilitychange',\n  PAGE_SHOW = 'pageshow',\n  FREEZE = 'freeze',\n  RESUME = 'resume',\n  DOM_CONTENT_LOADED = 'DOMContentLoaded',\n  POINTER_DOWN = 'pointerdown',\n  POINTER_UP = 'pointerup',\n  POINTER_CANCEL = 'pointercancel',\n  HASH_CHANGE = 'hashchange',\n  PAGE_HIDE = 'pagehide',\n  MOUSE_DOWN = 'mousedown',\n  MOUSE_UP = 'mouseup',\n  MOUSE_MOVE = 'mousemove',\n  FOCUS = 'focus',\n  BLUR = 'blur',\n  CONTEXT_MENU = 'contextmenu',\n  RESIZE = 'resize',\n  CHANGE = 'change',\n  INPUT = 'input',\n  PLAY = 'play',\n  PAUSE = 'pause',\n  SECURITY_POLICY_VIOLATION = 'securitypolicyviolation',\n  SELECTION_CHANGE = 'selectionchange',\n  STORAGE = 'storage',\n}\n\ninterface AddEventListenerOptions {\n  once?: boolean\n  capture?: boolean\n  passive?: boolean\n}\n\ntype EventMapFor<T> = T extends Window\n  ? WindowEventMap & {\n      // TS 4.9.5 does not support `freeze` and `resume` events yet\n      freeze: Event\n      resume: Event\n      // TS 4.9.5 does not define `visibilitychange` on Window (only Document)\n      visibilitychange: Event\n    }\n  : T extends Document\n    ? DocumentEventMap\n    : T extends HTMLElement\n      ? HTMLElementEventMap\n      : T extends VisualViewport\n        ? VisualViewportEventMap\n        : T extends ShadowRoot\n          ? // ShadowRootEventMap is not yet defined in our supported TS version. Instead, use\n            // GlobalEventHandlersEventMap which is more than enough as we only need to listen for events bubbling\n            // through the ShadowRoot like \"change\" or \"input\"\n            GlobalEventHandlersEventMap\n          : T extends XMLHttpRequest\n            ? XMLHttpRequestEventMap\n            : T extends Performance\n              ? PerformanceEventMap\n              : T extends Worker\n                ? WorkerEventMap\n                : T extends CookieStore\n                  ? CookieStoreEventMap\n                  : Record<never, never>\n\n/**\n * Add an event listener to an event target object (Window, Element, mock object...).  This provides\n * a few conveniences compared to using `element.addEventListener` directly:\n *\n * * supports IE11 by: using an option object only if needed and emulating the `once` option\n *\n * * wraps the listener with a `monitor` function\n *\n * * returns a `stop` function to remove the listener\n */\nexport function addEventListener<Target extends EventTarget, EventName extends keyof EventMapFor<Target> & string>(\n  configuration: { allowUntrustedEvents?: boolean | undefined },\n  eventTarget: Target,\n  eventName: EventName,\n  listener: (event: EventMapFor<Target>[EventName] & { type: EventName }) => void,\n  options?: AddEventListenerOptions\n) {\n  return addEventListeners(configuration, eventTarget, [eventName], listener, options)\n}\n\n/**\n * Add event listeners to an event target object (Window, Element, mock object...).  This provides\n * a few conveniences compared to using `element.addEventListener` directly:\n *\n * * supports IE11 by: using an option object only if needed and emulating the `once` option\n *\n * * wraps the listener with a `monitor` function\n *\n * * returns a `stop` function to remove the listener\n *\n * * with `once: true`, the listener will be called at most once, even if different events are listened\n */\nexport function addEventListeners<Target extends EventTarget, EventName extends keyof EventMapFor<Target> & string>(\n  configuration: { allowUntrustedEvents?: boolean | undefined },\n  eventTarget: Target,\n  eventNames: EventName[],\n  listener: (event: EventMapFor<Target>[EventName] & { type: EventName }) => void,\n  { once, capture, passive }: AddEventListenerOptions = {}\n) {\n  const listenerWithMonitor = monitor((event: TrustableEvent) => {\n    if (!event.isTrusted && !event.__ddIsTrusted && !configuration.allowUntrustedEvents) {\n      return\n    }\n    if (once) {\n      stop()\n    }\n    listener(event as unknown as EventMapFor<Target>[EventName] & { type: EventName })\n  })\n\n  const options = passive ? { capture, passive } : capture\n\n  // Use the window.EventTarget.prototype when possible to avoid wrong overrides (e.g: https://github.com/salesforce/lwc/issues/1824)\n  const listenerTarget =\n    window.EventTarget && eventTarget instanceof EventTarget ? window.EventTarget.prototype : eventTarget\n\n  const add = getZoneJsOriginalValue(listenerTarget, 'addEventListener')\n  eventNames.forEach((eventName) => add.call(eventTarget, eventName, listenerWithMonitor, options))\n\n  function stop() {\n    const remove = getZoneJsOriginalValue(listenerTarget, 'removeEventListener')\n    eventNames.forEach((eventName) => remove.call(eventTarget, eventName, listenerWithMonitor, options))\n  }\n\n  return {\n    stop,\n  }\n}\n", "export function findLast<T, S extends T>(\n  array: T[],\n  predicate: (item: T, index: number, array: T[]) => item is S\n): S | undefined {\n  for (let i = array.length - 1; i >= 0; i -= 1) {\n    const item = array[i]\n    if (predicate(item, i, array)) {\n      return item\n    }\n  }\n  return undefined\n}\n\n// Keep the following wrapper functions as it can be mangled and will result in smaller bundle size that using\n// the native Object.values and Object.entries directly\n\nexport function objectValues<T = unknown>(object: { [key: string]: T }) {\n  return Object.values(object)\n}\n\nexport function objectEntries<T = unknown>(object: { [key: string]: T }): Array<[string, T]> {\n  return Object.entries(object)\n}\n", "export interface Subscription {\n  unsubscribe: () => void\n}\n\n// eslint-disable-next-line no-restricted-syntax\nexport class Observable<T> {\n  private observers: Array<(data: T) => void> = []\n  private onLastUnsubscribe?: () => void\n\n  constructor(private onFirstSubscribe?: (observable: Observable<T>) => (() => void) | void) {}\n\n  subscribe(f: (data: T) => void): Subscription {\n    this.observers.push(f)\n    if (this.observers.length === 1 && this.onFirstSubscribe) {\n      this.onLastUnsubscribe = this.onFirstSubscribe(this) || undefined\n    }\n    return {\n      unsubscribe: () => {\n        this.observers = this.observers.filter((other) => f !== other)\n        if (!this.observers.length && this.onLastUnsubscribe) {\n          this.onLastUnsubscribe()\n        }\n      },\n    }\n  }\n\n  notify(data: T) {\n    this.observers.forEach((observer) => observer(data))\n  }\n}\n\nexport function mergeObservables<T>(...observables: Array<Observable<T>>) {\n  return new Observable<T>((globalObservable) => {\n    const subscriptions: Subscription[] = observables.map((observable) =>\n      observable.subscribe((data) => globalObservable.notify(data))\n    )\n    return () => subscriptions.forEach((subscription) => subscription.unsubscribe())\n  })\n}\n", "import { Observable } from '../tools/observable'\nimport { objectValues } from '../tools/utils/polyfills'\nimport type { Configuration } from '../domain/configuration'\nimport { addEventListeners, addEventListener, DOM_EVENT } from './addEventListener'\n\nexport const PageExitReason = {\n  HIDDEN: 'visibility_hidden',\n  UNLOADING: 'before_unload',\n  PAGEHIDE: 'page_hide',\n  FROZEN: 'page_frozen',\n} as const\n\nexport type PageExitReason = (typeof PageExitReason)[keyof typeof PageExitReason]\n\nexport interface PageMayExitEvent {\n  reason: PageExitReason\n}\n\nexport function createPageMayExitObservable(configuration: Configuration): Observable<PageMayExitEvent> {\n  return new Observable<PageMayExitEvent>((observable) => {\n    const { stop: stopListeners } = addEventListeners(\n      configuration,\n      window,\n      [DOM_EVENT.VISIBILITY_CHANGE, DOM_EVENT.FREEZE],\n      (event) => {\n        if (event.type === DOM_EVENT.VISIBILITY_CHANGE && document.visibilityState === 'hidden') {\n          /**\n           * Only event that guarantee to fire on mobile devices when the page transitions to background state\n           * (e.g. when user switches to a different application, goes to homescreen, etc), or is being unloaded.\n           */\n          observable.notify({ reason: PageExitReason.HIDDEN })\n        } else if (event.type === DOM_EVENT.FREEZE) {\n          /**\n           * After transitioning in background a tab can be freezed to preserve resources. (cf: https://developer.chrome.com/blog/page-lifecycle-api)\n           * Allow to collect events happening between hidden and frozen state.\n           */\n          observable.notify({ reason: PageExitReason.FROZEN })\n        }\n      },\n      { capture: true }\n    )\n\n    const stopBeforeUnloadListener = addEventListener(configuration, window, DOM_EVENT.BEFORE_UNLOAD, () => {\n      observable.notify({ reason: PageExitReason.UNLOADING })\n    }).stop\n\n    return () => {\n      stopListeners()\n      stopBeforeUnloadListener()\n    }\n  })\n}\n\nexport function isPageExitReason(reason: string): reason is PageExitReason {\n  return objectValues(PageExitReason).includes(reason as PageExitReason)\n}\n", "import type { TimeoutId } from '../timer'\nimport { setTimeout, clearTimeout } from '../timer'\n\n// use lodash API\nexport function throttle<T extends (...args: any[]) => void>(\n  fn: T,\n  wait: number,\n  options?: { leading?: boolean; trailing?: boolean }\n) {\n  const needLeadingExecution = options && options.leading !== undefined ? options.leading : true\n  const needTrailingExecution = options && options.trailing !== undefined ? options.trailing : true\n  let inWaitPeriod = false\n  let pendingExecutionWithParameters: Parameters<T> | undefined\n  let pendingTimeoutId: TimeoutId\n\n  return {\n    throttled: (...parameters: Parameters<T>) => {\n      if (inWaitPeriod) {\n        pendingExecutionWithParameters = parameters\n        return\n      }\n      if (needLeadingExecution) {\n        fn(...parameters)\n      } else {\n        pendingExecutionWithParameters = parameters\n      }\n      inWaitPeriod = true\n      pendingTimeoutId = setTimeout(() => {\n        if (needTrailingExecution && pendingExecutionWithParameters) {\n          fn(...pendingExecutionWithParameters)\n        }\n        inWaitPeriod = false\n        pendingExecutionWithParameters = undefined\n      }, wait)\n    },\n    cancel: () => {\n      clearTimeout(pendingTimeoutId)\n      inWaitPeriod = false\n      pendingExecutionWithParameters = undefined\n    },\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n", "import { noop } from '../utils/functionUtils'\n\n/**\n * Custom implementation of JSON.stringify that ignores some toJSON methods. We need to do that\n * because some sites badly override toJSON on certain objects. Removing all toJSON methods from\n * nested values would be too costly, so we just detach them from the root value, and native classes\n * used to build JSON values (Array and Object).\n *\n * Note: this still assumes that JSON.stringify is correct.\n */\nexport function jsonStringify(\n  value: unknown,\n  replacer?: Array<string | number>,\n  space?: string | number\n): string | undefined {\n  if (typeof value !== 'object' || value === null) {\n    return JSON.stringify(value)\n  }\n\n  // Note: The order matter here. We need to detach toJSON methods on parent classes before their\n  // subclasses.\n  const restoreObjectPrototypeToJson = detachToJsonMethod(Object.prototype)\n  const restoreArrayPrototypeToJson = detachToJsonMethod(Array.prototype)\n  const restoreValuePrototypeToJson = detachToJsonMethod(Object.getPrototypeOf(value))\n  const restoreValueToJson = detachToJsonMethod(value)\n\n  try {\n    return JSON.stringify(value, replacer, space)\n  } catch {\n    return '<error: unable to serialize object>'\n  } finally {\n    restoreObjectPrototypeToJson()\n    restoreArrayPrototypeToJson()\n    restoreValuePrototypeToJson()\n    restoreValueToJson()\n  }\n}\n\nexport interface ObjectWithToJsonMethod {\n  toJSON?: () => unknown\n}\n\nexport function detachToJsonMethod(value: object) {\n  const object = value as ObjectWithToJsonMethod\n  const objectToJson = object.toJSON\n  if (objectToJson) {\n    delete object.toJSON\n    return () => {\n      object.toJSON = objectToJson\n    }\n  }\n  return noop\n}\n", "import { DOCS_TROUBLESHOOTING, MORE_DETAILS, display } from '../tools/display'\nimport type { Context } from '../tools/serialisation/context'\nimport { objectValues } from '../tools/utils/polyfills'\nimport { isPageExitReason } from '../browser/pageMayExitObservable'\nimport { jsonStringify } from '../tools/serialisation/jsonStringify'\nimport type { Encoder, EncoderResult } from '../tools/encoder'\nimport { computeBytesCount } from '../tools/utils/byteUtils'\nimport type { HttpRequest, Payload } from './httpRequest'\nimport type { FlushController, FlushEvent } from './flushController'\n\nexport interface Batch {\n  flushController: FlushController\n  add: (message: Context) => void\n  upsert: (message: Context, key: string) => void\n  stop: () => void\n}\n\nexport function createBatch({\n  encoder,\n  request,\n  flushController,\n  messageBytesLimit,\n}: {\n  encoder: Encoder\n  request: HttpRequest\n  flushController: FlushController\n  messageBytesLimit: number\n}): Batch {\n  let upsertBuffer: { [key: string]: string } = {}\n  const flushSubscription = flushController.flushObservable.subscribe((event) => flush(event))\n\n  function push(serializedMessage: string, estimatedMessageBytesCount: number, key?: string) {\n    flushController.notifyBeforeAddMessage(estimatedMessageBytesCount)\n\n    if (key !== undefined) {\n      upsertBuffer[key] = serializedMessage\n      flushController.notifyAfterAddMessage()\n    } else {\n      encoder.write(encoder.isEmpty ? serializedMessage : `\\n${serializedMessage}`, (realMessageBytesCount) => {\n        flushController.notifyAfterAddMessage(realMessageBytesCount - estimatedMessageBytesCount)\n      })\n    }\n  }\n\n  function hasMessageFor(key?: string): key is string {\n    return key !== undefined && upsertBuffer[key] !== undefined\n  }\n\n  function remove(key: string) {\n    const removedMessage = upsertBuffer[key]\n    delete upsertBuffer[key]\n    const messageBytesCount = encoder.estimateEncodedBytesCount(removedMessage)\n    flushController.notifyAfterRemoveMessage(messageBytesCount)\n  }\n\n  function addOrUpdate(message: Context, key?: string) {\n    const serializedMessage = jsonStringify(message)!\n\n    const estimatedMessageBytesCount = encoder.estimateEncodedBytesCount(serializedMessage)\n\n    if (estimatedMessageBytesCount >= messageBytesLimit) {\n      display.warn(\n        `Discarded a message whose size was bigger than the maximum allowed size ${messageBytesLimit}KB. ${MORE_DETAILS} ${DOCS_TROUBLESHOOTING}/#technical-limitations`\n      )\n      return\n    }\n\n    if (hasMessageFor(key)) {\n      remove(key)\n    }\n\n    push(serializedMessage, estimatedMessageBytesCount, key)\n  }\n\n  function flush(event: FlushEvent) {\n    const upsertMessages = objectValues(upsertBuffer).join('\\n')\n    upsertBuffer = {}\n\n    const pageMightExit = isPageExitReason(event.reason)\n    const send = pageMightExit ? request.sendOnExit : request.send\n\n    if (\n      pageMightExit &&\n      // Note: checking that the encoder is async is not strictly needed, but it's an optimization:\n      // if the encoder is async we need to send two requests in some cases (one for encoded data\n      // and the other for non-encoded data). But if it's not async, we don't have to worry about\n      // it and always send a single request.\n      encoder.isAsync\n    ) {\n      const encoderResult = encoder.finishSync()\n\n      // Send encoded messages\n      if (encoderResult.outputBytesCount) {\n        send(formatPayloadFromEncoder(encoderResult))\n      }\n\n      // Send messages that are not yet encoded at this point\n      const pendingMessages = [encoderResult.pendingData, upsertMessages].filter(Boolean).join('\\n')\n      if (pendingMessages) {\n        send({\n          data: pendingMessages,\n          bytesCount: computeBytesCount(pendingMessages),\n        })\n      }\n    } else {\n      if (upsertMessages) {\n        encoder.write(encoder.isEmpty ? upsertMessages : `\\n${upsertMessages}`)\n      }\n      encoder.finish((encoderResult) => {\n        send(formatPayloadFromEncoder(encoderResult))\n      })\n    }\n  }\n\n  return {\n    flushController,\n    add: addOrUpdate,\n    upsert: addOrUpdate,\n    stop: flushSubscription.unsubscribe,\n  }\n}\n\nfunction formatPayloadFromEncoder(encoderResult: EncoderResult): Payload {\n  let data: string | Blob\n  if (typeof encoderResult.output === 'string') {\n    data = encoderResult.output\n  } else {\n    data = new Blob([encoderResult.output], {\n      // This will set the 'Content-Type: text/plain' header. Reasoning:\n      // * The intake rejects the request if there is no content type.\n      // * The browser will issue CORS preflight requests if we set it to 'application/json', which\n      // could induce higher intake load (and maybe has other impacts).\n      // * Also it's not quite JSON, since we are concatenating multiple JSON objects separated by\n      // new lines.\n      type: 'text/plain',\n    })\n  }\n\n  return {\n    data,\n    bytesCount: encoderResult.outputBytesCount,\n    encoding: encoderResult.encoding,\n  }\n}\n", "import type { PageMayExitEvent, PageExitReason } from '../browser/pageMayExitObservable'\nimport { Observable } from '../tools/observable'\nimport type { TimeoutId } from '../tools/timer'\nimport { clearTimeout, setTimeout } from '../tools/timer'\nimport type { Duration } from '../tools/utils/timeUtils'\n\nexport type FlushReason = PageExitReason | 'duration_limit' | 'bytes_limit' | 'messages_limit' | 'session_expire'\n\nexport type FlushController = ReturnType<typeof createFlushController>\nexport interface FlushEvent {\n  reason: FlushReason\n  bytesCount: number\n  messagesCount: number\n}\n\ninterface FlushControllerOptions {\n  messagesLimit: number\n  bytesLimit: number\n  durationLimit: Duration\n  pageMayExitObservable: Observable<PageMayExitEvent>\n  sessionExpireObservable: Observable<void>\n}\n\n/**\n * Returns a \"flush controller\", responsible of notifying when flushing a pool of pending data needs\n * to happen. The implementation is designed to support both synchronous and asynchronous usages,\n * but relies on invariants described in each method documentation to keep a coherent state.\n */\nexport function createFlushController({\n  messagesLimit,\n  bytesLimit,\n  durationLimit,\n  pageMayExitObservable,\n  sessionExpireObservable,\n}: FlushControllerOptions) {\n  const pageMayExitSubscription = pageMayExitObservable.subscribe((event) => flush(event.reason))\n  const sessionExpireSubscription = sessionExpireObservable.subscribe(() => flush('session_expire'))\n\n  const flushObservable = new Observable<FlushEvent>(() => () => {\n    pageMayExitSubscription.unsubscribe()\n    sessionExpireSubscription.unsubscribe()\n  })\n\n  let currentBytesCount = 0\n  let currentMessagesCount = 0\n\n  function flush(flushReason: FlushReason) {\n    if (currentMessagesCount === 0) {\n      return\n    }\n\n    const messagesCount = currentMessagesCount\n    const bytesCount = currentBytesCount\n\n    currentMessagesCount = 0\n    currentBytesCount = 0\n    cancelDurationLimitTimeout()\n\n    flushObservable.notify({\n      reason: flushReason,\n      messagesCount,\n      bytesCount,\n    })\n  }\n\n  let durationLimitTimeoutId: TimeoutId | undefined\n  function scheduleDurationLimitTimeout() {\n    if (durationLimitTimeoutId === undefined) {\n      durationLimitTimeoutId = setTimeout(() => {\n        flush('duration_limit')\n      }, durationLimit)\n    }\n  }\n\n  function cancelDurationLimitTimeout() {\n    clearTimeout(durationLimitTimeoutId)\n    durationLimitTimeoutId = undefined\n  }\n\n  return {\n    flushObservable,\n    get messagesCount() {\n      return currentMessagesCount\n    },\n\n    /**\n     * Notifies that a message will be added to a pool of pending messages waiting to be flushed.\n     *\n     * This function needs to be called synchronously, right before adding the message, so no flush\n     * event can happen after `notifyBeforeAddMessage` and before adding the message.\n     *\n     * @param estimatedMessageBytesCount: an estimation of the message bytes count once it is\n     * actually added.\n     */\n    notifyBeforeAddMessage(estimatedMessageBytesCount: number) {\n      if (currentBytesCount + estimatedMessageBytesCount >= bytesLimit) {\n        flush('bytes_limit')\n      }\n      // Consider the message to be added now rather than in `notifyAfterAddMessage`, because if no\n      // message was added yet and `notifyAfterAddMessage` is called asynchronously, we still want\n      // to notify when a flush is needed (for example on page exit).\n      currentMessagesCount += 1\n      currentBytesCount += estimatedMessageBytesCount\n      scheduleDurationLimitTimeout()\n    },\n\n    /**\n     * Notifies that a message *was* added to a pool of pending messages waiting to be flushed.\n     *\n     * This function can be called asynchronously after the message was added, but in this case it\n     * should not be called if a flush event occurred in between.\n     *\n     * @param messageBytesCountDiff: the difference between the estimated message bytes count and\n     * its actual bytes count once added to the pool.\n     */\n    notifyAfterAddMessage(messageBytesCountDiff = 0) {\n      currentBytesCount += messageBytesCountDiff\n\n      if (currentMessagesCount >= messagesLimit) {\n        flush('messages_limit')\n      } else if (currentBytesCount >= bytesLimit) {\n        flush('bytes_limit')\n      }\n    },\n\n    /**\n     * Notifies that a message was removed from a pool of pending messages waiting to be flushed.\n     *\n     * This function needs to be called synchronously, right after removing the message, so no flush\n     * event can happen after removing the message and before `notifyAfterRemoveMessage`.\n     *\n     * @param messageBytesCount: the message bytes count that was added to the pool. Should\n     * correspond to the sum of bytes counts passed to `notifyBeforeAddMessage` and\n     * `notifyAfterAddMessage`.\n     */\n    notifyAfterRemoveMessage(messageBytesCount: number) {\n      currentBytesCount -= messageBytesCount\n      currentMessagesCount -= 1\n      if (currentMessagesCount === 0) {\n        cancelDurationLimitTimeout()\n      }\n    },\n  }\n}\n", "import type { Configuration, EndpointBuilder } from '../domain/configuration'\nimport type { Context } from '../tools/serialisation/context'\nimport type { Observable } from '../tools/observable'\nimport type { PageMayExitEvent } from '../browser/pageMayExitObservable'\nimport type { RawError } from '../domain/error/error.types'\nimport type { Encoder } from '../tools/encoder'\nimport { createBatch } from './batch'\nimport { createHttpRequest } from './httpRequest'\nimport { createFlushController } from './flushController'\n\nexport interface BatchConfiguration {\n  endpoint: EndpointBuilder\n  encoder: Encoder\n}\n\ninterface ReplicaBatchConfiguration<T> extends BatchConfiguration {\n  transformMessage?: (message: T) => T\n}\n\nexport function startBatchWithReplica<T extends Context>(\n  configuration: Configuration,\n  primary: BatchConfiguration,\n  replica: ReplicaBatchConfiguration<T> | undefined,\n  reportError: (error: RawError) => void,\n  pageMayExitObservable: Observable<PageMayExitEvent>,\n  sessionExpireObservable: Observable<void>,\n  batchFactoryImp = createBatch\n) {\n  const primaryBatch = createBatchFromConfig(configuration, primary)\n  const replicaBatch = replica && createBatchFromConfig(configuration, replica)\n\n  function createBatchFromConfig(configuration: Configuration, { endpoint, encoder }: BatchConfiguration) {\n    return batchFactoryImp({\n      encoder,\n      request: createHttpRequest(endpoint, configuration.batchBytesLimit, reportError),\n      flushController: createFlushController({\n        messagesLimit: configuration.batchMessagesLimit,\n        bytesLimit: configuration.batchBytesLimit,\n        durationLimit: configuration.flushTimeout,\n        pageMayExitObservable,\n        sessionExpireObservable,\n      }),\n      messageBytesLimit: configuration.messageBytesLimit,\n    })\n  }\n\n  return {\n    flushObservable: primaryBatch.flushController.flushObservable,\n\n    add(message: T, replicated = true) {\n      primaryBatch.add(message)\n      if (replicaBatch && replicated) {\n        replicaBatch.add(replica.transformMessage ? replica.transformMessage(message) : message)\n      }\n    },\n\n    upsert: (message: T, key: string) => {\n      primaryBatch.upsert(message, key)\n      if (replicaBatch) {\n        replicaBatch.upsert(replica.transformMessage ? replica.transformMessage(message) : message, key)\n      }\n    },\n\n    stop: () => {\n      primaryBatch.stop()\n      if (replicaBatch) {\n        replicaBatch.stop()\n      }\n    },\n  }\n}\n", "import { display } from '../display'\nimport { ONE_KIBI_BYTE } from '../utils/byteUtils'\nimport type { Context, ContextArray, ContextValue } from './context'\nimport type { ObjectWithToJsonMethod } from './jsonStringify'\nimport { detachToJsonMethod } from './jsonStringify'\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\ntype PrimitivesAndFunctions = string | number | boolean | undefined | null | symbol | bigint | Function\ntype ExtendedContextValue = PrimitivesAndFunctions | object | ExtendedContext | ExtendedContextArray\ntype ExtendedContext = { [key: string]: ExtendedContextValue }\ntype ExtendedContextArray = ExtendedContextValue[]\n\ntype ContainerElementToProcess = {\n  source: ExtendedContextArray | ExtendedContext\n  target: ContextArray | Context\n  path: string\n}\n\ntype SanitizedEvent = {\n  type: string\n  isTrusted: boolean\n  currentTarget: string | null | undefined\n  target: string | null | undefined\n}\n\n// The maximum size of a single event is 256KiB. By default, we ensure that user-provided data\n// going through sanitize fits inside our events, while leaving room for other contexts, metadata, ...\nconst SANITIZE_DEFAULT_MAX_CHARACTER_COUNT = 220 * ONE_KIBI_BYTE\n\n// Symbol for the root element of the JSONPath used for visited objects\nconst JSON_PATH_ROOT_ELEMENT = '$'\n\n// When serializing (using JSON.stringify) a key of an object, { key: 42 } gets wrapped in quotes as \"key\".\n// With the separator (:), we need to add 3 characters to the count.\nconst KEY_DECORATION_LENGTH = 3\n\n/**\n * Ensures user-provided data is 'safe' for the SDK\n * - Deep clones data\n * - Removes cyclic references\n * - Transforms unserializable types to a string representation\n *\n * LIMITATIONS:\n * - Size is in characters, not byte count (may differ according to character encoding)\n * - Size does not take into account indentation that can be applied to JSON.stringify\n * - Non-numerical properties of Arrays are ignored. Same behavior as JSON.stringify\n *\n * @param source              User-provided data meant to be serialized using JSON.stringify\n * @param maxCharacterCount   Maximum number of characters allowed in serialized form\n */\nexport function sanitize(source: string, maxCharacterCount?: number): string | undefined\nexport function sanitize(source: Context, maxCharacterCount?: number): Context\nexport function sanitize(source: unknown, maxCharacterCount?: number): ContextValue\nexport function sanitize(source: unknown, maxCharacterCount = SANITIZE_DEFAULT_MAX_CHARACTER_COUNT) {\n  // Unbind any toJSON function we may have on [] or {} prototypes\n  const restoreObjectPrototypeToJson = detachToJsonMethod(Object.prototype)\n  const restoreArrayPrototypeToJson = detachToJsonMethod(Array.prototype)\n\n  // Initial call to sanitizeProcessor - will populate containerQueue if source is an Array or a plain Object\n  const containerQueue: ContainerElementToProcess[] = []\n  const visitedObjectsWithPath = new WeakMap<object, string>()\n  const sanitizedData = sanitizeProcessor(\n    source as ExtendedContextValue,\n    JSON_PATH_ROOT_ELEMENT,\n    undefined,\n    containerQueue,\n    visitedObjectsWithPath\n  )\n  const serializedSanitizedData = JSON.stringify(sanitizedData)\n  let accumulatedCharacterCount = serializedSanitizedData ? serializedSanitizedData.length : 0\n\n  if (accumulatedCharacterCount > maxCharacterCount) {\n    warnOverCharacterLimit(maxCharacterCount, 'discarded', source)\n    return undefined\n  }\n\n  while (containerQueue.length > 0 && accumulatedCharacterCount < maxCharacterCount) {\n    const containerToProcess = containerQueue.shift()!\n    let separatorLength = 0 // 0 for the first element, 1 for subsequent elements\n\n    // Arrays and Objects have to be handled distinctly to ensure\n    // we do not pick up non-numerical properties from Arrays\n    if (Array.isArray(containerToProcess.source)) {\n      for (let key = 0; key < containerToProcess.source.length; key++) {\n        const targetData = sanitizeProcessor(\n          containerToProcess.source[key],\n          containerToProcess.path,\n          key,\n          containerQueue,\n          visitedObjectsWithPath\n        )\n\n        if (targetData !== undefined) {\n          accumulatedCharacterCount += JSON.stringify(targetData).length\n        } else {\n          // When an element of an Array (targetData) is undefined, it is serialized as null:\n          // JSON.stringify([undefined]) => '[null]' - This accounts for 4 characters\n          accumulatedCharacterCount += 4\n        }\n        accumulatedCharacterCount += separatorLength\n        separatorLength = 1\n        if (accumulatedCharacterCount > maxCharacterCount) {\n          warnOverCharacterLimit(maxCharacterCount, 'truncated', source)\n          break\n        }\n        ;(containerToProcess.target as ContextArray)[key] = targetData\n      }\n    } else {\n      for (const key in containerToProcess.source) {\n        if (Object.prototype.hasOwnProperty.call(containerToProcess.source, key)) {\n          const targetData = sanitizeProcessor(\n            containerToProcess.source[key],\n            containerToProcess.path,\n            key,\n            containerQueue,\n            visitedObjectsWithPath\n          )\n          // When a property of an object has an undefined value, it will be dropped during serialization:\n          // JSON.stringify({a:undefined}) => '{}'\n          if (targetData !== undefined) {\n            accumulatedCharacterCount +=\n              JSON.stringify(targetData).length + separatorLength + key.length + KEY_DECORATION_LENGTH\n            separatorLength = 1\n          }\n          if (accumulatedCharacterCount > maxCharacterCount) {\n            warnOverCharacterLimit(maxCharacterCount, 'truncated', source)\n            break\n          }\n          ;(containerToProcess.target as Context)[key] = targetData\n        }\n      }\n    }\n  }\n\n  // Rebind detached toJSON functions\n  restoreObjectPrototypeToJson()\n  restoreArrayPrototypeToJson()\n\n  return sanitizedData\n}\n\n/**\n * Internal function to factorize the process common to the\n * initial call to sanitize, and iterations for Arrays and Objects\n *\n */\nfunction sanitizeProcessor(\n  source: ExtendedContextValue,\n  parentPath: string,\n  key: string | number | undefined,\n  queue: ContainerElementToProcess[],\n  visitedObjectsWithPath: WeakMap<object, string>\n) {\n  // Start by handling toJSON, as we want to sanitize its output\n  const sourceToSanitize = tryToApplyToJSON(source)\n\n  if (!sourceToSanitize || typeof sourceToSanitize !== 'object') {\n    return sanitizePrimitivesAndFunctions(sourceToSanitize)\n  }\n\n  const sanitizedSource = sanitizeObjects(sourceToSanitize)\n  if (sanitizedSource !== '[Object]' && sanitizedSource !== '[Array]' && sanitizedSource !== '[Error]') {\n    return sanitizedSource\n  }\n\n  // Handle potential cyclic references\n  // We need to use source as sourceToSanitize could be a reference to a new object\n  // At this stage, we know the source is an object type\n  const sourceAsObject = source as object\n  if (visitedObjectsWithPath.has(sourceAsObject)) {\n    return `[Reference seen at ${visitedObjectsWithPath.get(sourceAsObject)!}]`\n  }\n\n  // Add processed source to queue\n  const currentPath = key !== undefined ? `${parentPath}.${key}` : parentPath\n  const target = Array.isArray(sourceToSanitize) ? ([] as ContextArray) : ({} as Context)\n  visitedObjectsWithPath.set(sourceAsObject, currentPath)\n  queue.push({ source: sourceToSanitize as ExtendedContext | ExtendedContextArray, target, path: currentPath })\n\n  return target\n}\n\n/**\n * Handles sanitization of simple, non-object types\n *\n */\nfunction sanitizePrimitivesAndFunctions(value: PrimitivesAndFunctions) {\n  // BigInt cannot be serialized by JSON.stringify(), convert it to a string representation\n  if (typeof value === 'bigint') {\n    return `[BigInt] ${value.toString()}`\n  }\n  // Functions cannot be serialized by JSON.stringify(). Moreover, if a faulty toJSON is present, it needs to be converted\n  // so it won't prevent stringify from serializing later\n  if (typeof value === 'function') {\n    return `[Function] ${value.name || 'unknown'}`\n  }\n  // JSON.stringify() does not serialize symbols.\n  if (typeof value === 'symbol') {\n    // symbol.description is part of ES2019+\n    type symbolWithDescription = symbol & { description: string }\n    return `[Symbol] ${(value as symbolWithDescription).description || value.toString()}`\n  }\n\n  return value\n}\n\n/**\n * Handles sanitization of object types\n *\n * LIMITATIONS\n * - If a class defines a toStringTag Symbol, it will fall in the catch-all method and prevent enumeration of properties.\n * To avoid this, a toJSON method can be defined.\n */\nfunction sanitizeObjects(value: object): string | SanitizedEvent {\n  try {\n    if (value instanceof Event) {\n      return sanitizeEvent(value)\n    }\n\n    if (value instanceof RegExp) {\n      return `[RegExp] ${value.toString()}`\n    }\n\n    // Handle all remaining object types in a generic way\n    const result = Object.prototype.toString.call(value)\n    const match = result.match(/\\[object (.*)\\]/)\n    if (match && match[1]) {\n      return `[${match[1]}]`\n    }\n  } catch {\n    // If the previous serialization attempts failed, and we cannot convert using\n    // Object.prototype.toString, declare the value unserializable\n  }\n  return '[Unserializable]'\n}\n\nfunction sanitizeEvent(event: Event): SanitizedEvent {\n  return {\n    type: event.type,\n    isTrusted: event.isTrusted,\n    currentTarget: event.currentTarget ? (sanitizeObjects(event.currentTarget) as string) : null,\n    target: event.target ? (sanitizeObjects(event.target) as string) : null,\n  }\n}\n\n/**\n * Checks if a toJSON function exists and tries to execute it\n *\n */\nfunction tryToApplyToJSON(value: ExtendedContextValue) {\n  const object = value as ObjectWithToJsonMethod\n  if (object && typeof object.toJSON === 'function') {\n    try {\n      return object.toJSON() as ExtendedContextValue\n    } catch {\n      // If toJSON fails, we continue by trying to serialize the value manually\n    }\n  }\n\n  return value\n}\n\n/**\n * Helper function to display the warning when the accumulated character count is over the limit\n */\nfunction warnOverCharacterLimit(maxCharacterCount: number, changeType: 'discarded' | 'truncated', source: unknown) {\n  display.warn(\n    `The data provided has been ${changeType} as it is over the limit of ${maxCharacterCount} characters:`,\n    source\n  )\n}\n", "/**\n * Cross-browser stack trace computation.\n *\n * Reference implementation: https://github.com/csnover/TraceKit/blob/04530298073c3823de72deb0b97e7b38ca7bcb59/tracekit.js\n */\n\nexport interface StackFrame {\n  url?: string\n  func?: string\n  /** The arguments passed to the function, if known. */\n  args?: string[]\n  line?: number\n  column?: number\n  /** An array of source code lines; the middle element corresponds to the correct line. */\n  context?: string[]\n}\n\nexport interface StackTrace {\n  name?: string\n  message?: string\n  url?: string\n  stack: StackFrame[]\n  incomplete?: boolean\n  partial?: boolean\n}\n\nconst UNKNOWN_FUNCTION = '?'\n\nexport function computeStackTrace(ex: unknown): StackTrace {\n  const stack: StackFrame[] = []\n\n  let stackProperty = tryToGetString(ex, 'stack')\n  const exString = String(ex)\n  if (stackProperty && stackProperty.startsWith(exString)) {\n    stackProperty = stackProperty.slice(exString.length)\n  }\n  if (stackProperty) {\n    stackProperty.split('\\n').forEach((line) => {\n      const stackFrame =\n        parseChromeLine(line) || parseChromeAnonymousLine(line) || parseWinLine(line) || parseGeckoLine(line)\n      if (stackFrame) {\n        if (!stackFrame.func && stackFrame.line) {\n          stackFrame.func = UNKNOWN_FUNCTION\n        }\n\n        stack.push(stackFrame)\n      }\n    })\n  }\n\n  if (stack.length > 0 && isWronglyReportingCustomErrors() && ex instanceof Error) {\n    // if we are wrongly reporting custom errors\n    const constructors: string[] = []\n\n    // go through each inherited constructor\n    let currentPrototype: object | undefined = ex\n    while (\n      (currentPrototype = Object.getPrototypeOf(currentPrototype)) &&\n      isNonNativeClassPrototype(currentPrototype)\n    ) {\n      const constructorName = currentPrototype.constructor?.name || UNKNOWN_FUNCTION\n      constructors.push(constructorName)\n    }\n\n    // traverse the stacktrace in reverse order because the stacktrace starts with the last inherited constructor\n    // we check constructor names to ensure we remove the correct frame (and there isn't a weird unsupported environment behavior)\n    for (let i = constructors.length - 1; i >= 0 && stack[0]?.func === constructors[i]; i--) {\n      // if the first stack frame is the custom error constructor\n      // null stack frames may represent frames that failed to be parsed because the error class did not have a constructor\n      stack.shift() // remove it\n    }\n  }\n\n  return {\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name'),\n    stack,\n  }\n}\nconst fileUrl =\n  '((?:file|https?|blob|chrome-extension|electron|native|eval|webpack|snippet|<anonymous>|\\\\w+\\\\.|\\\\/).*?)'\nconst filePosition = '(?::(\\\\d+))'\nconst CHROME_LINE_RE = new RegExp(`^\\\\s*at (.*?) ?\\\\(${fileUrl}${filePosition}?${filePosition}?\\\\)?\\\\s*$`, 'i')\n\nconst CHROME_EVAL_RE = new RegExp(`\\\\((\\\\S*)${filePosition}${filePosition}\\\\)`)\n\nfunction parseChromeLine(line: string): StackFrame | undefined {\n  const parts = CHROME_LINE_RE.exec(line)\n\n  if (!parts) {\n    return\n  }\n\n  const isNative = parts[2] && parts[2].indexOf('native') === 0 // start of line\n  const isEval = parts[2] && parts[2].indexOf('eval') === 0 // start of line\n  const submatch = CHROME_EVAL_RE.exec(parts[2])\n\n  if (isEval && submatch) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1] // url\n    parts[3] = submatch[2] // line\n    parts[4] = submatch[3] // column\n  }\n\n  return {\n    args: isNative ? [parts[2]] : [],\n    column: parts[4] ? +parts[4] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: parts[3] ? +parts[3] : undefined,\n    url: !isNative ? parts[2] : undefined,\n  }\n}\n\nconst CHROME_ANONYMOUS_FUNCTION_RE = new RegExp(`^\\\\s*at ?${fileUrl}${filePosition}?${filePosition}??\\\\s*$`, 'i')\n\nfunction parseChromeAnonymousLine(line: string): StackFrame | undefined {\n  const parts = CHROME_ANONYMOUS_FUNCTION_RE.exec(line)\n\n  if (!parts) {\n    return\n  }\n\n  return {\n    args: [],\n    column: parts[3] ? +parts[3] : undefined,\n    func: UNKNOWN_FUNCTION,\n    line: parts[2] ? +parts[2] : undefined,\n    url: parts[1],\n  }\n}\n\nconst WINJS_LINE_RE =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i\n\nfunction parseWinLine(line: string): StackFrame | undefined {\n  const parts = WINJS_LINE_RE.exec(line)\n  if (!parts) {\n    return\n  }\n\n  return {\n    args: [],\n    column: parts[4] ? +parts[4] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: +parts[3],\n    url: parts[2],\n  }\n}\n\nconst GECKO_LINE_RE =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:(?:(?:^|@)((?:file|https?|blob|chrome|webpack|resource|capacitor|\\[native).*?|[^@]*bundle|\\[wasm code\\])(?::(\\d+))?(?::(\\d+))?)|@)\\s*$/i\nconst GECKO_EVAL_RE = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i\n\nfunction parseGeckoLine(line: string): StackFrame | undefined {\n  const parts = GECKO_LINE_RE.exec(line)\n  if (!parts) {\n    return\n  }\n\n  const isEval = parts[3] && parts[3].indexOf(' > eval') > -1\n  const submatch = GECKO_EVAL_RE.exec(parts[3])\n\n  if (isEval && submatch) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1]\n    parts[4] = submatch[2]\n    parts[5] = undefined! // no column when eval\n  }\n\n  return {\n    args: parts[2] ? parts[2].split(',') : [],\n    column: parts[5] ? +parts[5] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: parts[4] ? +parts[4] : undefined,\n    url: parts[3],\n  }\n}\n\nfunction tryToGetString(candidate: unknown, property: string) {\n  if (typeof candidate !== 'object' || !candidate || !(property in candidate)) {\n    return undefined\n  }\n  const value = (candidate as { [k: string]: unknown })[property]\n  return typeof value === 'string' ? value : undefined\n}\n\nexport function computeStackTraceFromOnErrorMessage(\n  messageObj: unknown,\n  url?: string,\n  line?: number,\n  column?: number\n): StackTrace | undefined {\n  if (url === undefined) {\n    return\n  }\n  const { name, message } = tryToParseMessage(messageObj)\n  return {\n    name,\n    message,\n    stack: [{ url, column, line }],\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nconst ERROR_TYPES_RE =\n  /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?([\\s\\S]*)$/\n\nfunction tryToParseMessage(messageObj: unknown) {\n  let name\n  let message\n  if ({}.toString.call(messageObj) === '[object String]') {\n    ;[, name, message] = ERROR_TYPES_RE.exec(messageObj as string)!\n  }\n  return { name, message }\n}\n\n// Custom error stacktrace fix\n// Some browsers (safari/firefox) add the error constructor as a frame in the stacktrace\n// In order to normalize the stacktrace, we need to remove it\n\nfunction isNonNativeClassPrototype(prototype: object) {\n  return String(prototype.constructor).startsWith('class ')\n}\n\nlet isWronglyReportingCustomErrorsCache: boolean | undefined\n\nfunction isWronglyReportingCustomErrors() {\n  if (isWronglyReportingCustomErrorsCache !== undefined) {\n    return isWronglyReportingCustomErrorsCache\n  }\n\n  /* eslint-disable no-restricted-syntax */\n  class DatadogTestCustomError extends Error {\n    constructor() {\n      super()\n      this.name = 'Error' // set name to Error so that no browser would default to the constructor name\n    }\n  }\n\n  const [customError, nativeError] = [DatadogTestCustomError, Error].map((errConstructor) => new errConstructor()) // so that both errors should exactly have the same stacktrace\n\n  isWronglyReportingCustomErrorsCache =\n    // If customError is not a class, it means that this was built with ES5 as target, converting the class to a normal object.\n    // Thus, error constructors will be reported on all browsers, which is the expected behavior.\n    isNonNativeClassPrototype(Object.getPrototypeOf(customError)) &&\n    // If the browser is correctly reporting the stacktrace, the normal error stacktrace should be the same as the custom error stacktrace\n    nativeError.stack !== customError.stack\n\n  return isWronglyReportingCustomErrorsCache\n}\n", "import { callMonitored } from '../monitor'\nimport type { StackTrace } from './computeStackTrace'\nimport { computeStackTrace } from './computeStackTrace'\n\n/**\n * Creates a stacktrace without SDK internal frames.\n * Constraints:\n * - Has to be called at the utmost position of the call stack.\n * - No monitored function should encapsulate it, that is why we need to use callMonitored inside it.\n */\nexport function createHandlingStack(\n  type: 'console error' | 'action' | 'error' | 'instrumented method' | 'log' | 'react error'\n): string {\n  /**\n   * Skip the two internal frames:\n   * - SDK API (console.error, ...)\n   * - this function\n   * in order to keep only the user calls\n   */\n  const internalFramesToSkip = 2\n  const error = new Error(type)\n  error.name = 'HandlingStack'\n  let formattedStack: string\n\n  callMonitored(() => {\n    const stackTrace = computeStackTrace(error)\n    stackTrace.stack = stackTrace.stack.slice(internalFramesToSkip)\n    formattedStack = toStackTraceString(stackTrace)\n  })\n\n  return formattedStack!\n}\n\nexport function toStackTraceString(stack: StackTrace) {\n  let result = formatErrorMessage(stack)\n  stack.stack.forEach((frame) => {\n    const func = frame.func === '?' ? '<anonymous>' : frame.func\n    const args = frame.args && frame.args.length > 0 ? `(${frame.args.join(', ')})` : ''\n    const line = frame.line ? `:${frame.line}` : ''\n    const column = frame.line && frame.column ? `:${frame.column}` : ''\n    result += `\\n  at ${func!}${args} @ ${frame.url!}${line}${column}`\n  })\n  return result\n}\n\nexport function formatErrorMessage(stack: StackTrace) {\n  return `${stack.name || 'Error'}: ${stack.message!}`\n}\n", "import { sanitize } from '../../tools/serialisation/sanitize'\nimport type { ClocksState } from '../../tools/utils/timeUtils'\nimport type { Context } from '../../tools/serialisation/context'\nimport { jsonStringify } from '../../tools/serialisation/jsonStringify'\nimport type { StackTrace } from '../../tools/stackTrace/computeStackTrace'\nimport { computeStackTrace } from '../../tools/stackTrace/computeStackTrace'\nimport { toStackTraceString } from '../../tools/stackTrace/handlingStack'\nimport type { ErrorSource, ErrorHandling, RawError, RawErrorCause, ErrorWithCause, NonErrorPrefix } from './error.types'\n\nexport const NO_ERROR_STACK_PRESENT_MESSAGE = 'No stack, consider using an instance of Error'\n\ntype RawErrorParams = {\n  stackTrace?: StackTrace\n  originalError: unknown\n  handlingStack?: string\n  componentStack?: string\n  startClocks: ClocksState\n  nonErrorPrefix: NonErrorPrefix\n  useFallbackStack?: boolean\n  source: ErrorSource\n  handling: ErrorHandling\n}\n\nexport function computeRawError({\n  stackTrace,\n  originalError,\n  handlingStack,\n  componentStack,\n  startClocks,\n  nonErrorPrefix,\n  useFallbackStack = true,\n  source,\n  handling,\n}: RawErrorParams): RawError {\n  const isErrorInstance = isError(originalError)\n  if (!stackTrace && isErrorInstance) {\n    stackTrace = computeStackTrace(originalError)\n  }\n\n  return {\n    startClocks,\n    source,\n    handling,\n    handlingStack,\n    componentStack,\n    originalError,\n    type: stackTrace ? stackTrace.name : undefined,\n    message: computeMessage(stackTrace, isErrorInstance, nonErrorPrefix, originalError),\n    stack: stackTrace ? toStackTraceString(stackTrace) : useFallbackStack ? NO_ERROR_STACK_PRESENT_MESSAGE : undefined,\n    causes: isErrorInstance ? flattenErrorCauses(originalError as ErrorWithCause, source) : undefined,\n    fingerprint: tryToGetFingerprint(originalError),\n    context: tryToGetErrorContext(originalError),\n  }\n}\n\nfunction computeMessage(\n  stackTrace: StackTrace | undefined,\n  isErrorInstance: boolean,\n  nonErrorPrefix: NonErrorPrefix,\n  originalError: unknown\n) {\n  // Favor stackTrace message only if tracekit has really been able to extract something meaningful (message + name)\n  // TODO rework tracekit integration to avoid scattering error building logic\n  return stackTrace?.message && stackTrace?.name\n    ? stackTrace.message\n    : !isErrorInstance\n      ? `${nonErrorPrefix} ${jsonStringify(sanitize(originalError))!}`\n      : 'Empty message'\n}\n\nexport function tryToGetFingerprint(originalError: unknown) {\n  return isError(originalError) && 'dd_fingerprint' in originalError ? String(originalError.dd_fingerprint) : undefined\n}\n\nexport function tryToGetErrorContext(originalError: unknown) {\n  if (originalError !== null && typeof originalError === 'object' && 'dd_context' in originalError) {\n    return originalError.dd_context as Context\n  }\n}\n\nexport function getFileFromStackTraceString(stack: string) {\n  return /@ (.+)/.exec(stack)?.[1]\n}\n\nexport function isError(error: unknown): error is Error {\n  return error instanceof Error || Object.prototype.toString.call(error) === '[object Error]'\n}\n\nexport function flattenErrorCauses(error: ErrorWithCause, parentSource: ErrorSource): RawErrorCause[] | undefined {\n  let currentError = error\n  const causes: RawErrorCause[] = []\n  while (isError(currentError?.cause) && causes.length < 10) {\n    const stackTrace = computeStackTrace(currentError.cause)\n    causes.push({\n      message: currentError.cause.message,\n      source: parentSource,\n      type: stackTrace?.name,\n      stack: stackTrace && toStackTraceString(stackTrace),\n    })\n    currentError = currentError.cause\n  }\n  return causes.length ? causes : undefined\n}\n", "export function shallowClone<T>(object: T): T & Record<string, never> {\n  return { ...object } as T & Record<string, never>\n}\n\nexport function objectHasValue<T extends { [key: string]: unknown }>(object: T, value: unknown): value is T[keyof T] {\n  return Object.keys(object).some((key) => object[key] === value)\n}\n\nexport function isEmptyObject(object: object) {\n  return Object.keys(object).length === 0\n}\n\nexport function mapValues<A, B>(object: { [key: string]: A }, fn: (arg: A) => B) {\n  const newObject: { [key: string]: B } = {}\n  for (const key of Object.keys(object)) {\n    newObject[key] = fn(object[key])\n  }\n  return newObject\n}\n", "/**\n * LIMITATION:\n * For NPM setup, this feature flag singleton is shared between RUM and Logs product.\n * This means that an experimental flag set on the RUM product will be set on the Logs product.\n * So keep in mind that in certain configurations, your experimental feature flag may affect other products.\n *\n * FORMAT:\n * All feature flags should be snake_cased\n */\n// We want to use a real enum (i.e. not a const enum) here, to be able to check whether an arbitrary\n// string is an expected feature flag\n\nimport { objectHasValue } from './utils/objectUtils'\n\n// eslint-disable-next-line no-restricted-syntax\nexport enum ExperimentalFeature {\n  TRACK_INTAKE_REQUESTS = 'track_intake_requests',\n  WRITABLE_RESOURCE_GRAPHQL = 'writable_resource_graphql',\n}\n\nconst enabledExperimentalFeatures: Set<ExperimentalFeature> = new Set()\n\nexport function initFeatureFlags(enableExperimentalFeatures: string[] | undefined) {\n  if (Array.isArray(enableExperimentalFeatures)) {\n    addExperimentalFeatures(\n      enableExperimentalFeatures.filter((flag): flag is ExperimentalFeature =>\n        objectHasValue(ExperimentalFeature, flag)\n      )\n    )\n  }\n}\n\nexport function addExperimentalFeatures(enabledFeatures: ExperimentalFeature[]): void {\n  enabledFeatures.forEach((flag) => {\n    enabledExperimentalFeatures.add(flag)\n  })\n}\n\nexport function isExperimentalFeatureEnabled(featureName: ExperimentalFeature): boolean {\n  return enabledExperimentalFeatures.has(featureName)\n}\n\nexport function resetExperimentalFeatures(): void {\n  enabledExperimentalFeatures.clear()\n}\n\nexport function getExperimentalFeatures(): Set<ExperimentalFeature> {\n  return enabledExperimentalFeatures\n}\n", "export type Site =\n  | 'datadoghq.com'\n  | 'us3.datadoghq.com'\n  | 'us5.datadoghq.com'\n  | 'datadoghq.eu'\n  | 'ddog-gov.com'\n  | 'ap1.datadoghq.com'\n\nexport const INTAKE_SITE_STAGING: Site = 'datad0g.com' as Site\nexport const INTAKE_SITE_FED_STAGING: Site = 'dd0g-gov.com' as Site\nexport const INTAKE_SITE_US1: Site = 'datadoghq.com'\nexport const INTAKE_SITE_EU1: Site = 'datadoghq.eu'\nexport const INTAKE_SITE_US1_FED: Site = 'ddog-gov.com'\n\nexport const PCI_INTAKE_HOST_US1 = 'pci.browser-intake-datadoghq.com'\nexport const INTAKE_URL_PARAMETERS = ['ddsource', 'ddtags']\n", "interface BrowserWindow {\n  __ddBrowserSdkExtensionCallback?: (message: unknown) => void\n}\n\ntype ExtensionMessageType = 'logs' | 'record' | 'rum' | 'telemetry'\n\nexport function sendToExtension(type: ExtensionMessageType, payload: unknown) {\n  const callback = (window as BrowserWindow).__ddBrowserSdkExtensionCallback\n  if (callback) {\n    callback({ type, payload })\n  }\n}\n", "/**\n * Similar to `typeof`, but distinguish plain objects from `null` and arrays\n */\nexport function getType(value: unknown) {\n  if (value === null) {\n    return 'null'\n  }\n  if (Array.isArray(value)) {\n    return 'array'\n  }\n  return typeof value\n}\n", "import { getType } from './utils/typeUtils'\n\ntype Merged<TDestination, TSource> =\n  // case 1 - source is undefined - return destination\n  TSource extends undefined\n    ? TDestination\n    : // case 2 - destination is undefined - return source\n      TDestination extends undefined\n      ? TSource\n      : // case 3 - source is an array - see if it merges or overwrites\n        TSource extends any[]\n        ? TDestination extends any[]\n          ? TDestination & TSource\n          : TSource\n        : // case 4 - source is an object - see if it merges or overwrites\n          TSource extends object\n          ? TDestination extends object\n            ? TDestination extends any[]\n              ? TSource\n              : TDestination & TSource\n            : TSource\n          : // case 5 - cannot merge - return source\n            TSource\n\n/**\n * Iterate over source and affect its sub values into destination, recursively.\n * If the source and destination can't be merged, return source.\n */\nexport function mergeInto<D, S>(\n  destination: D,\n  source: S,\n  circularReferenceChecker = createCircularReferenceChecker()\n): Merged<D, S> {\n  // ignore the source if it is undefined\n  if (source === undefined) {\n    return destination as Merged<D, S>\n  }\n\n  if (typeof source !== 'object' || source === null) {\n    // primitive values - just return source\n    return source as Merged<D, S>\n  } else if (source instanceof Date) {\n    return new Date(source.getTime()) as unknown as Merged<D, S>\n  } else if (source instanceof RegExp) {\n    const flags =\n      source.flags ||\n      // old browsers compatibility\n      [\n        source.global ? 'g' : '',\n        source.ignoreCase ? 'i' : '',\n        source.multiline ? 'm' : '',\n        source.sticky ? 'y' : '',\n        source.unicode ? 'u' : '',\n      ].join('')\n    return new RegExp(source.source, flags) as unknown as Merged<D, S>\n  }\n\n  if (circularReferenceChecker.hasAlreadyBeenSeen(source)) {\n    // remove circular references\n    return undefined as unknown as Merged<D, S>\n  } else if (Array.isArray(source)) {\n    const merged: any[] = Array.isArray(destination) ? destination : []\n    for (let i = 0; i < source.length; ++i) {\n      merged[i] = mergeInto(merged[i], source[i], circularReferenceChecker)\n    }\n    return merged as unknown as Merged<D, S>\n  }\n\n  const merged = getType(destination) === 'object' ? (destination as Record<any, any>) : {}\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      merged[key] = mergeInto(merged[key], source[key], circularReferenceChecker)\n    }\n  }\n  return merged as unknown as Merged<D, S>\n}\n\n/**\n * A simplistic implementation of a deep clone algorithm.\n * Caveats:\n * - It doesn't maintain prototype chains - don't use with instances of custom classes.\n * - It doesn't handle Map and Set\n */\nexport function deepClone<T>(value: T): T {\n  return mergeInto(undefined, value) as T\n}\n\ntype Combined<A, B> = A extends null ? B : B extends null ? A : Merged<A, B>\n\n/*\n * Performs a deep merge of objects and arrays.\n * - Arguments won't be mutated\n * - Object and arrays in the output value are de-referenced (\"deep cloned\")\n * - Arrays values are merged index by index\n * - Objects are merged by keys\n * - Values get replaced, unless undefined\n */\nexport function combine<A, B>(a: A, b: B): Combined<A, B>\nexport function combine<A, B, C>(a: A, b: B, c: C): Combined<Combined<A, B>, C>\nexport function combine<A, B, C, D>(a: A, b: B, c: C, d: D): Combined<Combined<Combined<A, B>, C>, D>\nexport function combine<A, B, C, D, E>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E\n): Combined<Combined<Combined<Combined<A, B>, C>, D>, E>\nexport function combine<A, B, C, D, E, F>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F\n): Combined<Combined<Combined<Combined<Combined<A, B>, C>, D>, E>, F>\nexport function combine<A, B, C, D, E, F, G>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n  g: G\n): Combined<Combined<Combined<Combined<Combined<Combined<A, B>, C>, D>, E>, F>, G>\nexport function combine<A, B, C, D, E, F, G, H>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n  g: G,\n  h: H\n): Combined<Combined<Combined<Combined<Combined<Combined<Combined<A, B>, C>, D>, E>, F>, G>, H>\nexport function combine(...sources: any[]): unknown {\n  let destination: any\n\n  for (const source of sources) {\n    // Ignore any undefined or null sources.\n    if (source === undefined || source === null) {\n      continue\n    }\n\n    destination = mergeInto(destination, source)\n  }\n\n  return destination as unknown\n}\n\ninterface CircularReferenceChecker {\n  hasAlreadyBeenSeen(value: any): boolean\n}\n\nfunction createCircularReferenceChecker(): CircularReferenceChecker {\n  if (typeof WeakSet !== 'undefined') {\n    const set: WeakSet<any> = new WeakSet()\n    return {\n      hasAlreadyBeenSeen(value) {\n        const has = set.has(value)\n        if (!has) {\n          set.add(value)\n        }\n        return has\n      },\n    }\n  }\n  const array: any[] = []\n  return {\n    hasAlreadyBeenSeen(value) {\n      const has = array.indexOf(value) >= 0\n      if (!has) {\n        array.push(value)\n      }\n      return has\n    },\n  }\n}\n", "export type NetworkInterface = 'bluetooth' | 'cellular' | 'ethernet' | 'none' | 'wifi' | 'wimax' | 'other' | 'unknown'\nexport type EffectiveType = 'slow-2g' | '2g' | '3g' | '4g'\n\ninterface BrowserNavigator extends Navigator {\n  connection?: NetworkInformation\n}\n\nexport interface NetworkInformation {\n  type?: NetworkInterface\n  effectiveType?: EffectiveType\n  saveData: boolean\n}\n\nexport interface Connectivity {\n  status: 'connected' | 'not_connected'\n  interfaces?: NetworkInterface[]\n  effective_type?: EffectiveType\n  [key: string]: unknown\n}\n\nexport function getConnectivity(): Connectivity {\n  const navigator = window.navigator as BrowserNavigator\n  return {\n    status: navigator.onLine ? 'connected' : 'not_connected',\n    interfaces: navigator.connection && navigator.connection.type ? [navigator.connection.type] : undefined,\n    effective_type: navigator.connection?.effectiveType,\n  }\n}\n", "export function removeDuplicates<T>(array: T[]) {\n  const set = new Set<T>()\n  array.forEach((item) => set.add(item))\n  return Array.from(set)\n}\n\nexport function removeItem<T>(array: T[], item: T) {\n  const index = array.indexOf(item)\n  if (index >= 0) {\n    array.splice(index, 1)\n  }\n}\n", "import { removeItem } from './utils/arrayUtils'\n\nconst BUFFER_LIMIT = 500\n\nexport interface BoundedBuffer<T = void> {\n  add: (callback: (arg: T) => void) => void\n  remove: (callback: (arg: T) => void) => void\n  drain: (arg: T) => void\n}\n\nexport function createBoundedBuffer<T = void>(): BoundedBuffer<T> {\n  const buffer: Array<(arg: T) => void> = []\n\n  const add: BoundedBuffer<T>['add'] = (callback: (arg: T) => void) => {\n    const length = buffer.push(callback)\n    if (length > BUFFER_LIMIT) {\n      buffer.splice(0, 1)\n    }\n  }\n\n  const remove: BoundedBuffer<T>['remove'] = (callback: (arg: T) => void) => {\n    removeItem(buffer, callback)\n  }\n\n  const drain = (arg: T) => {\n    buffer.forEach((callback) => callback(arg))\n    buffer.length = 0\n  }\n\n  return {\n    add,\n    remove,\n    drain,\n  }\n}\n", "import type { TelemetryEvent, TelemetryConfigurationEvent, TelemetryUsageEvent } from './telemetryEvent.types'\n\nexport const TelemetryType = {\n  log: 'log',\n  configuration: 'configuration',\n  usage: 'usage',\n} as const\n\nexport const enum StatusType {\n  debug = 'debug',\n  error = 'error',\n}\n\nexport interface RuntimeEnvInfo {\n  is_local_file: boolean\n  is_worker: boolean\n}\n\nexport type RawTelemetryEvent = TelemetryEvent['telemetry']\nexport type RawTelemetryConfiguration = TelemetryConfigurationEvent['telemetry']['configuration']\nexport type RawTelemetryUsage = TelemetryUsageEvent['telemetry']['usage']\nexport type RawTelemetryUsageFeature = TelemetryUsageEvent['telemetry']['usage']['feature']\n", "import type { Context, ContextValue } from '../../tools/serialisation/context'\nimport { ConsoleApiName } from '../../tools/display'\nimport { NO_ERROR_STACK_PRESENT_MESSAGE, isError } from '../error/error'\nimport { toStackTraceString } from '../../tools/stackTrace/handlingStack'\nimport { getExperimentalFeatures } from '../../tools/experimentalFeatures'\nimport type { Configuration } from '../configuration'\nimport { INTAKE_SITE_STAGING, INTAKE_SITE_US1_FED } from '../intakeSites'\nimport { Observable } from '../../tools/observable'\nimport { timeStampNow } from '../../tools/utils/timeUtils'\nimport { displayIfDebugEnabled, startMonitorErrorCollection } from '../../tools/monitor'\nimport { sendToExtension } from '../../tools/sendToExtension'\nimport { performDraw } from '../../tools/utils/numberUtils'\nimport { jsonStringify } from '../../tools/serialisation/jsonStringify'\nimport { combine } from '../../tools/mergeInto'\nimport type { RawError } from '../error/error.types'\nimport { NonErrorPrefix } from '../error/error.types'\nimport type { StackTrace } from '../../tools/stackTrace/computeStackTrace'\nimport { computeStackTrace } from '../../tools/stackTrace/computeStackTrace'\nimport { getConnectivity } from '../connectivity'\nimport { createBoundedBuffer } from '../../tools/boundedBuffer'\nimport { canUseEventBridge, getEventBridge, startBatchWithReplica } from '../../transport'\nimport type { Encoder } from '../../tools/encoder'\nimport type { PageMayExitEvent } from '../../browser/pageMayExitObservable'\nimport { DeflateEncoderStreamId } from '../deflate'\nimport type { TelemetryEvent } from './telemetryEvent.types'\nimport type {\n  RawTelemetryConfiguration,\n  RawTelemetryEvent,\n  RuntimeEnvInfo,\n  RawTelemetryUsage,\n} from './rawTelemetryEvent.types'\nimport { StatusType, TelemetryType } from './rawTelemetryEvent.types'\n\n// replaced at build time\ndeclare const __BUILD_ENV__SDK_VERSION__: string\ndeclare const __BUILD_ENV__SDK_SETUP__: string\n\nconst ALLOWED_FRAME_URLS = [\n  'https://www.datadoghq-browser-agent.com',\n  'https://www.datad0g-browser-agent.com',\n  'https://d3uc069fcn7uxw.cloudfront.net',\n  'https://d20xtzwzcl0ceb.cloudfront.net',\n  'http://localhost',\n  '<anonymous>',\n]\n\nexport const enum TelemetryService {\n  LOGS = 'browser-logs-sdk',\n  RUM = 'browser-rum-sdk',\n}\n\nexport interface Telemetry {\n  setContextProvider: (key: string, contextProvider: () => ContextValue | undefined) => void\n  stop: () => void\n  enabled: boolean\n}\n\nconst TELEMETRY_EXCLUDED_SITES: string[] = [INTAKE_SITE_US1_FED]\n\n// eslint-disable-next-line local-rules/disallow-side-effects\nlet preStartTelemetryBuffer = createBoundedBuffer()\nlet onRawTelemetryEventCollected = (event: RawTelemetryEvent) => {\n  preStartTelemetryBuffer.add(() => onRawTelemetryEventCollected(event))\n}\n\nexport function startTelemetry(\n  telemetryService: TelemetryService,\n  configuration: Configuration,\n  reportError: (error: RawError) => void,\n  pageMayExitObservable: Observable<PageMayExitEvent>,\n  createEncoder: (streamId: DeflateEncoderStreamId) => Encoder\n): Telemetry {\n  const observable = new Observable<TelemetryEvent & Context>()\n\n  const { stop } = startTelemetryTransport(configuration, reportError, pageMayExitObservable, createEncoder, observable)\n\n  const { enabled, setContextProvider } = startTelemetryCollection(telemetryService, configuration, observable)\n\n  return {\n    setContextProvider,\n    stop,\n    enabled,\n  }\n}\n\nexport function startTelemetryCollection(\n  telemetryService: TelemetryService,\n  configuration: Configuration,\n  observable: Observable<TelemetryEvent & Context>\n) {\n  const alreadySentEvents = new Set<string>()\n  const contextProviders = new Map<string, () => ContextValue | undefined>()\n\n  const telemetryEnabled =\n    !TELEMETRY_EXCLUDED_SITES.includes(configuration.site) && performDraw(configuration.telemetrySampleRate)\n\n  const telemetryEnabledPerType = {\n    [TelemetryType.log]: telemetryEnabled,\n    [TelemetryType.configuration]: telemetryEnabled && performDraw(configuration.telemetryConfigurationSampleRate),\n    [TelemetryType.usage]: telemetryEnabled && performDraw(configuration.telemetryUsageSampleRate),\n  }\n\n  const runtimeEnvInfo = getRuntimeEnvInfo()\n  onRawTelemetryEventCollected = (rawEvent: RawTelemetryEvent) => {\n    const stringifiedEvent = jsonStringify(rawEvent)!\n    if (\n      telemetryEnabledPerType[rawEvent.type!] &&\n      alreadySentEvents.size < configuration.maxTelemetryEventsPerPage &&\n      !alreadySentEvents.has(stringifiedEvent)\n    ) {\n      const event = toTelemetryEvent(telemetryService, rawEvent, runtimeEnvInfo)\n      observable.notify(event)\n      sendToExtension('telemetry', event)\n      alreadySentEvents.add(stringifiedEvent)\n    }\n  }\n  // need to be called after telemetry context is provided and observers are registered\n  preStartTelemetryBuffer.drain()\n  startMonitorErrorCollection(addTelemetryError)\n\n  return {\n    setContextProvider: (key: string, contextProvider: () => ContextValue | undefined) =>\n      contextProviders.set(key, contextProvider),\n    enabled: telemetryEnabled,\n  }\n\n  function toTelemetryEvent(\n    telemetryService: TelemetryService,\n    rawEvent: RawTelemetryEvent,\n    runtimeEnvInfo: RuntimeEnvInfo\n  ): TelemetryEvent & Context {\n    const event = {\n      type: 'telemetry' as const,\n      date: timeStampNow(),\n      service: telemetryService,\n      version: __BUILD_ENV__SDK_VERSION__,\n      source: 'browser' as const,\n      _dd: {\n        format_version: 2 as const,\n      },\n      telemetry: combine(rawEvent, {\n        runtime_env: runtimeEnvInfo,\n        connectivity: getConnectivity(),\n        sdk_setup: __BUILD_ENV__SDK_SETUP__,\n      }) as TelemetryEvent['telemetry'],\n      experimental_features: Array.from(getExperimentalFeatures()),\n    } as TelemetryEvent & Context\n\n    for (const [key, contextProvider] of contextProviders) {\n      event[key] = contextProvider()\n    }\n\n    return event\n  }\n}\n\nfunction startTelemetryTransport(\n  configuration: Configuration,\n  reportError: (error: RawError) => void,\n  pageMayExitObservable: Observable<PageMayExitEvent>,\n  createEncoder: (streamId: DeflateEncoderStreamId) => Encoder,\n  telemetryObservable: Observable<TelemetryEvent & Context>\n) {\n  const cleanupTasks: Array<() => void> = []\n  if (canUseEventBridge()) {\n    const bridge = getEventBridge<'internal_telemetry', TelemetryEvent>()!\n    const telemetrySubscription = telemetryObservable.subscribe((event) => bridge.send('internal_telemetry', event))\n    cleanupTasks.push(() => telemetrySubscription.unsubscribe())\n  } else {\n    const telemetryBatch = startBatchWithReplica(\n      configuration,\n      {\n        endpoint: configuration.rumEndpointBuilder,\n        encoder: createEncoder(DeflateEncoderStreamId.TELEMETRY),\n      },\n      configuration.replica && {\n        endpoint: configuration.replica.rumEndpointBuilder,\n        encoder: createEncoder(DeflateEncoderStreamId.TELEMETRY_REPLICA),\n      },\n      reportError,\n      pageMayExitObservable,\n\n      // We don't use an actual session expire observable here, to make telemetry collection\n      // independent of the session. This allows to start and send telemetry events ealier.\n      new Observable()\n    )\n    cleanupTasks.push(() => telemetryBatch.stop())\n    const telemetrySubscription = telemetryObservable.subscribe((event) =>\n      telemetryBatch.add(event, isTelemetryReplicationAllowed(configuration))\n    )\n    cleanupTasks.push(() => telemetrySubscription.unsubscribe())\n  }\n\n  return {\n    stop: () => cleanupTasks.forEach((task) => task()),\n  }\n}\n\nfunction getRuntimeEnvInfo(): RuntimeEnvInfo {\n  return {\n    is_local_file: window.location.protocol === 'file:',\n    is_worker: 'WorkerGlobalScope' in self,\n  }\n}\n\nexport function startFakeTelemetry() {\n  const events: RawTelemetryEvent[] = []\n\n  onRawTelemetryEventCollected = (event: RawTelemetryEvent) => {\n    events.push(event)\n  }\n\n  return events\n}\n\nexport function resetTelemetry() {\n  preStartTelemetryBuffer = createBoundedBuffer()\n  onRawTelemetryEventCollected = (event: RawTelemetryEvent) => {\n    preStartTelemetryBuffer.add(() => onRawTelemetryEventCollected(event))\n  }\n}\n\n/**\n * Avoid mixing telemetry events from different data centers\n * but keep replicating staging events for reliability\n */\nexport function isTelemetryReplicationAllowed(configuration: Configuration) {\n  return configuration.site === INTAKE_SITE_STAGING\n}\n\nexport function addTelemetryDebug(message: string, context?: Context) {\n  displayIfDebugEnabled(ConsoleApiName.debug, message, context)\n  onRawTelemetryEventCollected({\n    type: TelemetryType.log,\n    message,\n    status: StatusType.debug,\n    ...context,\n  })\n}\n\nexport function addTelemetryError(e: unknown, context?: Context) {\n  onRawTelemetryEventCollected({\n    type: TelemetryType.log,\n    status: StatusType.error,\n    ...formatError(e),\n    ...context,\n  })\n}\n\nexport function addTelemetryConfiguration(configuration: RawTelemetryConfiguration) {\n  onRawTelemetryEventCollected({\n    type: TelemetryType.configuration,\n    configuration,\n  })\n}\n\nexport function addTelemetryUsage(usage: RawTelemetryUsage) {\n  onRawTelemetryEventCollected({\n    type: TelemetryType.usage,\n    usage,\n  })\n}\n\nexport function formatError(e: unknown) {\n  if (isError(e)) {\n    const stackTrace = computeStackTrace(e)\n    return {\n      error: {\n        kind: stackTrace.name,\n        stack: toStackTraceString(scrubCustomerFrames(stackTrace)),\n      },\n      message: stackTrace.message!,\n    }\n  }\n  return {\n    error: {\n      stack: NO_ERROR_STACK_PRESENT_MESSAGE,\n    },\n    message: `${NonErrorPrefix.UNCAUGHT} ${jsonStringify(e)!}`,\n  }\n}\n\nexport function scrubCustomerFrames(stackTrace: StackTrace) {\n  stackTrace.stack = stackTrace.stack.filter(\n    (frame) => !frame.url || ALLOWED_FRAME_URLS.some((allowedFrameUrl) => frame.url!.startsWith(allowedFrameUrl))\n  )\n  return stackTrace\n}\n", "import { display } from './display'\n\nexport function catchUserErrors<Args extends any[], R>(fn: (...args: Args) => R, errorMsg: string) {\n  return (...args: Args) => {\n    try {\n      return fn(...args)\n    } catch (err) {\n      display.error(errorMsg, err)\n    }\n  }\n}\n", "/**\n * UUID v4\n * from https://gist.github.com/jed/982883\n */\nexport function generateUUID(placeholder?: string): string {\n  return placeholder\n    ? // eslint-disable-next-line  no-bitwise\n      (parseInt(placeholder, 10) ^ ((Math.random() * 16) >> (parseInt(placeholder, 10) / 4))).toString(16)\n    : `${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`.replace(/[018]/g, generateUUID)\n}\n\nconst COMMA_SEPARATED_KEY_VALUE = /([\\w-]+)\\s*=\\s*([^;]+)/g\n\nexport function findCommaSeparatedValue(rawString: string, name: string): string | undefined {\n  COMMA_SEPARATED_KEY_VALUE.lastIndex = 0\n  while (true) {\n    const match = COMMA_SEPARATED_KEY_VALUE.exec(rawString)\n    if (match) {\n      if (match[1] === name) {\n        return match[2]\n      }\n    } else {\n      break\n    }\n  }\n}\n\nexport function findCommaSeparatedValues(rawString: string): Map<string, string> {\n  const result = new Map<string, string>()\n  COMMA_SEPARATED_KEY_VALUE.lastIndex = 0\n  while (true) {\n    const match = COMMA_SEPARATED_KEY_VALUE.exec(rawString)\n    if (match) {\n      result.set(match[1], match[2])\n    } else {\n      break\n    }\n  }\n  return result\n}\n\nexport function safeTruncate(candidate: string, length: number, suffix = '') {\n  const lastChar = candidate.charCodeAt(length - 1)\n  const isLastCharSurrogatePair = lastChar >= 0xd800 && lastChar <= 0xdbff\n  const correctedLength = isLastCharSurrogatePair ? length + 1 : length\n\n  if (candidate.length <= correctedLength) {\n    return candidate\n  }\n\n  return `${candidate.slice(0, correctedLength)}${suffix}`\n}\n", "// Exported only for tests\nexport const enum Browser {\n  CHROMIUM,\n  SAFARI,\n  OTHER,\n}\n\nexport function isChromium() {\n  return detectBrowserCached() === Browser.CHROMIUM\n}\n\nexport function isSafari() {\n  return detectBrowserCached() === Browser.SAFARI\n}\n\nlet browserCache: Browser | undefined\nfunction detectBrowserCached() {\n  return browserCache ?? (browserCache = detectBrowser())\n}\n\n// Exported only for tests\nexport function detectBrowser(browserWindow: Window = window) {\n  const userAgent = browserWindow.navigator.userAgent\n  if ((browserWindow as any).chrome || /HeadlessChrome/.test(userAgent)) {\n    return Browser.CHROMIUM\n  }\n\n  if (\n    // navigator.vendor is deprecated, but it is the most resilient way we found to detect\n    // \"Apple maintained browsers\" (AKA Safari). If one day it gets removed, we still have the\n    // useragent test as a semi-working fallback.\n    browserWindow.navigator.vendor?.indexOf('Apple') === 0 ||\n    (/safari/i.test(userAgent) && !/chrome|android/i.test(userAgent))\n  ) {\n    return Browser.SAFARI\n  }\n\n  return Browser.OTHER\n}\n", "import { display } from '../tools/display'\nimport { ONE_MINUTE, ONE_SECOND } from '../tools/utils/timeUtils'\nimport { findCommaSeparatedValue, findCommaSeparatedValues, generateUUID } from '../tools/utils/stringUtils'\n\nexport interface CookieOptions {\n  secure?: boolean\n  crossSite?: boolean\n  partitioned?: boolean\n  domain?: string\n}\n\nexport function setCookie(name: string, value: string, expireDelay: number = 0, options?: CookieOptions) {\n  const date = new Date()\n  date.setTime(date.getTime() + expireDelay)\n  const expires = `expires=${date.toUTCString()}`\n  const sameSite = options && options.crossSite ? 'none' : 'strict'\n  const domain = options && options.domain ? `;domain=${options.domain}` : ''\n  const secure = options && options.secure ? ';secure' : ''\n  const partitioned = options && options.partitioned ? ';partitioned' : ''\n  document.cookie = `${name}=${value};${expires};path=/;samesite=${sameSite}${domain}${secure}${partitioned}`\n}\n\nexport function getCookie(name: string) {\n  return findCommaSeparatedValue(document.cookie, name)\n}\n\nlet initCookieParsed: Map<string, string> | undefined\n\n/**\n * Returns a cached value of the cookie. Use this during SDK initialization (and whenever possible)\n * to avoid accessing document.cookie multiple times.\n */\nexport function getInitCookie(name: string) {\n  if (!initCookieParsed) {\n    initCookieParsed = findCommaSeparatedValues(document.cookie)\n  }\n  return initCookieParsed.get(name)\n}\n\nexport function resetInitCookies() {\n  initCookieParsed = undefined\n}\n\nexport function deleteCookie(name: string, options?: CookieOptions) {\n  setCookie(name, '', 0, options)\n}\n\nexport function areCookiesAuthorized(options: CookieOptions): boolean {\n  if (document.cookie === undefined || document.cookie === null) {\n    return false\n  }\n  try {\n    // Use a unique cookie name to avoid issues when the SDK is initialized multiple times during\n    // the test cookie lifetime\n    const testCookieName = `dd_cookie_test_${generateUUID()}`\n    const testCookieValue = 'test'\n    setCookie(testCookieName, testCookieValue, ONE_MINUTE, options)\n    const isCookieCorrectlySet = getCookie(testCookieName) === testCookieValue\n    deleteCookie(testCookieName, options)\n    return isCookieCorrectlySet\n  } catch (error) {\n    display.error(error)\n    return false\n  }\n}\n\n/**\n * No API to retrieve it, number of levels for subdomain and suffix are unknown\n * strategy: find the minimal domain on which cookies are allowed to be set\n * https://web.dev/same-site-same-origin/#site\n */\nlet getCurrentSiteCache: string | undefined\nexport function getCurrentSite() {\n  if (getCurrentSiteCache === undefined) {\n    // Use a unique cookie name to avoid issues when the SDK is initialized multiple times during\n    // the test cookie lifetime\n    const testCookieName = `dd_site_test_${generateUUID()}`\n    const testCookieValue = 'test'\n\n    const domainLevels = window.location.hostname.split('.')\n    let candidateDomain = domainLevels.pop()!\n    while (domainLevels.length && !getCookie(testCookieName)) {\n      candidateDomain = `${domainLevels.pop()!}.${candidateDomain}`\n      setCookie(testCookieName, testCookieValue, ONE_SECOND, { domain: candidateDomain })\n    }\n    deleteCookie(testCookieName, { domain: candidateDomain })\n    getCurrentSiteCache = candidateDomain\n  }\n  return getCurrentSiteCache\n}\n", "import type { CookieOptions } from '../../../browser/cookie'\nimport type { SessionPersistence } from '../sessionConstants'\nimport type { SessionState } from '../sessionState'\n\nexport const SESSION_STORE_KEY = '_dd_s'\n\nexport type SessionStoreStrategyType =\n  | { type: typeof SessionPersistence.COOKIE; cookieOptions: CookieOptions }\n  | { type: typeof SessionPersistence.LOCAL_STORAGE }\n\nexport interface SessionStoreStrategy {\n  isLockEnabled: boolean\n  persistSession: (session: SessionState) => void\n  retrieveSession: () => SessionState\n  expireSession: (previousSessionState: SessionState) => void\n}\n", "import { ONE_HOUR, ONE_MINUTE, ONE_YEAR } from '../../tools/utils/timeUtils'\n\nexport const SESSION_TIME_OUT_DELAY = 4 * ONE_HOUR\nexport const SESSION_EXPIRATION_DELAY = 15 * ONE_MINUTE\nexport const SESSION_COOKIE_EXPIRATION_DELAY = ONE_YEAR\nexport const SESSION_NOT_TRACKED = '0'\n\nexport const SessionPersistence = {\n  COOKIE: 'cookie',\n  LOCAL_STORAGE: 'local-storage',\n} as const\nexport type SessionPersistence = (typeof SessionPersistence)[keyof typeof SessionPersistence]\n", "export const SESSION_ENTRY_REGEXP = /^([a-zA-Z]+)=([a-z0-9-]+)$/\nexport const SESSION_ENTRY_SEPARATOR = '&'\n\nexport function isValidSessionString(sessionString: string | undefined | null): sessionString is string {\n  return (\n    !!sessionString &&\n    (sessionString.indexOf(SESSION_ENTRY_SEPARATOR) !== -1 || SESSION_ENTRY_REGEXP.test(sessionString))\n  )\n}\n", "import { isEmptyObject } from '../../tools/utils/objectUtils'\nimport { objectEntries } from '../../tools/utils/polyfills'\nimport { dateNow } from '../../tools/utils/timeUtils'\nimport { generateUUID } from '../../tools/utils/stringUtils'\nimport type { Configuration } from '../configuration'\nimport { SESSION_EXPIRATION_DELAY, SESSION_TIME_OUT_DELAY } from './sessionConstants'\nimport { isValidSessionString, SESSION_ENTRY_REGEXP, SESSION_ENTRY_SEPARATOR } from './sessionStateValidation'\nexport const EXPIRED = '1'\n\nexport interface SessionState {\n  id?: string\n  created?: string\n  expire?: string\n  isExpired?: typeof EXPIRED\n\n  [key: string]: string | undefined\n}\n\nexport function getExpiredSessionState(\n  previousSessionState: SessionState | undefined,\n  configuration: Configuration\n): SessionState {\n  const expiredSessionState: SessionState = {\n    isExpired: EXPIRED,\n  }\n  if (configuration.trackAnonymousUser) {\n    if (previousSessionState?.anonymousId) {\n      expiredSessionState.anonymousId = previousSessionState?.anonymousId\n    } else {\n      expiredSessionState.anonymousId = generateUUID()\n    }\n  }\n  return expiredSessionState\n}\n\nexport function isSessionInNotStartedState(session: SessionState) {\n  return isEmptyObject(session)\n}\n\nexport function isSessionStarted(session: SessionState) {\n  return !isSessionInNotStartedState(session)\n}\n\nexport function isSessionInExpiredState(session: SessionState) {\n  return session.isExpired !== undefined || !isActiveSession(session)\n}\n\n// An active session is a session in either `Tracked` or `NotTracked` state\nfunction isActiveSession(sessionState: SessionState) {\n  // created and expire can be undefined for versions which was not storing them\n  // these checks could be removed when older versions will not be available/live anymore\n  return (\n    (sessionState.created === undefined || dateNow() - Number(sessionState.created) < SESSION_TIME_OUT_DELAY) &&\n    (sessionState.expire === undefined || dateNow() < Number(sessionState.expire))\n  )\n}\n\nexport function expandSessionState(session: SessionState) {\n  session.expire = String(dateNow() + SESSION_EXPIRATION_DELAY)\n}\n\nexport function toSessionString(session: SessionState) {\n  return (\n    objectEntries(session)\n      // we use `aid` as a key for anonymousId\n      .map(([key, value]) => (key === 'anonymousId' ? `aid=${value}` : `${key}=${value}`))\n      .join(SESSION_ENTRY_SEPARATOR)\n  )\n}\n\nexport function toSessionState(sessionString: string | undefined | null) {\n  const session: SessionState = {}\n  if (isValidSessionString(sessionString)) {\n    sessionString.split(SESSION_ENTRY_SEPARATOR).forEach((entry) => {\n      const matches = SESSION_ENTRY_REGEXP.exec(entry)\n      if (matches !== null) {\n        const [, key, value] = matches\n        if (key === 'aid') {\n          // we use `aid` as a key for anonymousId\n          session.anonymousId = value\n        } else {\n          session[key] = value\n        }\n      }\n    })\n  }\n  return session\n}\n", "import { getInitCookie } from '../../browser/cookie'\nimport type { SessionStoreStrategy } from './storeStrategies/sessionStoreStrategy'\nimport { SESSION_STORE_KEY } from './storeStrategies/sessionStoreStrategy'\nimport type { SessionState } from './sessionState'\nimport { expandSessionState, isSessionStarted } from './sessionState'\n\nexport const OLD_SESSION_COOKIE_NAME = '_dd'\nexport const OLD_RUM_COOKIE_NAME = '_dd_r'\nexport const OLD_LOGS_COOKIE_NAME = '_dd_l'\n\n// duplicate values to avoid dependency issues\nexport const RUM_SESSION_KEY = 'rum'\nexport const LOGS_SESSION_KEY = 'logs'\n\n/**\n * This migration should remain in the codebase as long as older versions are available/live\n * to allow older sdk versions to be upgraded to newer versions without compatibility issues.\n */\nexport function tryOldCookiesMigration(cookieStoreStrategy: SessionStoreStrategy) {\n  const sessionString = getInitCookie(SESSION_STORE_KEY)\n  if (!sessionString) {\n    const oldSessionId = getInitCookie(OLD_SESSION_COOKIE_NAME)\n    const oldRumType = getInitCookie(OLD_RUM_COOKIE_NAME)\n    const oldLogsType = getInitCookie(OLD_LOGS_COOKIE_NAME)\n    const session: SessionState = {}\n\n    if (oldSessionId) {\n      session.id = oldSessionId\n    }\n    if (oldLogsType && /^[01]$/.test(oldLogsType)) {\n      session[LOGS_SESSION_KEY] = oldLogsType\n    }\n    if (oldRumType && /^[012]$/.test(oldRumType)) {\n      session[RUM_SESSION_KEY] = oldRumType\n    }\n\n    if (isSessionStarted(session)) {\n      expandSessionState(session)\n      cookieStoreStrategy.persistSession(session)\n    }\n  }\n}\n", "import { isChromium } from '../../../tools/utils/browserDetection'\nimport type { CookieOptions } from '../../../browser/cookie'\nimport { getCurrentSite, areCookiesAuthorized, getCookie, setCookie } from '../../../browser/cookie'\nimport type { InitConfiguration, Configuration } from '../../configuration'\nimport { tryOldCookiesMigration } from '../oldCookiesMigration'\nimport {\n  SESSION_COOKIE_EXPIRATION_DELAY,\n  SESSION_EXPIRATION_DELAY,\n  SESSION_TIME_OUT_DELAY,\n  SessionPersistence,\n} from '../sessionConstants'\nimport type { SessionState } from '../sessionState'\nimport { toSessionString, toSessionState, getExpiredSessionState } from '../sessionState'\nimport type { SessionStoreStrategy, SessionStoreStrategyType } from './sessionStoreStrategy'\nimport { SESSION_STORE_KEY } from './sessionStoreStrategy'\n\nexport function selectCookieStrategy(initConfiguration: InitConfiguration): SessionStoreStrategyType | undefined {\n  const cookieOptions = buildCookieOptions(initConfiguration)\n  return areCookiesAuthorized(cookieOptions) ? { type: SessionPersistence.COOKIE, cookieOptions } : undefined\n}\n\nexport function initCookieStrategy(configuration: Configuration, cookieOptions: CookieOptions): SessionStoreStrategy {\n  const cookieStore = {\n    /**\n     * Lock strategy allows mitigating issues due to concurrent access to cookie.\n     * This issue concerns only chromium browsers and enabling this on firefox increases cookie write failures.\n     */\n    isLockEnabled: isChromium(),\n    persistSession: (sessionState: SessionState) =>\n      storeSessionCookie(cookieOptions, configuration, sessionState, SESSION_EXPIRATION_DELAY),\n    retrieveSession: retrieveSessionCookie,\n    expireSession: (sessionState: SessionState) =>\n      storeSessionCookie(\n        cookieOptions,\n        configuration,\n        getExpiredSessionState(sessionState, configuration),\n        SESSION_TIME_OUT_DELAY\n      ),\n  }\n\n  tryOldCookiesMigration(cookieStore)\n\n  return cookieStore\n}\n\nfunction storeSessionCookie(\n  options: CookieOptions,\n  configuration: Configuration,\n  sessionState: SessionState,\n  defaultTimeout: number\n) {\n  setCookie(\n    SESSION_STORE_KEY,\n    toSessionString(sessionState),\n    configuration.trackAnonymousUser ? SESSION_COOKIE_EXPIRATION_DELAY : defaultTimeout,\n    options\n  )\n}\n\nexport function retrieveSessionCookie(): SessionState {\n  const sessionString = getCookie(SESSION_STORE_KEY)\n  const sessionState = toSessionState(sessionString)\n  return sessionState\n}\n\nexport function buildCookieOptions(initConfiguration: InitConfiguration) {\n  const cookieOptions: CookieOptions = {}\n\n  cookieOptions.secure =\n    !!initConfiguration.useSecureSessionCookie || !!initConfiguration.usePartitionedCrossSiteSessionCookie\n  cookieOptions.crossSite = !!initConfiguration.usePartitionedCrossSiteSessionCookie\n  cookieOptions.partitioned = !!initConfiguration.usePartitionedCrossSiteSessionCookie\n\n  if (initConfiguration.trackSessionAcrossSubdomains) {\n    cookieOptions.domain = getCurrentSite()\n  }\n\n  return cookieOptions\n}\n", "import { generateUUID } from '../../../tools/utils/stringUtils'\nimport type { Configuration } from '../../configuration'\nimport { SessionPersistence } from '../sessionConstants'\nimport type { SessionState } from '../sessionState'\nimport { toSessionString, toSessionState, getExpiredSessionState } from '../sessionState'\nimport type { SessionStoreStrategy, SessionStoreStrategyType } from './sessionStoreStrategy'\nimport { SESSION_STORE_KEY } from './sessionStoreStrategy'\n\nconst LOCAL_STORAGE_TEST_KEY = '_dd_test_'\n\nexport function selectLocalStorageStrategy(): SessionStoreStrategyType | undefined {\n  try {\n    const id = generateUUID()\n    const testKey = `${LOCAL_STORAGE_TEST_KEY}${id}`\n    localStorage.setItem(testKey, id)\n    const retrievedId = localStorage.getItem(testKey)\n    localStorage.removeItem(testKey)\n    return id === retrievedId ? { type: SessionPersistence.LOCAL_STORAGE } : undefined\n  } catch {\n    return undefined\n  }\n}\n\nexport function initLocalStorageStrategy(configuration: Configuration): SessionStoreStrategy {\n  return {\n    isLockEnabled: false,\n    persistSession: persistInLocalStorage,\n    retrieveSession: retrieveSessionFromLocalStorage,\n    expireSession: (sessionState: SessionState) => expireSessionFromLocalStorage(sessionState, configuration),\n  }\n}\n\nfunction persistInLocalStorage(sessionState: SessionState) {\n  localStorage.setItem(SESSION_STORE_KEY, toSessionString(sessionState))\n}\n\nfunction retrieveSessionFromLocalStorage(): SessionState {\n  const sessionString = localStorage.getItem(SESSION_STORE_KEY)\n  return toSessionState(sessionString)\n}\n\nfunction expireSessionFromLocalStorage(previousSessionState: SessionState, configuration: Configuration) {\n  persistInLocalStorage(getExpiredSessionState(previousSessionState, configuration))\n}\n", "import { setTimeout } from '../../tools/timer'\nimport { generateUUID } from '../../tools/utils/stringUtils'\nimport type { TimeStamp } from '../../tools/utils/timeUtils'\nimport { elapsed, ONE_SECOND, timeStampNow } from '../../tools/utils/timeUtils'\nimport { addTelemetryDebug } from '../telemetry'\nimport type { SessionStoreStrategy } from './storeStrategies/sessionStoreStrategy'\nimport type { SessionState } from './sessionState'\nimport { expandSessionState, isSessionInExpiredState } from './sessionState'\n\ntype Operations = {\n  process: (sessionState: SessionState) => SessionState | undefined\n  after?: (sessionState: SessionState) => void\n}\n\nexport const LOCK_RETRY_DELAY = 10\nexport const LOCK_MAX_TRIES = 100\n\n// Locks should be hold for a few milliseconds top, just the time it takes to read and write a\n// cookie. Using one second should be enough in most situations.\nexport const LOCK_EXPIRATION_DELAY = ONE_SECOND\nconst LOCK_SEPARATOR = '--'\n\nconst bufferedOperations: Operations[] = []\nlet ongoingOperations: Operations | undefined\n\nexport function processSessionStoreOperations(\n  operations: Operations,\n  sessionStoreStrategy: SessionStoreStrategy,\n  numberOfRetries = 0\n) {\n  const { isLockEnabled, persistSession, expireSession } = sessionStoreStrategy\n  const persistWithLock = (session: SessionState) => persistSession({ ...session, lock: currentLock })\n  const retrieveStore = () => {\n    const { lock, ...session } = sessionStoreStrategy.retrieveSession()\n    return {\n      session,\n      lock: lock && !isLockExpired(lock) ? lock : undefined,\n    }\n  }\n\n  if (!ongoingOperations) {\n    ongoingOperations = operations\n  }\n  if (operations !== ongoingOperations) {\n    bufferedOperations.push(operations)\n    return\n  }\n  if (isLockEnabled && numberOfRetries >= LOCK_MAX_TRIES) {\n    addTelemetryDebug('Aborted session operation after max lock retries', {\n      currentStore: retrieveStore(),\n    })\n    next(sessionStoreStrategy)\n    return\n  }\n  let currentLock: string\n  let currentStore = retrieveStore()\n  if (isLockEnabled) {\n    // if someone has lock, retry later\n    if (currentStore.lock) {\n      retryLater(operations, sessionStoreStrategy, numberOfRetries)\n      return\n    }\n    // acquire lock\n    currentLock = createLock()\n    persistWithLock(currentStore.session)\n    // if lock is not acquired, retry later\n    currentStore = retrieveStore()\n    if (currentStore.lock !== currentLock) {\n      retryLater(operations, sessionStoreStrategy, numberOfRetries)\n      return\n    }\n  }\n  let processedSession = operations.process(currentStore.session)\n  if (isLockEnabled) {\n    // if lock corrupted after process, retry later\n    currentStore = retrieveStore()\n    if (currentStore.lock !== currentLock!) {\n      retryLater(operations, sessionStoreStrategy, numberOfRetries)\n      return\n    }\n  }\n  if (processedSession) {\n    if (isSessionInExpiredState(processedSession)) {\n      expireSession(processedSession)\n    } else {\n      expandSessionState(processedSession)\n      if (isLockEnabled) {\n        persistWithLock(processedSession)\n      } else {\n        persistSession(processedSession)\n      }\n    }\n  }\n  if (isLockEnabled) {\n    // correctly handle lock around expiration would require to handle this case properly at several levels\n    // since we don't have evidence of lock issues around expiration, let's just not do the corruption check for it\n    if (!(processedSession && isSessionInExpiredState(processedSession))) {\n      // if lock corrupted after persist, retry later\n      currentStore = retrieveStore()\n      if (currentStore.lock !== currentLock!) {\n        retryLater(operations, sessionStoreStrategy, numberOfRetries)\n        return\n      }\n      persistSession(currentStore.session)\n      processedSession = currentStore.session\n    }\n  }\n  // call after even if session is not persisted in order to perform operations on\n  // up-to-date session state value => the value could have been modified by another tab\n  operations.after?.(processedSession || currentStore.session)\n  next(sessionStoreStrategy)\n}\n\nfunction retryLater(operations: Operations, sessionStore: SessionStoreStrategy, currentNumberOfRetries: number) {\n  setTimeout(() => {\n    processSessionStoreOperations(operations, sessionStore, currentNumberOfRetries + 1)\n  }, LOCK_RETRY_DELAY)\n}\n\nfunction next(sessionStore: SessionStoreStrategy) {\n  ongoingOperations = undefined\n  const nextOperations = bufferedOperations.shift()\n  if (nextOperations) {\n    processSessionStoreOperations(nextOperations, sessionStore)\n  }\n}\n\nexport function createLock(): string {\n  return generateUUID() + LOCK_SEPARATOR + timeStampNow()\n}\n\nfunction isLockExpired(lock: string) {\n  const [, timeStamp] = lock.split(LOCK_SEPARATOR)\n  return !timeStamp || elapsed(Number(timeStamp) as TimeStamp, timeStampNow()) > LOCK_EXPIRATION_DELAY\n}\n", "import { clearInterval, setInterval } from '../../tools/timer'\nimport { Observable } from '../../tools/observable'\nimport { ONE_SECOND, dateNow } from '../../tools/utils/timeUtils'\nimport { throttle } from '../../tools/utils/functionUtils'\nimport { generateUUID } from '../../tools/utils/stringUtils'\nimport type { InitConfiguration, Configuration } from '../configuration'\nimport { display } from '../../tools/display'\nimport { selectCookieStrategy, initCookieStrategy } from './storeStrategies/sessionInCookie'\nimport type { SessionStoreStrategyType } from './storeStrategies/sessionStoreStrategy'\nimport type { SessionState } from './sessionState'\nimport {\n  getExpiredSessionState,\n  isSessionInExpiredState,\n  isSessionInNotStartedState,\n  isSessionStarted,\n} from './sessionState'\nimport { initLocalStorageStrategy, selectLocalStorageStrategy } from './storeStrategies/sessionInLocalStorage'\nimport { processSessionStoreOperations } from './sessionStoreOperations'\nimport { SESSION_NOT_TRACKED, SessionPersistence } from './sessionConstants'\n\nexport interface SessionStore {\n  expandOrRenewSession: () => void\n  expandSession: () => void\n  getSession: () => SessionState\n  restartSession: () => void\n  renewObservable: Observable<void>\n  expireObservable: Observable<void>\n  sessionStateUpdateObservable: Observable<{ previousState: SessionState; newState: SessionState }>\n  expire: () => void\n  stop: () => void\n  updateSessionState: (state: Partial<SessionState>) => void\n}\n\n/**\n * Every second, the storage will be polled to check for any change that can occur\n * to the session state in another browser tab, or another window.\n * This value has been determined from our previous cookie-only implementation.\n */\nexport const STORAGE_POLL_DELAY = ONE_SECOND\n\n/**\n * Selects the correct session store strategy type based on the configuration and storage\n * availability.\n */\nexport function selectSessionStoreStrategyType(\n  initConfiguration: InitConfiguration\n): SessionStoreStrategyType | undefined {\n  switch (initConfiguration.sessionPersistence) {\n    case SessionPersistence.COOKIE:\n      return selectCookieStrategy(initConfiguration)\n\n    case SessionPersistence.LOCAL_STORAGE:\n      return selectLocalStorageStrategy()\n\n    case undefined: {\n      let sessionStoreStrategyType = selectCookieStrategy(initConfiguration)\n      if (!sessionStoreStrategyType && initConfiguration.allowFallbackToLocalStorage) {\n        sessionStoreStrategyType = selectLocalStorageStrategy()\n      }\n      return sessionStoreStrategyType\n    }\n\n    default:\n      display.error(`Invalid session persistence '${String(initConfiguration.sessionPersistence)}'`)\n  }\n}\n\n/**\n * Different session concepts:\n * - tracked, the session has an id and is updated along the user navigation\n * - not tracked, the session does not have an id but it is updated along the user navigation\n * - inactive, no session in store or session expired, waiting for a renew session\n */\nexport function startSessionStore<TrackingType extends string>(\n  sessionStoreStrategyType: SessionStoreStrategyType,\n  configuration: Configuration,\n  productKey: string,\n  computeTrackingType: (rawTrackingType?: string) => TrackingType\n): SessionStore {\n  const renewObservable = new Observable<void>()\n  const expireObservable = new Observable<void>()\n  const sessionStateUpdateObservable = new Observable<{ previousState: SessionState; newState: SessionState }>()\n\n  const sessionStoreStrategy =\n    sessionStoreStrategyType.type === SessionPersistence.COOKIE\n      ? initCookieStrategy(configuration, sessionStoreStrategyType.cookieOptions)\n      : initLocalStorageStrategy(configuration)\n  const { expireSession } = sessionStoreStrategy\n\n  const watchSessionTimeoutId = setInterval(watchSession, STORAGE_POLL_DELAY)\n  let sessionCache: SessionState\n\n  startSession()\n\n  const { throttled: throttledExpandOrRenewSession, cancel: cancelExpandOrRenewSession } = throttle(() => {\n    processSessionStoreOperations(\n      {\n        process: (sessionState) => {\n          if (isSessionInNotStartedState(sessionState)) {\n            return\n          }\n\n          const synchronizedSession = synchronizeSession(sessionState)\n          expandOrRenewSessionState(synchronizedSession)\n          return synchronizedSession\n        },\n        after: (sessionState) => {\n          if (isSessionStarted(sessionState) && !hasSessionInCache()) {\n            renewSessionInCache(sessionState)\n          }\n          sessionCache = sessionState\n        },\n      },\n      sessionStoreStrategy\n    )\n  }, STORAGE_POLL_DELAY)\n\n  function expandSession() {\n    processSessionStoreOperations(\n      {\n        process: (sessionState) => (hasSessionInCache() ? synchronizeSession(sessionState) : undefined),\n      },\n      sessionStoreStrategy\n    )\n  }\n\n  /**\n   * allows two behaviors:\n   * - if the session is active, synchronize the session cache without updating the session store\n   * - if the session is not active, clear the session store and expire the session cache\n   */\n  function watchSession() {\n    processSessionStoreOperations(\n      {\n        process: (sessionState) =>\n          isSessionInExpiredState(sessionState) ? getExpiredSessionState(sessionState, configuration) : undefined,\n        after: synchronizeSession,\n      },\n      sessionStoreStrategy\n    )\n  }\n\n  function synchronizeSession(sessionState: SessionState) {\n    if (isSessionInExpiredState(sessionState)) {\n      sessionState = getExpiredSessionState(sessionState, configuration)\n    }\n    if (hasSessionInCache()) {\n      if (isSessionInCacheOutdated(sessionState)) {\n        expireSessionInCache()\n      } else {\n        sessionStateUpdateObservable.notify({ previousState: sessionCache, newState: sessionState })\n        sessionCache = sessionState\n      }\n    }\n    return sessionState\n  }\n\n  function startSession() {\n    processSessionStoreOperations(\n      {\n        process: (sessionState) => {\n          if (isSessionInNotStartedState(sessionState)) {\n            return getExpiredSessionState(sessionState, configuration)\n          }\n        },\n        after: (sessionState) => {\n          sessionCache = sessionState\n        },\n      },\n      sessionStoreStrategy\n    )\n  }\n\n  function expandOrRenewSessionState(sessionState: SessionState) {\n    if (isSessionInNotStartedState(sessionState)) {\n      return false\n    }\n\n    const trackingType = computeTrackingType(sessionState[productKey])\n    sessionState[productKey] = trackingType\n    delete sessionState.isExpired\n    if (trackingType !== SESSION_NOT_TRACKED && !sessionState.id) {\n      sessionState.id = generateUUID()\n      sessionState.created = String(dateNow())\n    }\n  }\n\n  function hasSessionInCache() {\n    return sessionCache?.[productKey] !== undefined\n  }\n\n  function isSessionInCacheOutdated(sessionState: SessionState) {\n    return sessionCache.id !== sessionState.id || sessionCache[productKey] !== sessionState[productKey]\n  }\n\n  function expireSessionInCache() {\n    sessionCache = getExpiredSessionState(sessionCache, configuration)\n    expireObservable.notify()\n  }\n\n  function renewSessionInCache(sessionState: SessionState) {\n    sessionCache = sessionState\n    renewObservable.notify()\n  }\n\n  function updateSessionState(partialSessionState: Partial<SessionState>) {\n    processSessionStoreOperations(\n      {\n        process: (sessionState) => ({ ...sessionState, ...partialSessionState }),\n        after: synchronizeSession,\n      },\n      sessionStoreStrategy\n    )\n  }\n\n  return {\n    expandOrRenewSession: throttledExpandOrRenewSession,\n    expandSession,\n    getSession: () => sessionCache,\n    renewObservable,\n    expireObservable,\n    sessionStateUpdateObservable,\n    restartSession: startSession,\n    expire: () => {\n      cancelExpandOrRenewSession()\n      expireSession(sessionCache)\n      synchronizeSession(getExpiredSessionState(sessionCache, configuration))\n    },\n    stop: () => {\n      clearInterval(watchSessionTimeoutId)\n    },\n    updateSessionState,\n  }\n}\n", "import { Observable } from '../tools/observable'\n\nexport const TrackingConsent = {\n  GRANTED: 'granted',\n  NOT_GRANTED: 'not-granted',\n} as const\nexport type TrackingConsent = (typeof TrackingConsent)[keyof typeof TrackingConsent]\n\nexport interface TrackingConsentState {\n  tryToInit: (trackingConsent: TrackingConsent) => void\n  update: (trackingConsent: TrackingConsent) => void\n  isGranted: () => boolean\n  observable: Observable<void>\n}\n\nexport function createTrackingConsentState(currentConsent?: TrackingConsent): TrackingConsentState {\n  const observable = new Observable<void>()\n\n  return {\n    tryToInit(trackingConsent: TrackingConsent) {\n      if (!currentConsent) {\n        currentConsent = trackingConsent\n      }\n    },\n    update(trackingConsent: TrackingConsent) {\n      currentConsent = trackingConsent\n      observable.notify()\n    },\n    isGranted() {\n      return currentConsent === TrackingConsent.GRANTED\n    },\n    observable,\n  }\n}\n", "import { display } from './display'\nimport { getType } from './utils/typeUtils'\n\nexport type MatchOption = string | RegExp | ((value: string) => boolean)\n\nexport function isMatchOption(item: unknown): item is MatchOption {\n  const itemType = getType(item)\n  return itemType === 'string' || itemType === 'function' || item instanceof RegExp\n}\n\n/**\n * Returns true if value can be matched by at least one of the provided MatchOptions.\n * When comparing strings, setting useStartsWith to true will compare the value with the start of\n * the option, instead of requiring an exact match.\n */\nexport function matchList(list: MatchOption[], value: string, useStartsWith = false): boolean {\n  return list.some((item) => {\n    try {\n      if (typeof item === 'function') {\n        return item(value)\n      } else if (item instanceof RegExp) {\n        return item.test(value)\n      } else if (typeof item === 'string') {\n        return useStartsWith ? value.startsWith(item) : item === value\n      }\n    } catch (e) {\n      display.error(e)\n    }\n    return false\n  })\n}\n", "export const EXTENSION_PREFIXES = ['chrome-extension://', 'moz-extension://']\n\nexport function containsExtensionUrl(str: string): boolean {\n  return EXTENSION_PREFIXES.some((prefix) => str.includes(prefix))\n}\n\n/**\n * Utility function to detect if the SDK is being initialized in an unsupported browser extension environment.\n * @param windowLocation The current window location to check\n * @param stack The error stack to check for extension URLs\n * @returns {boolean} true if running in an unsupported browser extension environment\n */\nexport function isUnsupportedExtensionEnvironment(windowLocation: string, stack = new Error().stack) {\n  // If we're on a regular web page but the error stack shows extension URLs,\n  // then an extension is injecting RUM.\n  return !containsExtensionUrl(windowLocation) && containsExtensionUrl(stack || '')\n}\n", "import { display } from '../tools/display'\nimport { matchList } from '../tools/matchOption'\nimport type { InitConfiguration } from './configuration'\nimport { isUnsupportedExtensionEnvironment } from './extension/extensionUtils'\n\nexport const WARN_DOES_NOT_HAVE_ALLOWED_TRACKING_ORIGIN =\n  'Running the Browser SDK in a Web extension content script is discouraged and will be forbidden in a future major release unless the `allowedTrackingOrigins` option is provided.'\nexport const ERROR_NOT_ALLOWED_TRACKING_ORIGIN = 'SDK initialized on a non-allowed domain.'\n\nexport function isAllowedTrackingOrigins(\n  configuration: InitConfiguration,\n  windowOrigin = typeof location !== 'undefined' ? location.origin : '',\n  errorStack?: string\n): boolean {\n  const allowedTrackingOrigins = configuration.allowedTrackingOrigins\n  if (!allowedTrackingOrigins) {\n    if (isUnsupportedExtensionEnvironment(windowOrigin, errorStack)) {\n      display.warn(WARN_DOES_NOT_HAVE_ALLOWED_TRACKING_ORIGIN)\n      // TODO(next major): make `allowedTrackingOrigins` required in unsupported extension environments\n    }\n    return true\n  }\n\n  const isAllowed = matchList(allowedTrackingOrigins, windowOrigin)\n  if (!isAllowed) {\n    display.error(ERROR_NOT_ALLOWED_TRACKING_ORIGIN)\n  }\n  return isAllowed\n}\n", "import { jsonStringify } from '../serialisation/jsonStringify'\n\nexport function normalizeUrl(url: string) {\n  return buildUrl(url, location.href).href\n}\n\nexport function isValidUrl(url: string) {\n  try {\n    return !!buildUrl(url)\n  } catch {\n    return false\n  }\n}\n\nexport function getPathName(url: string) {\n  const pathname = buildUrl(url).pathname\n  return pathname[0] === '/' ? pathname : `/${pathname}`\n}\n\nexport function buildUrl(url: string, base?: string) {\n  const supportedURL = getSupportedUrl()\n  if (supportedURL) {\n    try {\n      return base !== undefined ? new supportedURL(url, base) : new supportedURL(url)\n    } catch (error) {\n      throw new Error(`Failed to construct URL: ${String(error)} ${jsonStringify({ url, base })!}`)\n    }\n  }\n  if (base === undefined && !/:/.test(url)) {\n    throw new Error(`Invalid URL: '${url}'`)\n  }\n  let doc = document\n  const anchorElement = doc.createElement('a')\n  if (base !== undefined) {\n    doc = document.implementation.createHTMLDocument('')\n    const baseElement = doc.createElement('base')\n    baseElement.href = base\n    doc.head.appendChild(baseElement)\n    doc.body.appendChild(anchorElement)\n  }\n  anchorElement.href = url\n  return anchorElement\n}\n\nconst originalURL = URL\nlet isURLSupported: boolean | undefined\nfunction getSupportedUrl(): typeof URL | undefined {\n  if (isURLSupported === undefined) {\n    try {\n      const url = new originalURL('http://test/path')\n      isURLSupported = url.href === 'http://test/path'\n    } catch {\n      isURLSupported = false\n    }\n  }\n  return isURLSupported ? originalURL : undefined\n}\n", "import type { Payload } from '../../transport'\nimport { timeStampNow } from '../../tools/utils/timeUtils'\nimport { normalizeUrl } from '../../tools/utils/urlPolyfill'\nimport { generateUUID } from '../../tools/utils/stringUtils'\nimport { INTAKE_SITE_FED_STAGING, INTAKE_SITE_US1, PCI_INTAKE_HOST_US1 } from '../intakeSites'\nimport type { InitConfiguration } from './configuration'\n\n// replaced at build time\ndeclare const __BUILD_ENV__SDK_VERSION__: string\n\nexport type TrackType = 'logs' | 'rum' | 'replay' | 'profile'\nexport type ApiType =\n  | 'fetch-keepalive'\n  | 'fetch'\n  | 'beacon'\n  // 'manual' reflects that the request have been sent manually, outside of the SDK (ex: via curl or\n  // a Node.js script).\n  | 'manual'\n\nexport type EndpointBuilder = ReturnType<typeof createEndpointBuilder>\n\nexport function createEndpointBuilder(\n  initConfiguration: InitConfiguration,\n  trackType: TrackType,\n  configurationTags: string[]\n) {\n  const buildUrlWithParameters = createEndpointUrlWithParametersBuilder(initConfiguration, trackType)\n\n  return {\n    build(api: ApiType, payload: Payload) {\n      const parameters = buildEndpointParameters(initConfiguration, trackType, configurationTags, api, payload)\n      return buildUrlWithParameters(parameters)\n    },\n    tags: configurationTags,\n    urlPrefix: buildUrlWithParameters(''),\n    trackType,\n  }\n}\n\n/**\n * Create a function used to build a full endpoint url from provided parameters. The goal of this\n * function is to pre-compute some parts of the URL to avoid re-computing everything on every\n * request, as only parameters are changing.\n */\nfunction createEndpointUrlWithParametersBuilder(\n  initConfiguration: InitConfiguration,\n  trackType: TrackType\n): (parameters: string) => string {\n  const path = `/api/v2/${trackType}`\n  const proxy = initConfiguration.proxy\n  if (typeof proxy === 'string') {\n    const normalizedProxyUrl = normalizeUrl(proxy)\n    return (parameters) => `${normalizedProxyUrl}?ddforward=${encodeURIComponent(`${path}?${parameters}`)}`\n  }\n  if (typeof proxy === 'function') {\n    return (parameters) => proxy({ path, parameters })\n  }\n  const host = buildEndpointHost(trackType, initConfiguration)\n  return (parameters) => `https://${host}${path}?${parameters}`\n}\n\nexport function buildEndpointHost(\n  trackType: TrackType,\n  initConfiguration: InitConfiguration & { usePciIntake?: boolean }\n) {\n  const { site = INTAKE_SITE_US1, internalAnalyticsSubdomain } = initConfiguration\n\n  if (trackType === 'logs' && initConfiguration.usePciIntake && site === INTAKE_SITE_US1) {\n    return PCI_INTAKE_HOST_US1\n  }\n\n  if (internalAnalyticsSubdomain && site === INTAKE_SITE_US1) {\n    return `${internalAnalyticsSubdomain}.${INTAKE_SITE_US1}`\n  }\n\n  if (site === INTAKE_SITE_FED_STAGING) {\n    return `http-intake.logs.${site}`\n  }\n\n  const domainParts = site.split('.')\n  const extension = domainParts.pop()\n  return `browser-intake-${domainParts.join('-')}.${extension!}`\n}\n\n/**\n * Build parameters to be used for an intake request. Parameters should be re-built for each\n * request, as they change randomly.\n */\nfunction buildEndpointParameters(\n  { clientToken, internalAnalyticsSubdomain }: InitConfiguration,\n  trackType: TrackType,\n  configurationTags: string[],\n  api: ApiType,\n  { retry, encoding }: Payload\n) {\n  const tags = [`sdk_version:${__BUILD_ENV__SDK_VERSION__}`, `api:${api}`].concat(configurationTags)\n  if (retry) {\n    tags.push(`retry_count:${retry.count}`, `retry_after:${retry.lastFailureStatus}`)\n  }\n\n  const parameters = [\n    'ddsource=browser',\n    `ddtags=${encodeURIComponent(tags.join(','))}`,\n    `dd-api-key=${clientToken}`,\n    `dd-evp-origin-version=${encodeURIComponent(__BUILD_ENV__SDK_VERSION__)}`,\n    'dd-evp-origin=browser',\n    `dd-request-id=${generateUUID()}`,\n  ]\n\n  if (encoding) {\n    parameters.push(`dd-evp-encoding=${encoding}`)\n  }\n\n  if (trackType === 'rum') {\n    parameters.push(`batch_time=${timeStampNow()}`)\n  }\n\n  if (internalAnalyticsSubdomain) {\n    parameters.reverse()\n  }\n\n  return parameters.join('&')\n}\n", "import { DOCS_ORIGIN, MORE_DETAILS, display } from '../../tools/display'\nimport type { InitConfiguration } from './configuration'\n\nexport const TAG_SIZE_LIMIT = 200\n\nexport function buildTags(configuration: InitConfiguration): string[] {\n  const { env, service, version, datacenter } = configuration\n  const tags = []\n\n  if (env) {\n    tags.push(buildTag('env', env))\n  }\n  if (service) {\n    tags.push(buildTag('service', service))\n  }\n  if (version) {\n    tags.push(buildTag('version', version))\n  }\n  if (datacenter) {\n    tags.push(buildTag('datacenter', datacenter))\n  }\n\n  return tags\n}\n\nexport function buildTag(key: string, rawValue: string) {\n  // See https://docs.datadoghq.com/getting_started/tagging/#defining-tags for tags syntax. Note\n  // that the backend may not follow the exact same rules, so we only want to display an informal\n  // warning.\n  const valueSizeLimit = TAG_SIZE_LIMIT - key.length - 1\n\n  if (rawValue.length > valueSizeLimit || hasForbiddenCharacters(rawValue)) {\n    display.warn(\n      `${key} value doesn't meet tag requirements and will be sanitized. ${MORE_DETAILS} ${DOCS_ORIGIN}/getting_started/tagging/#defining-tags`\n    )\n  }\n\n  // Let the backend do most of the sanitization, but still make sure multiple tags can't be crafted\n  // by forging a value containing commas.\n  const sanitizedValue = rawValue.replace(/,/g, '_')\n\n  return `${key}:${sanitizedValue}`\n}\n\nfunction hasForbiddenCharacters(rawValue: string) {\n  // Unicode property escapes is not supported in all browsers, so we use a try/catch.\n  // Todo: Remove the try/catch when dropping support for Chrome 63 and Firefox 67\n  // see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Unicode_character_class_escape#browser_compatibility\n  if (!supportUnicodePropertyEscapes()) {\n    return false\n  }\n\n  // We use the Unicode property escapes to match any character that is a letter including other languages like Chinese, Japanese, etc.\n  // p{Ll} matches a lowercase letter.\n  // p{Lo} matches a letter that is neither uppercase nor lowercase (ex: Japanese characters).\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Unicode_character_class_escape#unicode_property_escapes_vs._character_classes\n  return new RegExp('[^\\\\p{Ll}\\\\p{Lo}0-9_:./-]', 'u').test(rawValue)\n}\n\nexport function supportUnicodePropertyEscapes() {\n  try {\n    new RegExp('[\\\\p{Ll}]', 'u')\n    return true\n  } catch {\n    return false\n  }\n}\n", "import type { Site } from '../intakeSites'\nimport { INTAKE_SITE_US1, INTAKE_URL_PARAMETERS } from '../intakeSites'\nimport type { InitConfiguration } from './configuration'\nimport type { EndpointBuilder } from './endpointBuilder'\nimport { createEndpointBuilder } from './endpointBuilder'\nimport { buildTags } from './tags'\n\nexport interface TransportConfiguration {\n  logsEndpointBuilder: EndpointBuilder\n  rumEndpointBuilder: EndpointBuilder\n  sessionReplayEndpointBuilder: EndpointBuilder\n  profilingEndpointBuilder: EndpointBuilder\n  replica?: ReplicaConfiguration\n  site: Site\n}\n\nexport interface ReplicaConfiguration {\n  applicationId?: string\n  logsEndpointBuilder: EndpointBuilder\n  rumEndpointBuilder: EndpointBuilder\n}\n\nexport function computeTransportConfiguration(initConfiguration: InitConfiguration): TransportConfiguration {\n  const site = initConfiguration.site || INTAKE_SITE_US1\n\n  const tags = buildTags(initConfiguration)\n\n  const endpointBuilders = computeEndpointBuilders(initConfiguration, tags)\n  const replicaConfiguration = computeReplicaConfiguration(initConfiguration, tags)\n\n  return {\n    replica: replicaConfiguration,\n    site,\n    ...endpointBuilders,\n  }\n}\n\nfunction computeEndpointBuilders(initConfiguration: InitConfiguration, tags: string[]) {\n  return {\n    logsEndpointBuilder: createEndpointBuilder(initConfiguration, 'logs', tags),\n    rumEndpointBuilder: createEndpointBuilder(initConfiguration, 'rum', tags),\n    profilingEndpointBuilder: createEndpointBuilder(initConfiguration, 'profile', tags),\n    sessionReplayEndpointBuilder: createEndpointBuilder(initConfiguration, 'replay', tags),\n  }\n}\n\nfunction computeReplicaConfiguration(\n  initConfiguration: InitConfiguration,\n  tags: string[]\n): ReplicaConfiguration | undefined {\n  if (!initConfiguration.replica) {\n    return\n  }\n\n  const replicaConfiguration: InitConfiguration = {\n    ...initConfiguration,\n    site: INTAKE_SITE_US1,\n    clientToken: initConfiguration.replica.clientToken,\n  }\n\n  const replicaEndpointBuilders = {\n    logsEndpointBuilder: createEndpointBuilder(replicaConfiguration, 'logs', tags),\n    rumEndpointBuilder: createEndpointBuilder(replicaConfiguration, 'rum', tags),\n  }\n\n  return { applicationId: initConfiguration.replica.applicationId, ...replicaEndpointBuilders }\n}\n\nexport function isIntakeUrl(url: string): boolean {\n  // check if tags is present in the query string\n  return INTAKE_URL_PARAMETERS.every((param) => url.includes(param))\n}\n", "import { catchUserErrors } from '../../tools/catchUserErrors'\nimport { DOCS_ORIGIN, MORE_DETAILS, display } from '../../tools/display'\nimport type { RawTelemetryConfiguration } from '../telemetry'\nimport type { Duration } from '../../tools/utils/timeUtils'\nimport { ONE_SECOND } from '../../tools/utils/timeUtils'\nimport { isPercentage } from '../../tools/utils/numberUtils'\nimport { ONE_KIBI_BYTE } from '../../tools/utils/byteUtils'\nimport { objectHasValue } from '../../tools/utils/objectUtils'\nimport { selectSessionStoreStrategyType } from '../session/sessionStore'\nimport type { SessionStoreStrategyType } from '../session/storeStrategies/sessionStoreStrategy'\nimport { TrackingConsent } from '../trackingConsent'\nimport type { SessionPersistence } from '../session/sessionConstants'\nimport type { MatchOption } from '../../tools/matchOption'\nimport { isAllowedTrackingOrigins } from '../allowedTrackingOrigins'\nimport type { Site } from '../intakeSites'\nimport type { TransportConfiguration } from './transportConfiguration'\nimport { computeTransportConfiguration } from './transportConfiguration'\n\nexport const DefaultPrivacyLevel = {\n  ALLOW: 'allow',\n  MASK: 'mask',\n  MASK_USER_INPUT: 'mask-user-input',\n} as const\nexport type DefaultPrivacyLevel = (typeof DefaultPrivacyLevel)[keyof typeof DefaultPrivacyLevel]\n\nexport const TraceContextInjection = {\n  ALL: 'all',\n  SAMPLED: 'sampled',\n} as const\n\nexport type TraceContextInjection = (typeof TraceContextInjection)[keyof typeof TraceContextInjection]\n\nexport interface InitConfiguration {\n  /**\n   * The client token for Datadog. Required for authenticating your application with Datadog.\n   */\n  clientToken: string\n  /**\n   * A callback function that can be used to modify events before they are sent to Datadog.\n   */\n  beforeSend?: GenericBeforeSendCallback | undefined\n  /**\n   * The percentage of sessions tracked. A value between 0 and 100.\n   * @default 100\n   */\n  sessionSampleRate?: number | undefined\n  /**\n   * The percentage of telemetry events sent. A value between 0 and 100.\n   * @default 20\n   */\n  telemetrySampleRate?: number | undefined\n  /**\n   * Initialization fails silently if the RUM Browser SDK is already initialized on the page.\n   * @default false\n   */\n  silentMultipleInit?: boolean | undefined\n\n  /**\n   * Which storage strategy to use for persisting sessions. Can be either 'cookie' or 'local-storage'.\n   *\n   * Important: If you are using the RUM and Logs Browser SDKs, this option must be configured with identical values\n   * @default \"cookie\"\n   */\n  sessionPersistence?: SessionPersistence | undefined\n\n  /**\n   * Allows the use of localStorage when cookies cannot be set. This enables the RUM Browser SDK to run in environments that do not provide cookie support.\n   *\n   * Important: If you are using the RUM and Logs Browser SDKs, this option must be configured with identical values\n   * See [Monitor Electron Applications Using the Browser SDK](https://docs.datadoghq.com/real_user_monitoring/guide/monitor-electron-applications-using-browser-sdk) for further information.\n   * @deprecated use `sessionPersistence: local-storage` where you want to use localStorage instead\n   */\n  allowFallbackToLocalStorage?: boolean | undefined\n\n  /**\n   * Allow listening to DOM events dispatched programmatically ([untrusted events](https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted)). Enabling this option can be useful if you heavily rely on programmatic events, such as in an automated UI test environment.\n   * @default false\n   */\n  allowUntrustedEvents?: boolean | undefined\n  /**\n   * Store global context and user context in localStorage to preserve them along the user navigation.\n   * See [Contexts life cycle](https://docs.datadoghq.com/real_user_monitoring/browser/advanced_configuration/?tab=npm#contexts-life-cycle) for further information.\n   * @default false\n   */\n  storeContextsAcrossPages?: boolean | undefined\n  /**\n   * Set the initial user tracking consent state.\n   * See [User tracking consent](https://docs.datadoghq.com/real_user_monitoring/browser/advanced_configuration/?tab=npm#user-tracking-consent) for further information.\n   * @default granted\n   */\n  trackingConsent?: TrackingConsent | undefined\n\n  /**\n   * List of origins where the SDK is allowed to run when used in a browser extension context.\n   * Matches urls against the extensions origin.\n   * If not provided and the SDK is running in a browser extension, a warning will be displayed.\n   */\n  allowedTrackingOrigins?: MatchOption[] | undefined\n\n  // transport options\n  /**\n   * Optional proxy URL, for example: https://www.proxy.com/path.\n   * See [Proxy Your Browser RUM Data](https://docs.datadoghq.com/real_user_monitoring/guide/proxy-rum-data) for further information.\n   */\n  proxy?: string | ProxyFn | undefined\n  /**\n   * The Datadog [site](https://docs.datadoghq.com/getting_started/site) parameter of your organization.\n   * @default datadoghq.com\n   */\n  site?: Site | undefined\n\n  // tag and context options\n  /**\n   * The service name for your application. Follows the [tag syntax requirements](https://docs.datadoghq.com/getting_started/tagging/#define-tags).\n   */\n  service?: string | undefined | null\n  /**\n   * The application’s environment, for example: prod, pre-prod, and staging. Follows the [tag syntax requirements](https://docs.datadoghq.com/getting_started/tagging/#define-tags).\n   */\n  env?: string | undefined | null\n  /**\n   * The application’s version, for example: 1.2.3, 6c44da20, and 2020.02.13. Follows the [tag syntax requirements](https://docs.datadoghq.com/getting_started/tagging/#define-tags).\n   */\n  version?: string | undefined | null\n\n  // cookie options\n  /**\n   * Use a partitioned secure cross-site session cookie. This allows the RUM Browser SDK to run when the site is loaded from another one (iframe). Implies `useSecureSessionCookie`.\n   *\n   * Important: If you are using the RUM and Logs Browser SDKs, this option must be configured with identical values\n   * @default false\n   */\n  usePartitionedCrossSiteSessionCookie?: boolean | undefined\n  /**\n   * Use a secure session cookie. This disables RUM events sent on insecure (non-HTTPS) connections.\n   *\n   * Important: If you are using the RUM and Logs Browser SDKs, this option must be configured with identical values\n   * @default false\n   */\n  useSecureSessionCookie?: boolean | undefined\n  /**\n   * Preserve the session across subdomains for the same site.\n   *\n   * Important: If you are using the RUM and Logs Browser SDKs, this option must be configured with identical values\n   * @default false\n   */\n  trackSessionAcrossSubdomains?: boolean | undefined\n  /**\n   * Track anonymous user for the same site and extend cookie expiration date\n   * @default true\n   */\n  trackAnonymousUser?: boolean | undefined\n  // internal options\n  /**\n   * [Internal option] Enable experimental features\n   */\n  enableExperimentalFeatures?: string[] | undefined\n  /**\n   * [Internal option] Configure the dual chipping to another datacenter\n   */\n  replica?: ReplicaUserConfiguration | undefined\n  /**\n   * [Internal option] Set the datacenter from where the data is dual chipped\n   */\n  datacenter?: string\n  /**\n   * [Internal option] Datadog internal analytics subdomain\n   */\n  // TODO next major: remove this option and replace usages by proxyFn\n  internalAnalyticsSubdomain?: string\n  /**\n   * [Internal option] The percentage of telemetry configuration sent. A value between 0 and 100.\n   * @default 5\n   */\n  telemetryConfigurationSampleRate?: number\n  /**\n   * [Internal option] The percentage of telemetry usage sent. A value between 0 and 100.\n   * @default 5\n   */\n  telemetryUsageSampleRate?: number\n}\n\n// This type is only used to build the core configuration. Logs and RUM SDKs are using a proper type\n// for this option.\ntype GenericBeforeSendCallback = (event: any, context?: any) => unknown\n\n/**\n * path: /api/vX/product\n * parameters: xxx=yyy&zzz=aaa\n */\ntype ProxyFn = (options: { path: string; parameters: string }) => string\n\nexport interface ReplicaUserConfiguration {\n  applicationId?: string\n  clientToken: string\n}\n\nexport interface Configuration extends TransportConfiguration {\n  // Built from init configuration\n  beforeSend: GenericBeforeSendCallback | undefined\n  sessionStoreStrategyType: SessionStoreStrategyType | undefined\n  sessionSampleRate: number\n  telemetrySampleRate: number\n  telemetryConfigurationSampleRate: number\n  telemetryUsageSampleRate: number\n  service: string | undefined\n  silentMultipleInit: boolean\n  allowUntrustedEvents: boolean\n  trackingConsent: TrackingConsent\n  storeContextsAcrossPages: boolean\n  trackAnonymousUser?: boolean\n  // Event limits\n  eventRateLimiterThreshold: number // Limit the maximum number of actions, errors and logs per minutes\n  maxTelemetryEventsPerPage: number\n\n  // Batch configuration\n  batchBytesLimit: number\n  flushTimeout: Duration\n  batchMessagesLimit: number\n  messageBytesLimit: number\n}\n\nfunction isString(tag: unknown, tagName: string): tag is string | undefined | null {\n  if (tag !== undefined && tag !== null && typeof tag !== 'string') {\n    display.error(`${tagName} must be defined as a string`)\n    return false\n  }\n  return true\n}\n\nfunction isDatadogSite(site: unknown) {\n  if (site && typeof site === 'string' && !/(datadog|ddog|datad0g|dd0g)/.test(site)) {\n    display.error(`Site should be a valid Datadog site. ${MORE_DETAILS} ${DOCS_ORIGIN}/getting_started/site/.`)\n    return false\n  }\n  return true\n}\n\nexport function isSampleRate(sampleRate: unknown, name: string) {\n  if (sampleRate !== undefined && !isPercentage(sampleRate)) {\n    display.error(`${name} Sample Rate should be a number between 0 and 100`)\n    return false\n  }\n  return true\n}\n\nexport function validateAndBuildConfiguration(initConfiguration: InitConfiguration): Configuration | undefined {\n  if (!initConfiguration || !initConfiguration.clientToken) {\n    display.error('Client Token is not configured, we will not send any data.')\n    return\n  }\n\n  if (\n    initConfiguration.allowedTrackingOrigins !== undefined &&\n    !Array.isArray(initConfiguration.allowedTrackingOrigins)\n  ) {\n    display.error('Allowed Tracking Origins must be an array')\n    return\n  }\n\n  if (\n    !isDatadogSite(initConfiguration.site) ||\n    !isSampleRate(initConfiguration.sessionSampleRate, 'Session') ||\n    !isSampleRate(initConfiguration.telemetrySampleRate, 'Telemetry') ||\n    !isSampleRate(initConfiguration.telemetryConfigurationSampleRate, 'Telemetry Configuration') ||\n    !isSampleRate(initConfiguration.telemetryUsageSampleRate, 'Telemetry Usage') ||\n    !isString(initConfiguration.version, 'Version') ||\n    !isString(initConfiguration.env, 'Env') ||\n    !isString(initConfiguration.service, 'Service') ||\n    !isAllowedTrackingOrigins(initConfiguration)\n  ) {\n    return\n  }\n\n  if (\n    initConfiguration.trackingConsent !== undefined &&\n    !objectHasValue(TrackingConsent, initConfiguration.trackingConsent)\n  ) {\n    display.error('Tracking Consent should be either \"granted\" or \"not-granted\"')\n    return\n  }\n\n  return {\n    beforeSend:\n      initConfiguration.beforeSend && catchUserErrors(initConfiguration.beforeSend, 'beforeSend threw an error:'),\n    sessionStoreStrategyType: selectSessionStoreStrategyType(initConfiguration),\n    sessionSampleRate: initConfiguration.sessionSampleRate ?? 100,\n    telemetrySampleRate: initConfiguration.telemetrySampleRate ?? 20,\n    telemetryConfigurationSampleRate: initConfiguration.telemetryConfigurationSampleRate ?? 5,\n    telemetryUsageSampleRate: initConfiguration.telemetryUsageSampleRate ?? 5,\n    service: initConfiguration.service || undefined,\n    silentMultipleInit: !!initConfiguration.silentMultipleInit,\n    allowUntrustedEvents: !!initConfiguration.allowUntrustedEvents,\n    trackingConsent: initConfiguration.trackingConsent ?? TrackingConsent.GRANTED,\n    trackAnonymousUser: initConfiguration.trackAnonymousUser ?? true,\n    storeContextsAcrossPages: !!initConfiguration.storeContextsAcrossPages,\n    /**\n     * beacon payload max queue size implementation is 64kb\n     * ensure that we leave room for logs, rum and potential other users\n     */\n    batchBytesLimit: 16 * ONE_KIBI_BYTE,\n\n    eventRateLimiterThreshold: 3000,\n    maxTelemetryEventsPerPage: 15,\n\n    /**\n     * flush automatically, aim to be lower than ALB connection timeout\n     * to maximize connection reuse.\n     */\n    flushTimeout: (30 * ONE_SECOND) as Duration,\n\n    /**\n     * Logs intake limit\n     */\n    batchMessagesLimit: 50,\n    messageBytesLimit: 256 * ONE_KIBI_BYTE,\n    ...computeTransportConfiguration(initConfiguration),\n  }\n}\n\nexport function serializeConfiguration(initConfiguration: InitConfiguration) {\n  return {\n    session_sample_rate: initConfiguration.sessionSampleRate,\n    telemetry_sample_rate: initConfiguration.telemetrySampleRate,\n    telemetry_configuration_sample_rate: initConfiguration.telemetryConfigurationSampleRate,\n    telemetry_usage_sample_rate: initConfiguration.telemetryUsageSampleRate,\n    use_before_send: !!initConfiguration.beforeSend,\n    use_partitioned_cross_site_session_cookie: initConfiguration.usePartitionedCrossSiteSessionCookie,\n    use_secure_session_cookie: initConfiguration.useSecureSessionCookie,\n    use_proxy: !!initConfiguration.proxy,\n    silent_multiple_init: initConfiguration.silentMultipleInit,\n    track_session_across_subdomains: initConfiguration.trackSessionAcrossSubdomains,\n    track_anonymous_user: initConfiguration.trackAnonymousUser,\n    session_persistence: initConfiguration.sessionPersistence,\n    allow_fallback_to_local_storage: !!initConfiguration.allowFallbackToLocalStorage,\n    store_contexts_across_pages: !!initConfiguration.storeContextsAcrossPages,\n    allow_untrusted_events: !!initConfiguration.allowUntrustedEvents,\n    tracking_consent: initConfiguration.trackingConsent,\n    use_allowed_tracking_origins: Array.isArray(initConfiguration.allowedTrackingOrigins),\n  } satisfies RawTelemetryConfiguration\n}\n", "import { catchUserErrors } from '../tools/catchUserErrors'\nimport { setDebugMode } from '../tools/monitor'\nimport { display } from '../tools/display'\n\n// replaced at build time\ndeclare const __BUILD_ENV__SDK_VERSION__: string\n\nexport interface PublicApi {\n  /**\n   * Version of the Logs browser SDK\n   */\n  version: string\n\n  /**\n   * [For CDN async setup] Early RUM API calls must be wrapped in the `window.DD_RUM.onReady()` callback. This ensures the code only gets executed once the SDK is properly loaded.\n   *\n   * See [CDN async setup](https://docs.datadoghq.com/real_user_monitoring/browser/#cdn-async) for further information.\n   */\n  onReady: (callback: () => void) => void\n}\n\nexport function makePublicApi<T extends PublicApi>(stub: Omit<T, keyof PublicApi>): T {\n  const publicApi = {\n    version: __BUILD_ENV__SDK_VERSION__,\n    // This API method is intentionally not monitored, since the only thing executed is the\n    // user-provided 'callback'.  All SDK usages executed in the callback should be monitored, and\n    // we don't want to interfere with the user uncaught exceptions.\n    onReady(callback: () => void) {\n      callback()\n    },\n    ...stub,\n  }\n\n  // Add a \"hidden\" property to set debug mode. We define it that way to hide it\n  // as much as possible but of course it's not a real protection.\n  Object.defineProperty(publicApi, '_setDebug', {\n    get() {\n      return setDebugMode\n    },\n    enumerable: false,\n  })\n\n  return publicApi as T\n}\n\nexport function defineGlobal<Global, Name extends keyof Global>(global: Global, name: Name, api: Global[Name]) {\n  const existingGlobalVariable = global[name] as { q?: Array<() => void>; version?: string } | undefined\n  if (existingGlobalVariable && !existingGlobalVariable.q && existingGlobalVariable.version) {\n    display.warn('SDK is loaded more than once. This is unsupported and might have unexpected behavior.')\n  }\n  global[name] = api\n  if (existingGlobalVariable && existingGlobalVariable.q) {\n    existingGlobalVariable.q.forEach((fn) => catchUserErrors(fn, 'onReady callback threw an error:')())\n  }\n}\n", "import { setTimeout } from './timer'\nimport { callMonitored } from './monitor'\nimport { noop } from './utils/functionUtils'\nimport { createHandlingStack } from './stackTrace/handlingStack'\n\n/**\n * Object passed to the callback of an instrumented method call. See `instrumentMethod` for more\n * info.\n */\nexport type InstrumentedMethodCall<TARGET extends { [key: string]: any }, METHOD extends keyof TARGET> = {\n  /**\n   * The target object on which the method was called.\n   */\n  target: TARGET\n\n  /**\n   * The parameters with which the method was called.\n   *\n   * Note: if needed, parameters can be mutated by the instrumentation\n   */\n  parameters: Parameters<TARGET[METHOD]>\n\n  /**\n   * Registers a callback that will be called after the original method is called, with the method\n   * result passed as argument.\n   */\n  onPostCall: (callback: PostCallCallback<TARGET, METHOD>) => void\n\n  /**\n   * The stack trace of the method call.\n   */\n  handlingStack?: string\n}\n\ntype PostCallCallback<TARGET extends { [key: string]: any }, METHOD extends keyof TARGET> = (\n  result: ReturnType<TARGET[METHOD]>\n) => void\n\n/**\n * Instruments a method on a object, calling the given callback before the original method is\n * invoked. The callback receives an object with information about the method call.\n *\n * This function makes sure that we are \"good citizens\" regarding third party instrumentations: when\n * removing the instrumentation, the original method is usually restored, but if a third party\n * instrumentation was set after ours, we keep it in place and just replace our instrumentation with\n * a noop.\n *\n * Note: it is generally better to instrument methods that are \"owned\" by the object instead of ones\n * that are inherited from the prototype chain. Example:\n * * do:    `instrumentMethod(Array.prototype, 'push', ...)`\n * * don't: `instrumentMethod([], 'push', ...)`\n *\n * This method is also used to set event handler properties (ex: window.onerror = ...), as it has\n * the same requirements as instrumenting a method:\n * * if the event handler is already set by a third party, we need to call it and not just blindly\n * override it.\n * * if the event handler is set by a third party after us, we need to keep it in place when\n * removing ours.\n *\n * @example\n *\n *  instrumentMethod(window, 'fetch', ({ target, parameters, onPostCall }) => {\n *    console.log('Before calling fetch on', target, 'with parameters', parameters)\n *\n *    onPostCall((result) => {\n *      console.log('After fetch calling on', target, 'with parameters', parameters, 'and result', result)\n *    })\n *  })\n */\nexport function instrumentMethod<TARGET extends { [key: string]: any }, METHOD extends keyof TARGET & string>(\n  targetPrototype: TARGET,\n  method: METHOD,\n  onPreCall: (this: null, callInfos: InstrumentedMethodCall<TARGET, METHOD>) => void,\n  { computeHandlingStack }: { computeHandlingStack?: boolean } = {}\n) {\n  let original = targetPrototype[method]\n\n  if (typeof original !== 'function') {\n    if (method in targetPrototype && method.startsWith('on')) {\n      original = noop as TARGET[METHOD]\n    } else {\n      return { stop: noop }\n    }\n  }\n\n  let stopped = false\n\n  const instrumentation = function (this: TARGET): ReturnType<TARGET[METHOD]> | undefined {\n    if (stopped) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n      return original.apply(this, arguments as unknown as Parameters<TARGET[METHOD]>)\n    }\n\n    const parameters = Array.from(arguments) as Parameters<TARGET[METHOD]>\n\n    let postCallCallback: PostCallCallback<TARGET, METHOD> | undefined\n\n    callMonitored(onPreCall, null, [\n      {\n        target: this,\n        parameters,\n        onPostCall: (callback) => {\n          postCallCallback = callback\n        },\n        handlingStack: computeHandlingStack ? createHandlingStack('instrumented method') : undefined,\n      },\n    ])\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    const result = original.apply(this, parameters)\n\n    if (postCallCallback) {\n      callMonitored(postCallCallback, null, [result])\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return result\n  }\n\n  targetPrototype[method] = instrumentation as TARGET[METHOD]\n\n  return {\n    stop: () => {\n      stopped = true\n      // If the instrumentation has been removed by a third party, keep the last one\n      if (targetPrototype[method] === instrumentation) {\n        targetPrototype[method] = original\n      }\n    },\n  }\n}\n\nexport function instrumentSetter<TARGET extends { [key: string]: any }, PROPERTY extends keyof TARGET>(\n  targetPrototype: TARGET,\n  property: PROPERTY,\n  after: (target: TARGET, value: TARGET[PROPERTY]) => void\n) {\n  const originalDescriptor = Object.getOwnPropertyDescriptor(targetPrototype, property)\n  if (!originalDescriptor || !originalDescriptor.set || !originalDescriptor.configurable) {\n    return { stop: noop }\n  }\n\n  const stoppedInstrumentation = noop\n  let instrumentation = (target: TARGET, value: TARGET[PROPERTY]) => {\n    // put hooked setter into event loop to avoid of set latency\n    setTimeout(() => {\n      if (instrumentation !== stoppedInstrumentation) {\n        after(target, value)\n      }\n    }, 0)\n  }\n\n  const instrumentationWrapper = function (this: TARGET, value: TARGET[PROPERTY]) {\n    originalDescriptor.set!.call(this, value)\n    instrumentation(this, value)\n  }\n\n  Object.defineProperty(targetPrototype, property, {\n    set: instrumentationWrapper,\n  })\n\n  return {\n    stop: () => {\n      if (Object.getOwnPropertyDescriptor(targetPrototype, property)?.set === instrumentationWrapper) {\n        Object.defineProperty(targetPrototype, property, originalDescriptor)\n      }\n      instrumentation = stoppedInstrumentation\n    },\n  }\n}\n", "import { instrumentMethod } from '../../tools/instrumentMethod'\nimport type { Observable } from '../../tools/observable'\nimport { clocksNow } from '../../tools/utils/timeUtils'\nimport type { StackTrace } from '../../tools/stackTrace/computeStackTrace'\nimport { computeStackTraceFromOnErrorMessage } from '../../tools/stackTrace/computeStackTrace'\nimport { computeRawError, isError } from './error'\nimport type { RawError } from './error.types'\nimport { ErrorHandling, ErrorSource, NonErrorPrefix } from './error.types'\n\nexport type UnhandledErrorCallback = (originalError: unknown, stackTrace?: StackTrace) => any\n\nexport function trackRuntimeError(errorObservable: Observable<RawError>) {\n  const handleRuntimeError = (originalError: unknown, stackTrace?: StackTrace) => {\n    const rawError = computeRawError({\n      stackTrace,\n      originalError,\n      startClocks: clocksNow(),\n      nonErrorPrefix: NonErrorPrefix.UNCAUGHT,\n      source: ErrorSource.SOURCE,\n      handling: ErrorHandling.UNHANDLED,\n    })\n    errorObservable.notify(rawError)\n  }\n  const { stop: stopInstrumentingOnError } = instrumentOnError(handleRuntimeError)\n  const { stop: stopInstrumentingOnUnhandledRejection } = instrumentUnhandledRejection(handleRuntimeError)\n\n  return {\n    stop: () => {\n      stopInstrumentingOnError()\n      stopInstrumentingOnUnhandledRejection()\n    },\n  }\n}\n\nexport function instrumentOnError(callback: UnhandledErrorCallback) {\n  return instrumentMethod(window, 'onerror', ({ parameters: [messageObj, url, line, column, errorObj] }) => {\n    let stackTrace\n    if (!isError(errorObj)) {\n      stackTrace = computeStackTraceFromOnErrorMessage(messageObj, url, line, column)\n    }\n    callback(errorObj ?? messageObj, stackTrace)\n  })\n}\n\nexport function instrumentUnhandledRejection(callback: UnhandledErrorCallback) {\n  return instrumentMethod(window, 'onunhandledrejection', ({ parameters: [e] }) => {\n    callback(e.reason || 'Empty reason')\n  })\n}\n", "import type { InitConfiguration } from '../domain/configuration'\nimport { display } from '../tools/display'\n\nexport function displayAlreadyInitializedError(sdkName: 'DD_RUM' | 'DD_LOGS', initConfiguration: InitConfiguration) {\n  if (!initConfiguration.silentMultipleInit) {\n    display.error(`${sdkName} is already initialized.`)\n  }\n}\n", "import { toStackTraceString } from '../../tools/stackTrace/handlingStack'\nimport { monitor } from '../../tools/monitor'\nimport { mergeObservables, Observable } from '../../tools/observable'\nimport { addEventListener, DOM_EVENT } from '../../browser/addEventListener'\nimport { safeTruncate } from '../../tools/utils/stringUtils'\nimport type { Configuration } from '../configuration'\nimport type { RawError } from '../error/error.types'\nimport { ErrorHandling, ErrorSource } from '../error/error.types'\nimport { clocksNow } from '../../tools/utils/timeUtils'\nimport type { ReportType, InterventionReport, DeprecationReport } from './browser.types'\n\nexport const RawReportType = {\n  intervention: 'intervention',\n  deprecation: 'deprecation',\n  cspViolation: 'csp_violation',\n} as const\n\nexport type RawReportType = (typeof RawReportType)[keyof typeof RawReportType]\n\nexport type RawReportError = RawError & {\n  originalError: SecurityPolicyViolationEvent | DeprecationReport | InterventionReport\n}\n\nexport function initReportObservable(configuration: Configuration, apis: RawReportType[]) {\n  const observables: Array<Observable<RawReportError>> = []\n\n  if (apis.includes(RawReportType.cspViolation)) {\n    observables.push(createCspViolationReportObservable(configuration))\n  }\n\n  const reportTypes = apis.filter((api: RawReportType): api is ReportType => api !== RawReportType.cspViolation)\n  if (reportTypes.length) {\n    observables.push(createReportObservable(reportTypes))\n  }\n\n  return mergeObservables(...observables)\n}\n\nfunction createReportObservable(reportTypes: ReportType[]) {\n  return new Observable<RawReportError>((observable) => {\n    if (!window.ReportingObserver) {\n      return\n    }\n\n    const handleReports = monitor((reports: Array<DeprecationReport | InterventionReport>, _: ReportingObserver) =>\n      reports.forEach((report) => observable.notify(buildRawReportErrorFromReport(report)))\n    ) as ReportingObserverCallback\n\n    const observer = new window.ReportingObserver(handleReports, {\n      types: reportTypes,\n      buffered: true,\n    })\n\n    observer.observe()\n    return () => {\n      observer.disconnect()\n    }\n  })\n}\n\nfunction createCspViolationReportObservable(configuration: Configuration) {\n  return new Observable<RawReportError>((observable) => {\n    const { stop } = addEventListener(configuration, document, DOM_EVENT.SECURITY_POLICY_VIOLATION, (event) => {\n      observable.notify(buildRawReportErrorFromCspViolation(event))\n    })\n\n    return stop\n  })\n}\n\nfunction buildRawReportErrorFromReport(report: DeprecationReport | InterventionReport): RawReportError {\n  const { type, body } = report\n\n  return buildRawReportError({\n    type: body.id,\n    message: `${type}: ${body.message}`,\n    originalError: report,\n    stack: buildStack(body.id, body.message, body.sourceFile, body.lineNumber, body.columnNumber),\n  })\n}\n\nfunction buildRawReportErrorFromCspViolation(event: SecurityPolicyViolationEvent): RawReportError {\n  const message = `'${event.blockedURI}' blocked by '${event.effectiveDirective}' directive`\n  return buildRawReportError({\n    type: event.effectiveDirective,\n    message: `${RawReportType.cspViolation}: ${message}`,\n    originalError: event,\n    csp: {\n      disposition: event.disposition,\n    },\n    stack: buildStack(\n      event.effectiveDirective,\n      event.originalPolicy\n        ? `${message} of the policy \"${safeTruncate(event.originalPolicy, 100, '...')}\"`\n        : 'no policy',\n      event.sourceFile,\n      event.lineNumber,\n      event.columnNumber\n    ),\n  })\n}\n\nfunction buildRawReportError(partial: Omit<RawReportError, 'startClocks' | 'source' | 'handling'>): RawReportError {\n  return {\n    startClocks: clocksNow(),\n    source: ErrorSource.REPORT,\n    handling: ErrorHandling.UNHANDLED,\n    ...partial,\n  }\n}\n\nfunction buildStack(\n  name: string,\n  message: string,\n  sourceFile: string | null,\n  lineNumber: number | null,\n  columnNumber: number | null\n): string | undefined {\n  return sourceFile\n    ? toStackTraceString({\n        name,\n        message,\n        stack: [\n          {\n            func: '?',\n            url: sourceFile,\n            line: lineNumber ?? undefined,\n            column: columnNumber ?? undefined,\n          },\n        ],\n      })\n    : undefined\n}\n", "import { setInterval, clearInterval } from './timer'\nimport type { TimeoutId } from './timer'\nimport { removeItem } from './utils/arrayUtils'\nimport type { Duration, RelativeTime } from './utils/timeUtils'\nimport { addDuration, relativeNow, ONE_MINUTE } from './utils/timeUtils'\n\nconst END_OF_TIMES = Infinity as RelativeTime\n\nexport interface ValueHistoryEntry<T> {\n  startTime: RelativeTime\n  endTime: RelativeTime\n  value: T\n  remove(): void\n  close(endTime: RelativeTime): void\n}\n\nexport const CLEAR_OLD_VALUES_INTERVAL = ONE_MINUTE\n\n/**\n * Store and keep track of values spans. This whole cache assumes that values are added in\n * chronological order (i.e. all entries have an increasing start time).\n */\nexport interface ValueHistory<Value> {\n  add: (value: Value, startTime: RelativeTime) => ValueHistoryEntry<Value>\n  find: (startTime?: RelativeTime, options?: { returnInactive: boolean }) => Value | undefined\n\n  closeActive: (endTime: RelativeTime) => void\n  findAll: (startTime?: RelativeTime, duration?: Duration) => Value[]\n  reset: () => void\n  stop: () => void\n}\n\nlet cleanupHistoriesInterval: TimeoutId | null = null\n\nconst cleanupTasks: Set<() => void> = new Set()\n\nfunction cleanupHistories() {\n  cleanupTasks.forEach((task) => task())\n}\n\nexport function createValueHistory<Value>({\n  expireDelay,\n  maxEntries,\n}: {\n  expireDelay: number\n  maxEntries?: number\n}): ValueHistory<Value> {\n  let entries: Array<ValueHistoryEntry<Value>> = []\n\n  if (!cleanupHistoriesInterval) {\n    cleanupHistoriesInterval = setInterval(() => cleanupHistories(), CLEAR_OLD_VALUES_INTERVAL)\n  }\n\n  const clearExpiredValues = () => {\n    const oldTimeThreshold = relativeNow() - expireDelay\n    while (entries.length > 0 && entries[entries.length - 1].endTime < oldTimeThreshold) {\n      entries.pop()\n    }\n  }\n\n  cleanupTasks.add(clearExpiredValues)\n\n  /**\n   * Add a value to the history associated with a start time. Returns a reference to this newly\n   * added entry that can be removed or closed.\n   */\n  function add(value: Value, startTime: RelativeTime): ValueHistoryEntry<Value> {\n    const entry: ValueHistoryEntry<Value> = {\n      value,\n      startTime,\n      endTime: END_OF_TIMES,\n      remove: () => {\n        removeItem(entries, entry)\n      },\n      close: (endTime: RelativeTime) => {\n        entry.endTime = endTime\n      },\n    }\n\n    if (maxEntries && entries.length >= maxEntries) {\n      entries.pop()\n    }\n\n    entries.unshift(entry)\n\n    return entry\n  }\n\n  /**\n   * Return the latest value that was active during `startTime`, or the currently active value\n   * if no `startTime` is provided. This method assumes that entries are not overlapping.\n   *\n   * If `option.returnInactive` is true, returns the value at `startTime` (active or not).\n   */\n  function find(\n    startTime: RelativeTime = END_OF_TIMES,\n    options: { returnInactive: boolean } = { returnInactive: false }\n  ): Value | undefined {\n    for (const entry of entries) {\n      if (entry.startTime <= startTime) {\n        if (options.returnInactive || startTime <= entry.endTime) {\n          return entry.value\n        }\n        break\n      }\n    }\n  }\n\n  /**\n   * Helper function to close the currently active value, if any. This method assumes that entries\n   * are not overlapping.\n   */\n  function closeActive(endTime: RelativeTime) {\n    const latestEntry = entries[0]\n    if (latestEntry && latestEntry.endTime === END_OF_TIMES) {\n      latestEntry.close(endTime)\n    }\n  }\n\n  /**\n   * Return all values with an active period overlapping with the duration,\n   * or all values that were active during `startTime` if no duration is provided,\n   * or all currently active values if no `startTime` is provided.\n   */\n  function findAll(startTime: RelativeTime = END_OF_TIMES, duration = 0 as Duration): Value[] {\n    const endTime = addDuration(startTime, duration)\n    return entries\n      .filter((entry) => entry.startTime <= endTime && startTime <= entry.endTime)\n      .map((entry) => entry.value)\n  }\n\n  /**\n   * Remove all entries from this collection.\n   */\n  function reset() {\n    entries = []\n  }\n\n  /**\n   * Stop internal garbage collection of past entries.\n   */\n  function stop() {\n    cleanupTasks.delete(clearExpiredValues)\n    if (cleanupTasks.size === 0 && cleanupHistoriesInterval) {\n      clearInterval(cleanupHistoriesInterval)\n      cleanupHistoriesInterval = null\n    }\n  }\n\n  return { add, find, closeActive, findAll, reset, stop }\n}\n", "import { getInitCookie } from '../../browser/cookie'\n\nexport const SYNTHETICS_TEST_ID_COOKIE_NAME = 'datadog-synthetics-public-id'\nexport const SYNTHETICS_RESULT_ID_COOKIE_NAME = 'datadog-synthetics-result-id'\nexport const SYNTHETICS_INJECTS_RUM_COOKIE_NAME = 'datadog-synthetics-injects-rum'\n\nexport interface BrowserWindow extends Window {\n  _DATADOG_SYNTHETICS_PUBLIC_ID?: unknown\n  _DATADOG_SYNTHETICS_RESULT_ID?: unknown\n  _DATADOG_SYNTHETICS_INJECTS_RUM?: unknown\n}\n\nexport function willSyntheticsInjectRum(): boolean {\n  return Boolean(\n    (window as BrowserWindow)._DATADOG_SYNTHETICS_INJECTS_RUM || getInitCookie(SYNTHETICS_INJECTS_RUM_COOKIE_NAME)\n  )\n}\n\nexport function getSyntheticsTestId(): string | undefined {\n  const value = (window as BrowserWindow)._DATADOG_SYNTHETICS_PUBLIC_ID || getInitCookie(SYNTHETICS_TEST_ID_COOKIE_NAME)\n  return typeof value === 'string' ? value : undefined\n}\n\nexport function getSyntheticsResultId(): string | undefined {\n  const value =\n    (window as BrowserWindow)._DATADOG_SYNTHETICS_RESULT_ID || getInitCookie(SYNTHETICS_RESULT_ID_COOKIE_NAME)\n  return typeof value === 'string' ? value : undefined\n}\n\nexport function isSyntheticsTest(): boolean {\n  return Boolean(getSyntheticsTestId() && getSyntheticsResultId())\n}\n", "import { Observable } from '../../tools/observable'\nimport type { Context } from '../../tools/serialisation/context'\nimport { createValueHistory } from '../../tools/valueHistory'\nimport type { RelativeTime } from '../../tools/utils/timeUtils'\nimport { clocksOrigin, ONE_MINUTE, relativeNow } from '../../tools/utils/timeUtils'\nimport { addEventListener, addEventListeners, DOM_EVENT } from '../../browser/addEventListener'\nimport { clearInterval, setInterval } from '../../tools/timer'\nimport type { Configuration } from '../configuration'\nimport type { TrackingConsentState } from '../trackingConsent'\nimport { addTelemetryDebug } from '../telemetry'\nimport { isSyntheticsTest } from '../synthetics/syntheticsWorkerValues'\nimport { SESSION_NOT_TRACKED, SESSION_TIME_OUT_DELAY } from './sessionConstants'\nimport { startSessionStore } from './sessionStore'\nimport type { SessionState } from './sessionState'\nimport { retrieveSessionCookie } from './storeStrategies/sessionInCookie'\n\nexport interface SessionManager<TrackingType extends string> {\n  findSession: (\n    startTime?: RelativeTime,\n    options?: { returnInactive: boolean }\n  ) => SessionContext<TrackingType> | undefined\n  renewObservable: Observable<void>\n  expireObservable: Observable<void>\n  sessionStateUpdateObservable: Observable<{ previousState: SessionState; newState: SessionState }>\n  expire: () => void\n  updateSessionState: (state: Partial<SessionState>) => void\n}\n\nexport interface SessionContext<TrackingType extends string> extends Context {\n  id: string\n  trackingType: TrackingType\n  isReplayForced: boolean\n  anonymousId: string | undefined\n}\n\nexport const VISIBILITY_CHECK_DELAY = ONE_MINUTE\nconst SESSION_CONTEXT_TIMEOUT_DELAY = SESSION_TIME_OUT_DELAY\nlet stopCallbacks: Array<() => void> = []\n\nexport function startSessionManager<TrackingType extends string>(\n  configuration: Configuration,\n  productKey: string,\n  computeTrackingType: (rawTrackingType?: string) => TrackingType,\n  trackingConsentState: TrackingConsentState\n): SessionManager<TrackingType> {\n  const renewObservable = new Observable<void>()\n  const expireObservable = new Observable<void>()\n\n  // TODO - Improve configuration type and remove assertion\n  const sessionStore = startSessionStore(\n    configuration.sessionStoreStrategyType!,\n    configuration,\n    productKey,\n    computeTrackingType\n  )\n  stopCallbacks.push(() => sessionStore.stop())\n\n  const sessionContextHistory = createValueHistory<SessionContext<TrackingType>>({\n    expireDelay: SESSION_CONTEXT_TIMEOUT_DELAY,\n  })\n  stopCallbacks.push(() => sessionContextHistory.stop())\n\n  sessionStore.renewObservable.subscribe(() => {\n    sessionContextHistory.add(buildSessionContext(), relativeNow())\n    renewObservable.notify()\n  })\n  sessionStore.expireObservable.subscribe(() => {\n    expireObservable.notify()\n    sessionContextHistory.closeActive(relativeNow())\n  })\n\n  // We expand/renew session unconditionally as tracking consent is always granted when the session\n  // manager is started.\n  sessionStore.expandOrRenewSession()\n  sessionContextHistory.add(buildSessionContext(), clocksOrigin().relative)\n\n  trackingConsentState.observable.subscribe(() => {\n    if (trackingConsentState.isGranted()) {\n      sessionStore.expandOrRenewSession()\n    } else {\n      sessionStore.expire()\n    }\n  })\n\n  trackActivity(configuration, () => {\n    if (trackingConsentState.isGranted()) {\n      sessionStore.expandOrRenewSession()\n    }\n  })\n  trackVisibility(configuration, () => sessionStore.expandSession())\n  trackResume(configuration, () => sessionStore.restartSession())\n\n  function buildSessionContext() {\n    const session = sessionStore.getSession()\n\n    if (!session) {\n      const rawSession = retrieveSessionCookie()\n      const sessionCookies = document.cookie.split(/\\s*;\\s*/).filter((cookie) => cookie.startsWith('_dd_s'))\n\n      addTelemetryDebug('Unexpected session state', {\n        session: rawSession,\n        isSyntheticsTest: isSyntheticsTest(),\n        createdTimestamp: rawSession?.created,\n        expireTimestamp: rawSession?.expire,\n        cookie: {\n          count: sessionCookies.length,\n          ...sessionCookies,\n        },\n      })\n\n      return {\n        id: 'invalid',\n        trackingType: SESSION_NOT_TRACKED as TrackingType,\n        isReplayForced: false,\n        anonymousId: undefined,\n      }\n    }\n\n    return {\n      id: session.id!,\n      trackingType: session[productKey] as TrackingType,\n      isReplayForced: !!session.forcedReplay,\n      anonymousId: session.anonymousId,\n    }\n  }\n\n  return {\n    findSession: (startTime, options) => sessionContextHistory.find(startTime, options),\n    renewObservable,\n    expireObservable,\n    sessionStateUpdateObservable: sessionStore.sessionStateUpdateObservable,\n    expire: sessionStore.expire,\n    updateSessionState: sessionStore.updateSessionState,\n  }\n}\n\nexport function stopSessionManager() {\n  stopCallbacks.forEach((e) => e())\n  stopCallbacks = []\n}\n\nfunction trackActivity(configuration: Configuration, expandOrRenewSession: () => void) {\n  const { stop } = addEventListeners(\n    configuration,\n    window,\n    [DOM_EVENT.CLICK, DOM_EVENT.TOUCH_START, DOM_EVENT.KEY_DOWN, DOM_EVENT.SCROLL],\n    expandOrRenewSession,\n    { capture: true, passive: true }\n  )\n  stopCallbacks.push(stop)\n}\n\nfunction trackVisibility(configuration: Configuration, expandSession: () => void) {\n  const expandSessionWhenVisible = () => {\n    if (document.visibilityState === 'visible') {\n      expandSession()\n    }\n  }\n\n  const { stop } = addEventListener(configuration, document, DOM_EVENT.VISIBILITY_CHANGE, expandSessionWhenVisible)\n  stopCallbacks.push(stop)\n\n  const visibilityCheckInterval = setInterval(expandSessionWhenVisible, VISIBILITY_CHECK_DELAY)\n  stopCallbacks.push(() => {\n    clearInterval(visibilityCheckInterval)\n  })\n}\n\nfunction trackResume(configuration: Configuration, cb: () => void) {\n  const { stop } = addEventListener(configuration, window, DOM_EVENT.RESUME, cb, { capture: true })\n  stopCallbacks.push(stop)\n}\n", "import { computeBytesCount } from './utils/byteUtils'\n\nexport interface Encoder<Output extends string | Uint8Array = string | Uint8Array> {\n  /**\n   * Whether this encoder might call the provided callbacks asynchronously\n   */\n  isAsync: boolean\n\n  /**\n   * Whether some data has been written since the last finish() or finishSync() call\n   */\n  isEmpty: boolean\n\n  /**\n   * Write a string to be encoded.\n   *\n   * This operation can be synchronous or asynchronous depending on the encoder implementation.\n   *\n   * If specified, the callback will be invoked when the operation finishes, unless the operation is\n   * asynchronous and finish() or finishSync() is called in the meantime.\n   */\n  write(data: string, callback?: (additionalEncodedBytesCount: number) => void): void\n\n  /**\n   * Waits for pending data to be encoded and resets the encoder state.\n   *\n   * This operation can be synchronous or asynchronous depending on the encoder implementation.\n   *\n   * The callback will be invoked when the operation finishes, unless the operation is asynchronous\n   * and another call to finish() or finishSync() occurs in the meantime.\n   */\n  finish(callback: (result: EncoderResult<Output>) => void): void\n\n  /**\n   * Resets the encoder state then returns the encoded data and any potential pending data directly,\n   * discarding all pending write operations and finish() callbacks.\n   */\n  finishSync(): EncoderResult<Output> & { pendingData: string }\n\n  /**\n   * Returns a rough estimation of the bytes count if the data was encoded.\n   */\n  estimateEncodedBytesCount(data: string): number\n}\n\nexport interface EncoderResult<Output extends string | Uint8Array = string | Uint8Array> {\n  output: Output\n  outputBytesCount: number\n\n  /**\n   * An encoding type supported by HTTP Content-Encoding, if applicable.\n   * See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding#directives\n   */\n  encoding?: 'deflate'\n\n  /**\n   * Total bytes count of the input strings encoded to UTF-8.\n   */\n  rawBytesCount: number\n}\n\nexport function createIdentityEncoder(): Encoder<string> {\n  let output = ''\n  let outputBytesCount = 0\n\n  return {\n    isAsync: false,\n\n    get isEmpty() {\n      return !output\n    },\n\n    write(data, callback) {\n      const additionalEncodedBytesCount = computeBytesCount(data)\n      outputBytesCount += additionalEncodedBytesCount\n      output += data\n      if (callback) {\n        callback(additionalEncodedBytesCount)\n      }\n    },\n\n    finish(callback) {\n      callback(this.finishSync())\n    },\n\n    finishSync() {\n      const result = {\n        output,\n        outputBytesCount,\n        rawBytesCount: outputBytesCount,\n        pendingData: '',\n      }\n      output = ''\n      outputBytesCount = 0\n      return result\n    },\n\n    estimateEncodedBytesCount(data) {\n      return data.length\n    },\n  }\n}\n", "import type { Subscription } from './observable'\n\n/**\n * Type helper to extract event types that have \"void\" data. This allows to call `notify` without a\n * second argument. Ex:\n *\n * ```\n * interface EventMap {\n *   foo: void\n * }\n * const LifeCycle = AbstractLifeCycle<EventMap>\n * new LifeCycle().notify('foo')\n * ```\n */\ntype EventTypesWithoutData<EventMap> = {\n  [K in keyof EventMap]: EventMap[K] extends void ? K : never\n}[keyof EventMap]\n\n// eslint-disable-next-line no-restricted-syntax\nexport class AbstractLifeCycle<EventMap> {\n  private callbacks: { [key in keyof EventMap]?: Array<(data: any) => void> } = {}\n\n  notify<EventType extends EventTypesWithoutData<EventMap>>(eventType: EventType): void\n  notify<EventType extends keyof EventMap>(eventType: EventType, data: EventMap[EventType]): void\n  notify(eventType: keyof EventMap, data?: unknown) {\n    const eventCallbacks = this.callbacks[eventType]\n    if (eventCallbacks) {\n      eventCallbacks.forEach((callback) => callback(data))\n    }\n  }\n\n  subscribe<EventType extends keyof EventMap>(\n    eventType: EventType,\n    callback: (data: EventMap[EventType]) => void\n  ): Subscription {\n    if (!this.callbacks[eventType]) {\n      this.callbacks[eventType] = []\n    }\n    this.callbacks[eventType]!.push(callback)\n    return {\n      unsubscribe: () => {\n        this.callbacks[eventType] = this.callbacks[eventType]!.filter((other) => callback !== other)\n      },\n    }\n  }\n}\n", "import { setTimeout } from '../../tools/timer'\nimport { clocksNow, ONE_MINUTE } from '../../tools/utils/timeUtils'\nimport type { RawError } from '../error/error.types'\nimport { ErrorSource } from '../error/error.types'\n\nexport type EventRateLimiter = ReturnType<typeof createEventRateLimiter>\n\nexport function createEventRateLimiter(\n  eventType: string,\n  limit: number,\n  onLimitReached: (limitError: RawError) => void\n) {\n  let eventCount = 0\n  let allowNextEvent = false\n\n  return {\n    isLimitReached() {\n      if (eventCount === 0) {\n        setTimeout(() => {\n          eventCount = 0\n        }, ONE_MINUTE)\n      }\n\n      eventCount += 1\n      if (eventCount <= limit || allowNextEvent) {\n        allowNextEvent = false\n        return false\n      }\n\n      if (eventCount === limit + 1) {\n        allowNextEvent = true\n        try {\n          onLimitReached({\n            message: `Reached max number of ${eventType}s by minute: ${limit}`,\n            source: ErrorSource.AGENT,\n            startClocks: clocksNow(),\n          })\n        } finally {\n          allowNextEvent = false\n        }\n      }\n\n      return true\n    },\n  }\n}\n", "import type { Configuration } from '../domain/configuration'\nimport { noop } from '../tools/utils/functionUtils'\nimport { DOM_EVENT, addEventListener } from './addEventListener'\n\nexport function runOnReadyState(\n  configuration: Configuration,\n  expectedReadyState: 'complete' | 'interactive',\n  callback: () => void\n): { stop: () => void } {\n  if (document.readyState === expectedReadyState || document.readyState === 'complete') {\n    callback()\n    return { stop: noop }\n  }\n  const eventName = expectedReadyState === 'complete' ? DOM_EVENT.LOAD : DOM_EVENT.DOM_CONTENT_LOADED\n  return addEventListener(configuration, window, eventName, callback, { once: true })\n}\n\nexport function asyncRunOnReadyState(\n  configuration: Configuration,\n  expectedReadyState: 'complete' | 'interactive'\n): Promise<void> {\n  return new Promise((resolve) => {\n    runOnReadyState(configuration, expectedReadyState, resolve)\n  })\n}\n", "import type { InstrumentedMethodCall } from '../tools/instrumentMethod'\nimport { instrumentMethod } from '../tools/instrumentMethod'\nimport { Observable } from '../tools/observable'\nimport type { Duration, ClocksState } from '../tools/utils/timeUtils'\nimport { elapsed, clocksNow, timeStampNow } from '../tools/utils/timeUtils'\nimport { normalizeUrl } from '../tools/utils/urlPolyfill'\nimport { shallowClone } from '../tools/utils/objectUtils'\nimport type { Configuration } from '../domain/configuration'\nimport { addEventListener } from './addEventListener'\n\nexport interface XhrOpenContext {\n  state: 'open'\n  method: string\n  url: string\n}\n\nexport interface XhrStartContext extends Omit<XhrOpenContext, 'state'> {\n  state: 'start'\n  startClocks: ClocksState\n  isAborted: boolean\n  xhr: XMLHttpRequest\n  handlingStack?: string\n}\n\nexport interface XhrCompleteContext extends Omit<XhrStartContext, 'state'> {\n  state: 'complete'\n  duration: Duration\n  status: number\n}\n\nexport type XhrContext = XhrOpenContext | XhrStartContext | XhrCompleteContext\n\nlet xhrObservable: Observable<XhrContext> | undefined\nconst xhrContexts = new WeakMap<XMLHttpRequest, XhrContext>()\n\nexport function initXhrObservable(configuration: Configuration) {\n  if (!xhrObservable) {\n    xhrObservable = createXhrObservable(configuration)\n  }\n  return xhrObservable\n}\n\nfunction createXhrObservable(configuration: Configuration) {\n  return new Observable<XhrContext>((observable) => {\n    const { stop: stopInstrumentingStart } = instrumentMethod(XMLHttpRequest.prototype, 'open', openXhr)\n\n    const { stop: stopInstrumentingSend } = instrumentMethod(\n      XMLHttpRequest.prototype,\n      'send',\n      (call) => {\n        sendXhr(call, configuration, observable)\n      },\n      { computeHandlingStack: true }\n    )\n\n    const { stop: stopInstrumentingAbort } = instrumentMethod(XMLHttpRequest.prototype, 'abort', abortXhr)\n\n    return () => {\n      stopInstrumentingStart()\n      stopInstrumentingSend()\n      stopInstrumentingAbort()\n    }\n  })\n}\n\nfunction openXhr({ target: xhr, parameters: [method, url] }: InstrumentedMethodCall<XMLHttpRequest, 'open'>) {\n  xhrContexts.set(xhr, {\n    state: 'open',\n    method: String(method).toUpperCase(),\n    url: normalizeUrl(String(url)),\n  })\n}\n\nfunction sendXhr(\n  { target: xhr, handlingStack }: InstrumentedMethodCall<XMLHttpRequest, 'send'>,\n  configuration: Configuration,\n  observable: Observable<XhrContext>\n) {\n  const context = xhrContexts.get(xhr)\n  if (!context) {\n    return\n  }\n\n  const startContext = context as XhrStartContext\n  startContext.state = 'start'\n  startContext.startClocks = clocksNow()\n  startContext.isAborted = false\n  startContext.xhr = xhr\n  startContext.handlingStack = handlingStack\n\n  let hasBeenReported = false\n\n  const { stop: stopInstrumentingOnReadyStateChange } = instrumentMethod(xhr, 'onreadystatechange', () => {\n    if (xhr.readyState === XMLHttpRequest.DONE) {\n      // Try to report the XHR as soon as possible, because the XHR may be mutated by the\n      // application during a future event. For example, Angular is calling .abort() on\n      // completed requests during an onreadystatechange event, so the status becomes '0'\n      // before the request is collected.\n      onEnd()\n    }\n  })\n\n  const onEnd = () => {\n    unsubscribeLoadEndListener()\n    stopInstrumentingOnReadyStateChange()\n    if (hasBeenReported) {\n      return\n    }\n    hasBeenReported = true\n\n    const completeContext = context as XhrCompleteContext\n    completeContext.state = 'complete'\n    completeContext.duration = elapsed(startContext.startClocks.timeStamp, timeStampNow())\n    completeContext.status = xhr.status\n    observable.notify(shallowClone(completeContext))\n  }\n\n  const { stop: unsubscribeLoadEndListener } = addEventListener(configuration, xhr, 'loadend', onEnd)\n\n  observable.notify(startContext)\n}\n\nfunction abortXhr({ target: xhr }: InstrumentedMethodCall<XMLHttpRequest, 'abort'>) {\n  const context = xhrContexts.get(xhr) as XhrStartContext | undefined\n  if (context) {\n    context.isAborted = true\n  }\n}\n", "import type { InstrumentedMethodCall } from '../tools/instrumentMethod'\nimport { instrumentMethod } from '../tools/instrumentMethod'\nimport { monitor } from '../tools/monitor'\nimport { Observable } from '../tools/observable'\nimport type { ClocksState } from '../tools/utils/timeUtils'\nimport { clocksNow } from '../tools/utils/timeUtils'\nimport { normalizeUrl } from '../tools/utils/urlPolyfill'\n\ninterface FetchContextBase {\n  method: string\n  startClocks: ClocksState\n  input: unknown\n  init?: RequestInit\n  url: string\n  handlingStack?: string\n}\n\nexport interface FetchStartContext extends FetchContextBase {\n  state: 'start'\n}\n\nexport interface FetchResolveContext extends FetchContextBase {\n  state: 'resolve'\n  status: number\n  response?: Response\n  responseType?: string\n  isAborted: boolean\n  error?: Error\n}\n\nexport type FetchContext = FetchStartContext | FetchResolveContext\n\nlet fetchObservable: Observable<FetchContext> | undefined\n\nexport function initFetchObservable() {\n  if (!fetchObservable) {\n    fetchObservable = createFetchObservable()\n  }\n  return fetchObservable\n}\n\nexport function resetFetchObservable() {\n  fetchObservable = undefined\n}\n\nfunction createFetchObservable() {\n  return new Observable<FetchContext>((observable) => {\n    if (!window.fetch) {\n      return\n    }\n\n    const { stop } = instrumentMethod(window, 'fetch', (call) => beforeSend(call, observable), {\n      computeHandlingStack: true,\n    })\n\n    return stop\n  })\n}\n\nfunction beforeSend(\n  { parameters, onPostCall, handlingStack }: InstrumentedMethodCall<Window, 'fetch'>,\n  observable: Observable<FetchContext>\n) {\n  const [input, init] = parameters\n  let methodFromParams = init && init.method\n\n  if (methodFromParams === undefined && input instanceof Request) {\n    methodFromParams = input.method\n  }\n\n  const method = methodFromParams !== undefined ? String(methodFromParams).toUpperCase() : 'GET'\n  const url = input instanceof Request ? input.url : normalizeUrl(String(input))\n  const startClocks = clocksNow()\n\n  const context: FetchStartContext = {\n    state: 'start',\n    init,\n    input,\n    method,\n    startClocks,\n    url,\n    handlingStack,\n  }\n\n  observable.notify(context)\n\n  // Those properties can be changed by observable subscribers\n  parameters[0] = context.input as RequestInfo | URL\n  parameters[1] = context.init\n\n  onPostCall((responsePromise) => afterSend(observable, responsePromise, context))\n}\n\nfunction afterSend(\n  observable: Observable<FetchContext>,\n  responsePromise: Promise<Response>,\n  startContext: FetchStartContext\n) {\n  const context = startContext as unknown as FetchResolveContext\n\n  function reportFetch(partialContext: Partial<FetchResolveContext>) {\n    context.state = 'resolve'\n    Object.assign(context, partialContext)\n    observable.notify(context)\n  }\n\n  responsePromise.then(\n    monitor((response) => {\n      reportFetch({\n        response,\n        responseType: response.type,\n        status: response.status,\n        isAborted: false,\n      })\n    }),\n    monitor((error: Error) => {\n      reportFetch({\n        status: 0,\n        isAborted:\n          context.init?.signal?.aborted || (error instanceof DOMException && error.code === DOMException.ABORT_ERR),\n        error,\n      })\n    })\n  )\n}\n", "import { setTimeout, clearTimeout } from './timer'\nimport { monitor } from './monitor'\nimport { dateNow } from './utils/timeUtils'\n\n// This type is not yet supported in TS 3.8. Imported from the TS source until we upgrade the\n// minimum supported TS version.\n// https://github.com/microsoft/TypeScript/blob/13c374a868c926f6a907666a5599992c1351b773/src/lib/dom.generated.d.ts#L9513-L9516\nexport interface IdleDeadline {\n  readonly didTimeout: boolean\n  timeRemaining(): DOMHighResTimeStamp\n}\n\n/**\n * 'requestIdleCallback' with a shim.\n */\nexport function requestIdleCallback(callback: (deadline: IdleDeadline) => void, opts?: { timeout?: number }) {\n  // Note: check both 'requestIdleCallback' and 'cancelIdleCallback' existence because some polyfills only implement 'requestIdleCallback'.\n  if (window.requestIdleCallback && window.cancelIdleCallback) {\n    const id = window.requestIdleCallback(monitor(callback), opts)\n    return () => window.cancelIdleCallback(id)\n  }\n  return requestIdleCallbackShim(callback)\n}\n\nexport const MAX_TASK_TIME = 50\n\n/*\n * Shim from https://developer.chrome.com/blog/using-requestidlecallback#checking_for_requestidlecallback\n * Note: there is no simple way to support the \"timeout\" option, so we ignore it.\n */\nexport function requestIdleCallbackShim(callback: (deadline: IdleDeadline) => void) {\n  const start = dateNow()\n  const timeoutId = setTimeout(() => {\n    callback({\n      didTimeout: false,\n      timeRemaining: () => Math.max(0, MAX_TASK_TIME - (dateNow() - start)),\n    })\n  }, 0)\n  return () => clearTimeout(timeoutId)\n}\n", "import { ONE_SECOND } from './utils/timeUtils'\nimport { requestIdleCallback } from './requestIdleCallback'\n\n/**\n * Maximum delay before starting to execute tasks in the queue. We don't want to wait too long\n * before running tasks, as it might hurt reliability (ex: if the user navigates away, we might lose\n * the opportunity to send some data). We also don't want to run tasks too often, as it might hurt\n * performance.\n */\nconst IDLE_CALLBACK_TIMEOUT = ONE_SECOND\n\n/**\n * Maximum amount of time allocated to running tasks when a timeout (`IDLE_CALLBACK_TIMEOUT`) is\n * reached. We should not run tasks for too long as it will hurt performance, but we should still\n * run some tasks to avoid postponing them forever.\n *\n * Rational: Running tasks for 30ms every second (IDLE_CALLBACK_TIMEOUT) should be acceptable.\n */\nexport const MAX_EXECUTION_TIME_ON_TIMEOUT = 30\n\nexport interface TaskQueue {\n  push(task: Task): void\n}\n\ntype Task = () => void\n\nexport function createTaskQueue(): TaskQueue {\n  const pendingTasks: Task[] = []\n\n  function run(deadline: IdleDeadline) {\n    let executionTimeRemaining: () => number\n    if (deadline.didTimeout) {\n      const start = performance.now()\n      executionTimeRemaining = () => MAX_EXECUTION_TIME_ON_TIMEOUT - (performance.now() - start)\n    } else {\n      executionTimeRemaining = deadline.timeRemaining.bind(deadline)\n    }\n\n    while (executionTimeRemaining() > 0 && pendingTasks.length) {\n      pendingTasks.shift()!()\n    }\n\n    if (pendingTasks.length) {\n      scheduleNextRun()\n    }\n  }\n\n  function scheduleNextRun() {\n    requestIdleCallback(run, { timeout: IDLE_CALLBACK_TIMEOUT })\n  }\n\n  return {\n    push(task) {\n      if (pendingTasks.push(task) === 1) {\n        scheduleNextRun()\n      }\n    },\n  }\n}\n", "import { isError, computeRawError } from '../error/error'\nimport { mergeObservables, Observable } from '../../tools/observable'\nimport { ConsoleApiName, globalConsole } from '../../tools/display'\nimport { callMonitored } from '../../tools/monitor'\nimport { sanitize } from '../../tools/serialisation/sanitize'\nimport { jsonStringify } from '../../tools/serialisation/jsonStringify'\nimport type { RawError } from '../error/error.types'\nimport { ErrorHandling, ErrorSource, NonErrorPrefix } from '../error/error.types'\nimport { computeStackTrace } from '../../tools/stackTrace/computeStackTrace'\nimport { createHandlingStack, formatErrorMessage } from '../../tools/stackTrace/handlingStack'\nimport { clocksNow } from '../../tools/utils/timeUtils'\n\nexport type ConsoleLog = NonErrorConsoleLog | ErrorConsoleLog\n\ninterface NonErrorConsoleLog extends ConsoleLogBase {\n  api: Exclude<ConsoleApiName, typeof ConsoleApiName.error>\n  error: undefined\n}\n\nexport interface ErrorConsoleLog extends ConsoleLogBase {\n  api: typeof ConsoleApiName.error\n  error: RawError\n}\n\ninterface ConsoleLogBase {\n  message: string\n  api: ConsoleApiName\n  handlingStack: string\n}\n\ntype ConsoleLogForApi<T extends ConsoleApiName> = T extends typeof ConsoleApiName.error\n  ? ErrorConsoleLog\n  : NonErrorConsoleLog\n\nlet consoleObservablesByApi: { [K in ConsoleApiName]?: Observable<ConsoleLogForApi<K>> } = {}\n\nexport function initConsoleObservable<T extends ConsoleApiName[]>(apis: T): Observable<ConsoleLogForApi<T[number]>> {\n  const consoleObservables = apis.map((api) => {\n    if (!consoleObservablesByApi[api]) {\n      consoleObservablesByApi[api] = createConsoleObservable(api) as any // we are sure that the observable created for this api will yield the expected ConsoleLog type\n    }\n    return consoleObservablesByApi[api] as unknown as Observable<ConsoleLogForApi<T[number]>>\n  })\n\n  return mergeObservables(...consoleObservables)\n}\n\nexport function resetConsoleObservable() {\n  consoleObservablesByApi = {}\n}\n\nfunction createConsoleObservable(api: ConsoleApiName) {\n  return new Observable<ConsoleLog>((observable) => {\n    const originalConsoleApi = globalConsole[api]\n\n    globalConsole[api] = (...params: unknown[]) => {\n      originalConsoleApi.apply(console, params)\n      const handlingStack = createHandlingStack('console error')\n\n      callMonitored(() => {\n        observable.notify(buildConsoleLog(params, api, handlingStack))\n      })\n    }\n\n    return () => {\n      globalConsole[api] = originalConsoleApi\n    }\n  })\n}\n\nfunction buildConsoleLog(params: unknown[], api: ConsoleApiName, handlingStack: string): ConsoleLog {\n  const message = params.map((param) => formatConsoleParameters(param)).join(' ')\n\n  if (api === ConsoleApiName.error) {\n    const firstErrorParam = params.find(isError)\n\n    const rawError = computeRawError({\n      originalError: firstErrorParam,\n      handlingStack,\n      startClocks: clocksNow(),\n      source: ErrorSource.CONSOLE,\n      handling: ErrorHandling.HANDLED,\n      nonErrorPrefix: NonErrorPrefix.PROVIDED,\n\n      // if no good stack is computed from the error, let's not use the fallback stack message\n      // advising the user to use an instance of Error, as console.error is commonly used without an\n      // Error instance.\n      useFallbackStack: false,\n    })\n\n    // Use the full log message as the error message instead of just the error instance message.\n    rawError.message = message\n\n    return {\n      api,\n      message,\n      handlingStack,\n      error: rawError,\n    }\n  }\n\n  return {\n    api,\n    message,\n    error: undefined,\n    handlingStack,\n  }\n}\n\nfunction formatConsoleParameters(param: unknown) {\n  if (typeof param === 'string') {\n    return sanitize(param)\n  }\n  if (isError(param)) {\n    return formatErrorMessage(computeStackTrace(param))\n  }\n  return jsonStringify(sanitize(param), undefined, 2)\n}\n", "import type { Context } from '../../tools/serialisation/context'\nimport { display } from '../../tools/display'\nimport { getType } from '../../tools/utils/typeUtils'\n\n/**\n * Simple check to ensure an object is a valid context\n */\nexport function checkContext(maybeContext: unknown): maybeContext is Context {\n  const isValid = getType(maybeContext) === 'object'\n  if (!isValid) {\n    display.error('Unsupported context:', maybeContext)\n  }\n  return isValid\n}\n", "import { deepClone } from '../../tools/mergeInto'\nimport { sanitize } from '../../tools/serialisation/sanitize'\nimport type { Context } from '../../tools/serialisation/context'\nimport { Observable } from '../../tools/observable'\nimport { display } from '../../tools/display'\nimport { checkContext } from './contextUtils'\n\nexport type ContextManager = ReturnType<typeof createContextManager>\n\nexport type PropertiesConfig = {\n  [key: string]: {\n    required?: boolean\n    type?: 'string'\n  }\n}\n\nfunction ensureProperties(context: Context, propertiesConfig: PropertiesConfig, name: string) {\n  const newContext = { ...context }\n\n  for (const [key, { required, type }] of Object.entries(propertiesConfig)) {\n    /**\n     * Ensure specified properties are strings as defined here:\n     * https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#user-related-attributes\n     */\n\n    if (type === 'string' && !isDefined(newContext[key])) {\n      /* eslint-disable @typescript-eslint/no-base-to-string */\n      newContext[key] = String(newContext[key])\n    }\n\n    if (required && isDefined(newContext[key])) {\n      display.warn(`The property ${key} of ${name} is required; context will not be sent to the intake.`)\n    }\n  }\n\n  return newContext\n}\n\nfunction isDefined(value: unknown) {\n  return value === undefined || value === null || value === ''\n}\n\nexport function createContextManager(\n  name: string = '',\n  {\n    propertiesConfig = {},\n  }: {\n    propertiesConfig?: PropertiesConfig\n  } = {}\n) {\n  let context: Context = {}\n  const changeObservable = new Observable<void>()\n\n  const contextManager = {\n    getContext: () => deepClone(context),\n\n    setContext: (newContext: unknown) => {\n      if (checkContext(newContext)) {\n        context = sanitize(ensureProperties(newContext, propertiesConfig, name))\n      } else {\n        contextManager.clearContext()\n      }\n      changeObservable.notify()\n    },\n\n    setContextProperty: (key: string, property: any) => {\n      context = sanitize(ensureProperties({ ...context, [key]: property }, propertiesConfig, name))\n      changeObservable.notify()\n    },\n\n    removeContextProperty: (key: string) => {\n      delete context[key]\n      ensureProperties(context, propertiesConfig, name)\n      changeObservable.notify()\n    },\n\n    clearContext: () => {\n      context = {}\n      changeObservable.notify()\n    },\n\n    changeObservable,\n  }\n  return contextManager\n}\n", "import type { RawTelemetryUsage, RawTelemetryUsageFeature } from '../telemetry'\nimport { addTelemetryUsage } from '../telemetry'\nimport { monitor } from '../../tools/monitor'\nimport type { BoundedBuffer } from '../../tools/boundedBuffer'\nimport type { ContextManager } from './contextManager'\nimport type { ContextManagerMethod, CustomerContextKey } from './contextConstants'\n\nexport function defineContextMethod<MethodName extends ContextManagerMethod, Key extends CustomerContextKey>(\n  getStrategy: () => Record<Key, ContextManager>,\n  contextName: Key,\n  methodName: MethodName,\n  usage?: RawTelemetryUsageFeature\n): ContextManager[MethodName] {\n  return monitor((...args: any[]) => {\n    if (usage) {\n      addTelemetryUsage({ feature: usage } as RawTelemetryUsage)\n    }\n    return (getStrategy()[contextName][methodName] as (...args: unknown[]) => unknown)(...args)\n  }) as ContextManager[MethodName]\n}\n\nexport function bufferContextCalls<Key extends string, StartResult extends Record<Key, ContextManager>>(\n  preStartContextManager: ContextManager,\n  name: Key,\n  bufferApiCalls: BoundedBuffer<StartResult>\n) {\n  preStartContextManager.changeObservable.subscribe(() => {\n    const context = preStartContextManager.getContext()\n    bufferApiCalls.add((startResult) => startResult[name].setContext(context))\n  })\n}\n", "import { addEventListener, DOM_EVENT } from '../../browser/addEventListener'\nimport type { Context } from '../../tools/serialisation/context'\nimport type { Configuration } from '../configuration'\nimport { combine } from '../../tools/mergeInto'\nimport { isEmptyObject } from '../../tools/utils/objectUtils'\nimport type { ContextManager } from './contextManager'\nimport type { CustomerDataType } from './contextConstants'\n\nconst CONTEXT_STORE_KEY_PREFIX = '_dd_c'\n\nconst storageListeners: Array<{ stop: () => void }> = []\n\nexport function storeContextManager(\n  configuration: Configuration,\n  contextManager: ContextManager,\n  productKey: string,\n  customerDataType: CustomerDataType\n) {\n  const storageKey = buildStorageKey(productKey, customerDataType)\n\n  storageListeners.push(\n    addEventListener(configuration, window, DOM_EVENT.STORAGE, ({ key }) => {\n      if (storageKey === key) {\n        synchronizeWithStorage()\n      }\n    })\n  )\n  contextManager.changeObservable.subscribe(dumpToStorage)\n\n  const contextFromStorage = combine(getFromStorage(), contextManager.getContext())\n  if (!isEmptyObject(contextFromStorage)) {\n    contextManager.setContext(contextFromStorage)\n  }\n\n  function synchronizeWithStorage() {\n    contextManager.setContext(getFromStorage())\n  }\n\n  function dumpToStorage() {\n    localStorage.setItem(storageKey, JSON.stringify(contextManager.getContext()))\n  }\n\n  function getFromStorage() {\n    const rawContext = localStorage.getItem(storageKey)\n    return rawContext ? (JSON.parse(rawContext) as Context) : {}\n  }\n}\n\nexport function buildStorageKey(productKey: string, customerDataType: CustomerDataType) {\n  return `${CONTEXT_STORE_KEY_PREFIX}_${productKey}_${customerDataType}`\n}\n\nexport function removeStorageListeners() {\n  storageListeners.map((listener) => listener.stop())\n}\n", "import { combine } from './mergeInto'\n\nexport const enum HookNames {\n  Assemble,\n}\n\n// This is a workaround for an issue occurring when the Browser SDK is included in a TypeScript\n// project configured with `isolatedModules: true`. Even if the const enum is declared in this\n// module, we cannot use it directly to define the EventMap interface keys (TS error: \"Cannot access\n// ambient const enums when the '--isolatedModules' flag is provided.\").\nexport declare const HookNamesAsConst: {\n  ASSEMBLE: HookNames.Assemble\n}\n\nexport type RecursivePartialExcept<T, K extends keyof T = never> = {\n  [P in keyof T]?: T[P] extends object ? RecursivePartialExcept<T[P], never> : T[P]\n} & {\n  [P in K]: T[P]\n}\n\n// Discards the event from being sent\nexport const DISCARDED = 'DISCARDED'\n// Skips from the assembly of the event\nexport const SKIPPED = 'SKIPPED'\n\nexport type DISCARDED = typeof DISCARDED\nexport type SKIPPED = typeof SKIPPED\n\nexport type AbstractHooks = ReturnType<typeof abstractHooks>\n\nexport function abstractHooks<T extends { [K in HookNames]: (...args: any[]) => any }, E>() {\n  const callbacks: { [K in HookNames]?: Array<T[K]> } = {}\n\n  return {\n    register<K extends HookNames>(hookName: K, callback: T[K]) {\n      if (!callbacks[hookName]) {\n        callbacks[hookName] = []\n      }\n      callbacks[hookName]!.push(callback)\n      return {\n        unregister: () => {\n          callbacks[hookName] = callbacks[hookName]!.filter((cb) => cb !== callback)\n        },\n      }\n    },\n    triggerHook<K extends HookNames>(hookName: K, param: Parameters<T[K]>[0]): E | DISCARDED | undefined {\n      const hookCallbacks = callbacks[hookName] || []\n      const results = []\n\n      for (const callback of hookCallbacks) {\n        const result = callback(param)\n        if (result === DISCARDED) {\n          return DISCARDED\n        }\n        if (result === SKIPPED) {\n          continue\n        }\n\n        results.push(result)\n      }\n\n      return combine(...(results as unknown as [object, object])) as E\n    },\n  }\n}\n", "import type { Configuration } from '../configuration'\nimport { CustomerDataType } from '../context/contextConstants'\nimport { storeContextManager } from '../context/storeContextManager'\nimport { HookNames, SKIPPED } from '../../tools/abstractHooks'\nimport type { AbstractHooks } from '../../tools/abstractHooks'\nimport { isEmptyObject } from '../../tools/utils/objectUtils'\nimport { createContextManager } from '../context/contextManager'\n\nexport interface Account {\n  id: string\n  name?: string | undefined\n  [key: string]: unknown\n}\n\nexport function startAccountContext(hooks: AbstractHooks, configuration: Configuration, productKey: string) {\n  const accountContextManager = buildAccountContextManager()\n\n  if (configuration.storeContextsAcrossPages) {\n    storeContextManager(configuration, accountContextManager, productKey, CustomerDataType.Account)\n  }\n\n  hooks.register(HookNames.Assemble, () => {\n    const account = accountContextManager.getContext() as Account\n\n    if (isEmptyObject(account) || !account.id) {\n      return SKIPPED\n    }\n\n    return {\n      account,\n    }\n  })\n\n  return accountContextManager\n}\n\nexport function buildAccountContextManager() {\n  return createContextManager('account', {\n    propertiesConfig: {\n      id: { type: 'string', required: true },\n      name: { type: 'string' },\n    },\n  })\n}\n", "import type { AbstractHooks } from '../../tools/abstractHooks'\nimport { CustomerDataType } from '../context/contextConstants'\nimport { storeContextManager } from '../context/storeContextManager'\nimport { HookNames } from '../../tools/abstractHooks'\nimport { createContextManager } from '../context/contextManager'\nimport type { Configuration } from '../configuration'\n\nexport function startGlobalContext(\n  hooks: AbstractHooks,\n  configuration: Configuration,\n  productKey: string,\n  useContextNamespace: boolean\n) {\n  const globalContextManager = buildGlobalContextManager()\n\n  if (configuration.storeContextsAcrossPages) {\n    storeContextManager(configuration, globalContextManager, productKey, CustomerDataType.GlobalContext)\n  }\n\n  hooks.register(HookNames.Assemble, () => {\n    const context = globalContextManager.getContext()\n    return useContextNamespace ? { context } : context\n  })\n\n  return globalContextManager\n}\n\nexport function buildGlobalContextManager() {\n  return createContextManager('global context')\n}\n", "import type { AbstractHooks } from '../../tools/abstractHooks'\nimport { CustomerDataType } from '../context/contextConstants'\nimport { storeContextManager } from '../context/storeContextManager'\nimport { HookNames, SKIPPED } from '../../tools/abstractHooks'\nimport { createContextManager } from '../context/contextManager'\nimport type { Configuration } from '../configuration'\nimport { isEmptyObject } from '../../tools/utils/objectUtils'\nimport type { RelativeTime } from '../../tools/utils/timeUtils'\n\nexport interface User {\n  id?: string | undefined\n  email?: string | undefined\n  name?: string | undefined\n  [key: string]: unknown\n}\n\nexport function startUserContext(\n  hooks: AbstractHooks,\n  configuration: Configuration,\n  sessionManager: {\n    findTrackedSession: (startTime?: RelativeTime) => { anonymousId?: string } | undefined\n  },\n  productKey: string\n) {\n  const userContextManager = buildUserContextManager()\n\n  if (configuration.storeContextsAcrossPages) {\n    storeContextManager(configuration, userContextManager, productKey, CustomerDataType.User)\n  }\n\n  hooks.register(HookNames.Assemble, ({ eventType, startTime }) => {\n    const user = userContextManager.getContext()\n    const session = sessionManager.findTrackedSession(startTime)\n\n    if (session && session.anonymousId && !user.anonymous_id && !!configuration.trackAnonymousUser) {\n      user.anonymous_id = session.anonymousId\n    }\n\n    if (isEmptyObject(user)) {\n      return SKIPPED\n    }\n\n    return {\n      type: eventType,\n      usr: user,\n    }\n  })\n\n  return userContextManager\n}\n\nexport function buildUserContextManager() {\n  return createContextManager('user', {\n    propertiesConfig: {\n      id: { type: 'string' },\n      name: { type: 'string' },\n      email: { type: 'string' },\n    },\n  })\n}\n", "export const enum CustomerDataType {\n  FeatureFlag,\n  User,\n  GlobalContext,\n  View,\n  Account,\n}\n\n// Use a const instead of const enum to avoid inlining the enum values in the bundle and save bytes\nexport const CustomerContextKey = {\n  userContext: 'userContext',\n  globalContext: 'globalContext',\n  accountContext: 'accountContext',\n} as const\n\nexport type CustomerContextKey = (typeof CustomerContextKey)[keyof typeof CustomerContextKey]\n\n// Use a const instead of const enum to avoid inlining the enum values in the bundle and save bytes\nexport const ContextManagerMethod = {\n  getContext: 'getContext',\n  setContext: 'setContext',\n  setContextProperty: 'setContextProperty',\n  removeContextProperty: 'removeContextProperty',\n  clearContext: 'clearContext',\n} as const\n\nexport type ContextManagerMethod = (typeof ContextManagerMethod)[keyof typeof ContextManagerMethod]\n", "import { monitor } from './monitor'\nimport { noop } from './utils/functionUtils'\n\ntype Options = {\n  bytesLimit: number\n  collectStreamBody?: boolean\n}\n/**\n * Read bytes from a ReadableStream until at least `limit` bytes have been read (or until the end of\n * the stream). The callback is invoked with the at most `limit` bytes, and indicates that the limit\n * has been exceeded if more bytes were available.\n */\nexport function readBytesFromStream(\n  stream: ReadableStream<Uint8Array>,\n  callback: (error?: Error, bytes?: Uint8Array, limitExceeded?: boolean) => void,\n  options: Options\n) {\n  const reader = stream.getReader()\n  const chunks: Uint8Array[] = []\n  let readBytesCount = 0\n\n  readMore()\n\n  function readMore() {\n    reader.read().then(\n      monitor((result: ReadableStreamReadResult<Uint8Array>) => {\n        if (result.done) {\n          onDone()\n          return\n        }\n\n        if (options.collectStreamBody) {\n          chunks.push(result.value)\n        }\n        readBytesCount += result.value.length\n\n        if (readBytesCount > options.bytesLimit) {\n          onDone()\n        } else {\n          readMore()\n        }\n      }),\n      monitor((error) => callback(error))\n    )\n  }\n\n  function onDone() {\n    reader.cancel().catch(\n      // we don't care if cancel fails, but we still need to catch the error to avoid reporting it\n      // as an unhandled rejection\n      noop\n    )\n\n    let bytes: Uint8Array | undefined\n    let limitExceeded: boolean | undefined\n    if (options.collectStreamBody) {\n      let completeBuffer: Uint8Array\n      if (chunks.length === 1) {\n        // optimization: if the response is small enough to fit in a single buffer (provided by the browser), just\n        // use it directly.\n        completeBuffer = chunks[0]\n      } else {\n        // else, we need to copy buffers into a larger buffer to concatenate them.\n        completeBuffer = new Uint8Array(readBytesCount)\n        let offset = 0\n        chunks.forEach((chunk) => {\n          completeBuffer.set(chunk, offset)\n          offset += chunk.length\n        })\n      }\n      bytes = completeBuffer.slice(0, options.bytesLimit)\n      limitExceeded = completeBuffer.length > options.bytesLimit\n    }\n\n    callback(undefined, bytes, limitExceeded)\n  }\n}\n"],
  "mappings": "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",
  "names": ["e", "send", "configuration", "ExperimentalFeature", "merged", "navigator", "telemetryService", "runtimeEnvInfo", "cleanupTasks"]
}
