"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.startRumBatch = startRumBatch;
const browser_core_1 = require("@datadog/browser-core");
function startRumBatch(configuration, lifeCycle, reportError, pageMayExitObservable, sessionExpireObservable, createEncoder) {
    const replica = configuration.replica;
    const batch = (0, browser_core_1.startBatchWithReplica)(configuration, {
        endpoint: configuration.rumEndpointBuilder,
        encoder: createEncoder(2 /* DeflateEncoderStreamId.RUM */),
    }, replica && {
        endpoint: replica.rumEndpointBuilder,
        transformMessage: (message) => (0, browser_core_1.combine)(message, { application: { id: replica.applicationId } }),
        encoder: createEncoder(3 /* DeflateEncoderStreamId.RUM_REPLICA */),
    }, reportError, pageMayExitObservable, sessionExpireObservable);
    lifeCycle.subscribe(13 /* LifeCycleEventType.RUM_EVENT_COLLECTED */, (serverRumEvent) => {
        if (serverRumEvent.type === "view" /* RumEventType.VIEW */) {
            batch.upsert(serverRumEvent, serverRumEvent.view.id);
        }
        else {
            batch.add(serverRumEvent);
        }
    });
    return batch;
}
//# sourceMappingURL=startRumBatch.js.map