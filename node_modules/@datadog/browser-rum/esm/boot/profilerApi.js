import { addTelemetryDebug, monitorError, performDraw } from '@datadog/browser-core';
import { isProfilingSupported } from '../domain/profiling/profilingSupported';
import { lazyLoadProfiler } from './lazyLoadProfiler';
export function makeProfilerApi() {
    let profiler;
    function onRumStart(lifeCycle, configuration, sessionManager, viewHistory) {
        if (!isProfilingSupported() || !performDraw(configuration.profilingSampleRate)) {
            return;
        }
        lazyLoadProfiler()
            .then((createRumProfiler) => {
            if (!createRumProfiler) {
                addTelemetryDebug('[DD_RUM] Failed to lazy load the RUM Profiler');
                return;
            }
            profiler = createRumProfiler(configuration, lifeCycle, sessionManager);
            profiler.start(viewHistory.findView());
        })
            .catch(monitorError);
    }
    return {
        onRumStart,
        stop: () => {
            profiler === null || profiler === void 0 ? void 0 : profiler.stop().catch(monitorError);
        },
    };
}
//# sourceMappingURL=profilerApi.js.map