"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeProfilerApi = makeProfilerApi;
const browser_core_1 = require("@datadog/browser-core");
const profilingSupported_1 = require("../domain/profiling/profilingSupported");
const lazyLoadProfiler_1 = require("./lazyLoadProfiler");
function makeProfilerApi() {
    let profiler;
    function onRumStart(lifeCycle, configuration, sessionManager, viewHistory) {
        if (!(0, profilingSupported_1.isProfilingSupported)() || !(0, browser_core_1.performDraw)(configuration.profilingSampleRate)) {
            return;
        }
        (0, lazyLoadProfiler_1.lazyLoadProfiler)()
            .then((createRumProfiler) => {
            if (!createRumProfiler) {
                (0, browser_core_1.addTelemetryDebug)('[DD_RUM] Failed to lazy load the RUM Profiler');
                return;
            }
            profiler = createRumProfiler(configuration, lifeCycle, sessionManager);
            profiler.start(viewHistory.findView());
        })
            .catch(browser_core_1.monitorError);
    }
    return {
        onRumStart,
        stop: () => {
            profiler === null || profiler === void 0 ? void 0 : profiler.stop().catch(browser_core_1.monitorError);
        },
    };
}
//# sourceMappingURL=profilerApi.js.map