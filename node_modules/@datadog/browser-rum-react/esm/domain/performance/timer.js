import { elapsed, relativeNow, timeStampNow } from '@datadog/browser-core';
export function createTimer() {
    let duration;
    let startTime;
    let highPrecisionStartTime;
    return {
        startTimer() {
            // timeStampNow uses Date.now() internally, which is not high precision, but this is what is
            // used for other events, so we use it here as well.
            startTime = timeStampNow();
            // relativeNow uses performance.now() which is higher precision than Date.now(), so we use for
            // the duration
            highPrecisionStartTime = relativeNow();
        },
        stopTimer() {
            duration = elapsed(highPrecisionStartTime, relativeNow());
        },
        getDuration() {
            return duration;
        },
        getStartTime() {
            return startTime;
        },
    };
}
//# sourceMappingURL=timer.js.map