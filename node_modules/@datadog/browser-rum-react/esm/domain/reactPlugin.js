let globalPublicApi;
let globalConfiguration;
let globalAddEvent;
const onRumInitSubscribers = [];
const onRumStartSubscribers = [];
export function reactPlugin(configuration = {}) {
    return {
        name: 'react',
        onInit({ publicApi, initConfiguration }) {
            globalPublicApi = publicApi;
            globalConfiguration = configuration;
            for (const subscriber of onRumInitSubscribers) {
                subscriber(globalConfiguration, globalPublicApi);
            }
            if (configuration.router) {
                initConfiguration.trackViewsManually = true;
            }
        },
        onRumStart({ addEvent }) {
            globalAddEvent = addEvent;
            for (const subscriber of onRumStartSubscribers) {
                if (addEvent) {
                    subscriber(addEvent);
                }
            }
        },
        getConfigurationTelemetry() {
            return { router: !!configuration.router };
        },
    };
}
export function onRumInit(callback) {
    if (globalConfiguration && globalPublicApi) {
        callback(globalConfiguration, globalPublicApi);
    }
    else {
        onRumInitSubscribers.push(callback);
    }
}
export function onRumStart(callback) {
    if (globalAddEvent) {
        callback(globalAddEvent);
    }
    else {
        onRumStartSubscribers.push(callback);
    }
}
export function resetReactPlugin() {
    globalPublicApi = undefined;
    globalConfiguration = undefined;
    globalAddEvent = undefined;
    onRumInitSubscribers.length = 0;
    onRumStartSubscribers.length = 0;
}
//# sourceMappingURL=reactPlugin.js.map