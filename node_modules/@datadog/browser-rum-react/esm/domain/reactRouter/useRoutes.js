import { useRef } from 'react';
import { startReactRouterView } from './startReactRouterView';
export function wrapUseRoutes({ useRoutes, useLocation, matchRoutes, }) {
    return ((routes, locationArg) => {
        const location = useLocation();
        const pathname = typeof locationArg === 'string' ? locationArg : (locationArg === null || locationArg === void 0 ? void 0 : locationArg.pathname) || location.pathname;
        const pathnameRef = useRef(null);
        if (pathnameRef.current !== pathname) {
            pathnameRef.current = pathname;
            const matchedRoutes = matchRoutes(routes, pathname);
            if (matchedRoutes) {
                startReactRouterView(matchedRoutes);
            }
        }
        return useRoutes(routes, locationArg);
    });
}
//# sourceMappingURL=useRoutes.js.map