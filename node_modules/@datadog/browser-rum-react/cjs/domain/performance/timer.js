"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTimer = createTimer;
const browser_core_1 = require("@datadog/browser-core");
function createTimer() {
    let duration;
    let startTime;
    let highPrecisionStartTime;
    return {
        startTimer() {
            // timeStampNow uses Date.now() internally, which is not high precision, but this is what is
            // used for other events, so we use it here as well.
            startTime = (0, browser_core_1.timeStampNow)();
            // relativeNow uses performance.now() which is higher precision than Date.now(), so we use for
            // the duration
            highPrecisionStartTime = (0, browser_core_1.relativeNow)();
        },
        stopTimer() {
            duration = (0, browser_core_1.elapsed)(highPrecisionStartTime, (0, browser_core_1.relativeNow)());
        },
        getDuration() {
            return duration;
        },
        getStartTime() {
            return startTime;
        },
    };
}
//# sourceMappingURL=timer.js.map