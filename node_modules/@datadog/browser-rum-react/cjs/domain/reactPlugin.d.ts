import type { RumPublicApi, StartRumResult } from '@datadog/browser-rum-core';
type InitSubscriber = (configuration: ReactPluginConfiguration, rumPublicApi: RumPublicApi) => void;
type StartSubscriber = (addEvent: StartRumResult['addEvent']) => void;
export interface ReactPluginConfiguration {
    /**
     * Enable react-router integration
     */
    router?: boolean;
}
export declare function reactPlugin(configuration?: ReactPluginConfiguration): {
    name: string;
    onInit({ publicApi, initConfiguration }: {
        initConfiguration: import("@datadog/browser-rum-core").RumInitConfiguration;
        publicApi: RumPublicApi;
    }): void;
    onRumStart({ addEvent }: {
        strategy?: import("@datadog/browser-rum-core").Strategy;
        addEvent?: StartRumResult["addEvent"];
    }): void;
    getConfigurationTelemetry(): {
        router: boolean;
    };
};
export declare function onRumInit(callback: InitSubscriber): void;
export declare function onRumStart(callback: StartSubscriber): void;
export declare function resetReactPlugin(): void;
export {};
